
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD AND DIV ELSE EQUAL GEQ GREATER ID IF LARROW LEQ LESSER MUL NEG NUM OR POW RARROW SUB SWAP SWITCH WHILEStart : AxiomAxiom : Axiom CodeAxiom : Axiom FunctionAxiom : Code : Code BlockCode : BlockBlock : Exp ';'Block : If Block : IfElse Block : While Block : Switch Body : '{' '}'Body : BlockBody : '{' Code '}'Function : ID FunScope FunCases BodyFunScope : ':'FunCases : FunExtra RARROW IDFunCases : RARROW IDFunCases : FunExtraFunCases : FunExtra : FunExtra ',' IDFunExtra : IDIfScope : IFIf : IfScope AtribOp BodyElseScope : ELSEIfElse : IfScope AtribOp Body ElseScope BodyWhileScope : WHILEWhile : WhileScope '(' AtribOp ')' BodySwitchScope : SWITCHSwitch : SwitchScope Conds '{' Cases '}'Conds : Conds ',' CondConds : CondCond : ID '(' AtribOp ')'Cond : '(' AtribOp ')'Cases : Cases Case Cases : CaseCase : ID ':' BodyCase : ':' BodyExp : AtribExp : OpExp : DeclExp : DeclArrayExp : DeclAtribAtribOp : AtribNumAtribOp : OpDecl : ID IDDeclArray : ID ID DeclArraySizeDeclArraySize : DeclArraySize '[' NUM ']'DeclArraySize : '[' NUM ']'AtribArray : ID ArraySize LARROW AtribOpAtribArray : AtribOp RARROW ID ArraySizeArraySize : ArraySize '[' AtribOp ']'ArraySize : '[' AtribOp ']'DeclAtrib : ID ID LARROW AtribOpDeclAtrib : AtribOp RARROW ID IDAtribNum : ID LARROW AtribOpAtribNum : AtribOp RARROW IDAtribNum : AtribArrayAtrib : ID LARROW AtribOpAtrib : AtribOp RARROW IDAtrib : ID SWAP IDAtrib : AtribArrayOp : OpBinOpUno : NEG BaseOpUno : AccessArrayOpUno : SUB BaseOpUno : Base '?'AccessArray : ID ArraySizeOpBin : OpBin OpLogico TermPlusOpBin : TermPlusTermPlus : TermPlus OpPlus TermMultTermPlus : TermMultTermMult : TermMult OpMult TermPowTermMult : TermPowTermPow : TermPow OpPow BaseTermPow : BaseBase : OpUnoBase : '(' AtribOp ')'Base : IDBase : NUMBase : FunCallBase : '¿'FunCall : ID '(' FunArg ')'FunArg : FunRecFunArg : FunRec : FunRec ',' AtribOpFunRec : AtribOpOpLogico : ANDOpLogico : OROpLogico : LESSEROpLogico : GREATEROpLogico : LEQOpLogico : GEQOpLogico : EQUALOpPlus : ADDOpPlus : SUBOpMult : MULOpMult : DIVOpPow : POW"
    
_lr_action_items = {'ID':([0,2,3,4,5,6,8,9,10,11,17,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,85,86,87,90,91,96,97,98,99,100,101,103,104,105,106,108,109,110,111,112,116,117,118,119,120,122,123,124,125,126,127,128,129,130,132,133,134,135,137,143,144,145,147,148,149,150,151,152,153,156,],[-4,6,40,-3,-6,41,-8,-9,-10,-11,52,52,59,-63,-23,-29,-44,-70,-72,-74,-76,-77,-80,-81,-82,79,-65,79,-5,41,84,52,89,-68,52,-16,52,-7,40,-45,-79,-58,101,52,52,79,-88,-89,-90,-91,-92,-93,-94,79,-95,-96,79,-97,-98,79,-99,-67,-64,-79,-66,52,-22,40,-19,119,52,52,-24,127,40,-13,52,131,-78,136,59,52,-69,-71,-73,-75,-68,-15,143,144,-18,-50,-83,52,-53,40,-25,-57,-12,40,-56,-51,40,136,-36,40,-17,-21,-52,-26,-14,-28,-30,-35,40,-38,-37,]),'IF':([0,2,3,4,5,8,9,10,11,23,27,28,29,30,31,32,33,34,35,37,39,42,45,47,49,50,51,52,53,77,78,79,80,84,85,86,96,98,99,103,108,109,110,111,112,116,119,120,122,124,125,126,127,128,129,130,132,133,137,143,144,145,147,148,149,150,152,],[-4,24,24,-3,-6,-8,-9,-10,-11,-63,-44,-70,-72,-74,-76,-77,-80,-81,-82,-65,-5,-20,-68,-16,-7,24,-45,-79,-58,-67,-64,-79,-66,-22,24,-19,-24,24,-13,-78,-69,-71,-73,-75,-68,-15,-18,-50,-83,-53,24,-25,-57,-12,24,-56,-51,24,24,-17,-21,-52,-26,-14,-28,-30,24,]),'WHILE':([0,2,3,4,5,8,9,10,11,23,27,28,29,30,31,32,33,34,35,37,39,42,45,47,49,50,51,52,53,77,78,79,80,84,85,86,96,98,99,103,108,109,110,111,112,116,119,120,122,124,125,126,127,128,129,130,132,133,137,143,144,145,147,148,149,150,152,],[-4,25,25,-3,-6,-8,-9,-10,-11,-63,-44,-70,-72,-74,-76,-77,-80,-81,-82,-65,-5,-20,-68,-16,-7,25,-45,-79,-58,-67,-64,-79,-66,-22,25,-19,-24,25,-13,-78,-69,-71,-73,-75,-68,-15,-18,-50,-83,-53,25,-25,-57,-12,25,-56,-51,25,25,-17,-21,-52,-26,-14,-28,-30,25,]),'SWITCH':([0,2,3,4,5,8,9,10,11,23,27,28,29,30,31,32,33,34,35,37,39,42,45,47,49,50,51,52,53,77,78,79,80,84,85,86,96,98,99,103,108,109,110,111,112,116,119,120,122,124,125,126,127,128,129,130,132,133,137,143,144,145,147,148,149,150,152,],[-4,26,26,-3,-6,-8,-9,-10,-11,-63,-44,-70,-72,-74,-76,-77,-80,-81,-82,-65,-5,-20,-68,-16,-7,26,-45,-79,-58,-67,-64,-79,-66,-22,26,-19,-24,26,-13,-78,-69,-71,-73,-75,-68,-15,-18,-50,-83,-53,26,-25,-57,-12,26,-56,-51,26,26,-17,-21,-52,-26,-14,-28,-30,26,]),'(':([0,2,3,4,5,6,8,9,10,11,17,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,45,46,47,48,49,50,51,52,53,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,85,86,90,91,96,98,99,100,103,105,106,108,109,110,111,112,116,119,120,122,123,124,125,126,127,128,129,130,132,133,137,143,144,145,147,148,149,150,152,],[-4,20,20,-3,-6,46,-8,-9,-10,-11,20,55,20,60,-63,-23,-27,-29,-44,-70,-72,-74,-76,-77,-80,-81,-82,20,-65,20,-5,46,-20,20,-68,20,-16,20,-7,20,-45,46,-58,20,106,20,20,-88,-89,-90,-91,-92,-93,-94,20,-95,-96,20,-97,-98,20,-99,-67,-64,46,-66,20,-22,20,-19,20,20,-24,20,-13,20,-78,60,20,-69,-71,-73,-75,-68,-15,-18,-50,-83,20,-53,20,-25,-57,-12,20,-56,-51,20,20,-17,-21,-52,-26,-14,-28,-30,20,]),'NUM':([0,2,3,4,5,8,9,10,11,17,20,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,90,91,96,98,99,100,103,106,108,109,110,111,112,113,116,119,120,122,123,124,125,126,127,128,129,130,132,133,137,143,144,145,147,148,149,150,152,],[-4,33,33,-3,-6,-8,-9,-10,-11,33,33,-63,-23,-44,-70,-72,-74,-76,-77,-80,-81,-82,33,-65,33,-5,-20,33,-68,33,-16,33,-7,33,-45,-79,-58,33,33,33,-88,-89,-90,-91,-92,-93,-94,33,-95,-96,33,-97,-98,33,-99,-67,-64,-79,-66,33,115,-22,33,-19,33,33,-24,33,-13,33,-78,33,-69,-71,-73,-75,-68,141,-15,-18,-50,-83,33,-53,33,-25,-57,-12,33,-56,-51,33,33,-17,-21,-52,-26,-14,-28,-30,33,]),'¿':([0,2,3,4,5,8,9,10,11,17,20,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,85,86,90,91,96,98,99,100,103,106,108,109,110,111,112,116,119,120,122,123,124,125,126,127,128,129,130,132,133,137,143,144,145,147,148,149,150,152,],[-4,35,35,-3,-6,-8,-9,-10,-11,35,35,-63,-23,-44,-70,-72,-74,-76,-77,-80,-81,-82,35,-65,35,-5,-20,35,-68,35,-16,35,-7,35,-45,-79,-58,35,35,35,-88,-89,-90,-91,-92,-93,-94,35,-95,-96,35,-97,-98,35,-99,-67,-64,-79,-66,35,-22,35,-19,35,35,-24,35,-13,35,-78,35,-69,-71,-73,-75,-68,-15,-18,-50,-83,35,-53,35,-25,-57,-12,35,-56,-51,35,35,-17,-21,-52,-26,-14,-28,-30,35,]),'NEG':([0,2,3,4,5,8,9,10,11,17,20,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,85,86,90,91,96,98,99,100,103,106,108,109,110,111,112,116,119,120,122,123,124,125,126,127,128,129,130,132,133,137,143,144,145,147,148,149,150,152,],[-4,36,36,-3,-6,-8,-9,-10,-11,36,36,-63,-23,-44,-70,-72,-74,-76,-77,-80,-81,-82,36,-65,36,-5,-20,36,-68,36,-16,36,-7,36,-45,-79,-58,36,36,36,-88,-89,-90,-91,-92,-93,-94,36,-95,-96,36,-97,-98,36,-99,-67,-64,-79,-66,36,-22,36,-19,36,36,-24,36,-13,36,-78,36,-69,-71,-73,-75,-68,-15,-18,-50,-83,36,-53,36,-25,-57,-12,36,-56,-51,36,36,-17,-21,-52,-26,-14,-28,-30,36,]),'SUB':([0,2,3,4,5,6,8,9,10,11,17,20,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,85,86,90,91,96,98,99,100,103,106,108,109,110,111,112,116,119,120,122,123,124,125,126,127,128,129,130,132,133,137,143,144,145,147,148,149,150,152,],[-4,38,38,-3,-6,-79,-8,-9,-10,-11,38,38,-63,-23,-44,71,-72,-74,-76,-77,-80,-81,-82,38,-65,38,-5,-79,-20,38,-68,38,-16,38,-7,38,-45,-79,-58,38,38,38,-88,-89,-90,-91,-92,-93,-94,38,-95,-96,38,-97,-98,38,-99,-67,-64,-79,-66,38,-22,38,-19,38,38,-24,38,-13,38,-78,38,71,-71,-73,-75,-68,-15,-18,-50,-83,38,-53,38,-25,-57,-12,38,-56,-51,38,38,-17,-21,-52,-26,-14,-28,-30,38,]),'$end':([0,1,2,3,4,5,8,9,10,11,39,49,96,99,116,128,147,148,149,150,],[-4,0,-1,-2,-3,-6,-8,-9,-10,-11,-5,-7,-24,-13,-15,-12,-26,-14,-28,-30,]),'}':([5,8,9,10,11,39,49,96,98,99,128,129,134,135,147,148,149,150,151,153,156,],[-6,-8,-9,-10,-11,-5,-7,-24,128,-13,-12,148,150,-36,-26,-14,-28,-30,-35,-38,-37,]),'LARROW':([6,40,41,45,52,124,145,],[43,43,82,90,100,-53,-52,]),'SWAP':([6,40,],[44,44,]),'?':([6,31,32,33,34,35,37,40,45,52,77,78,79,80,103,111,112,122,124,145,],[-79,77,-77,-80,-81,-82,-65,-79,-68,-79,-67,77,-79,77,-78,77,-68,-83,-53,-52,]),'POW':([6,30,31,32,33,34,35,37,40,45,52,77,78,79,80,103,110,111,112,122,124,145,],[-79,76,-76,-77,-80,-81,-82,-65,-79,-68,-79,-67,-64,-79,-66,-78,76,-75,-68,-83,-53,-52,]),'MUL':([6,29,30,31,32,33,34,35,37,40,45,52,77,78,79,80,103,109,110,111,112,122,124,145,],[-79,73,-74,-76,-77,-80,-81,-82,-65,-79,-68,-79,-67,-64,-79,-66,-78,73,-73,-75,-68,-83,-53,-52,]),'DIV':([6,29,30,31,32,33,34,35,37,40,45,52,77,78,79,80,103,109,110,111,112,122,124,145,],[-79,74,-74,-76,-77,-80,-81,-82,-65,-79,-68,-79,-67,-64,-79,-66,-78,74,-73,-75,-68,-83,-53,-52,]),'ADD':([6,28,29,30,31,32,33,34,35,37,40,45,52,77,78,79,80,103,108,109,110,111,112,122,124,145,],[-79,70,-72,-74,-76,-77,-80,-81,-82,-65,-79,-68,-79,-67,-64,-79,-66,-78,70,-71,-73,-75,-68,-83,-53,-52,]),'AND':([6,23,28,29,30,31,32,33,34,35,37,40,45,52,77,78,79,80,103,108,109,110,111,112,122,124,145,],[-79,62,-70,-72,-74,-76,-77,-80,-81,-82,-65,-79,-68,-79,-67,-64,-79,-66,-78,-69,-71,-73,-75,-68,-83,-53,-52,]),'OR':([6,23,28,29,30,31,32,33,34,35,37,40,45,52,77,78,79,80,103,108,109,110,111,112,122,124,145,],[-79,63,-70,-72,-74,-76,-77,-80,-81,-82,-65,-79,-68,-79,-67,-64,-79,-66,-78,-69,-71,-73,-75,-68,-83,-53,-52,]),'LESSER':([6,23,28,29,30,31,32,33,34,35,37,40,45,52,77,78,79,80,103,108,109,110,111,112,122,124,145,],[-79,64,-70,-72,-74,-76,-77,-80,-81,-82,-65,-79,-68,-79,-67,-64,-79,-66,-78,-69,-71,-73,-75,-68,-83,-53,-52,]),'GREATER':([6,23,28,29,30,31,32,33,34,35,37,40,45,52,77,78,79,80,103,108,109,110,111,112,122,124,145,],[-79,65,-70,-72,-74,-76,-77,-80,-81,-82,-65,-79,-68,-79,-67,-64,-79,-66,-78,-69,-71,-73,-75,-68,-83,-53,-52,]),'LEQ':([6,23,28,29,30,31,32,33,34,35,37,40,45,52,77,78,79,80,103,108,109,110,111,112,122,124,145,],[-79,66,-70,-72,-74,-76,-77,-80,-81,-82,-65,-79,-68,-79,-67,-64,-79,-66,-78,-69,-71,-73,-75,-68,-83,-53,-52,]),'GEQ':([6,23,28,29,30,31,32,33,34,35,37,40,45,52,77,78,79,80,103,108,109,110,111,112,122,124,145,],[-79,67,-70,-72,-74,-76,-77,-80,-81,-82,-65,-79,-68,-79,-67,-64,-79,-66,-78,-69,-71,-73,-75,-68,-83,-53,-52,]),'EQUAL':([6,23,28,29,30,31,32,33,34,35,37,40,45,52,77,78,79,80,103,108,109,110,111,112,122,124,145,],[-79,68,-70,-72,-74,-76,-77,-80,-81,-82,-65,-79,-68,-79,-67,-64,-79,-66,-78,-69,-71,-73,-75,-68,-83,-53,-52,]),';':([6,7,12,13,14,15,16,22,23,27,28,29,30,31,32,33,34,35,37,40,41,45,51,52,53,77,78,79,80,81,88,89,101,103,108,109,110,111,112,114,120,122,124,127,130,131,132,142,145,155,],[-79,49,-39,-40,-41,-42,-43,-62,-63,-44,-70,-72,-74,-76,-77,-80,-81,-82,-65,-79,-46,-68,-45,-79,-58,-67,-64,-79,-66,-47,-59,-61,-60,-78,-69,-71,-73,-75,-68,-54,-50,-83,-53,-57,-56,-55,-51,-49,-52,-48,]),'RARROW':([6,13,18,22,23,27,28,29,30,31,32,33,34,35,37,40,42,45,47,50,51,52,53,56,77,78,79,80,84,86,88,94,95,101,102,103,107,108,109,110,111,112,114,120,121,122,124,127,130,132,139,144,145,146,],[-79,-45,54,-58,-63,-44,-70,-72,-74,-76,-77,-80,-81,-82,-65,-79,87,-68,-16,97,-45,-79,-58,97,-67,-64,-79,-66,-22,117,97,97,97,-57,97,-78,97,-69,-71,-73,-75,-68,97,97,97,-83,-53,-57,97,-51,97,-21,-52,97,]),':':([6,8,9,10,11,49,96,99,104,128,134,135,136,147,148,149,150,151,153,156,],[47,-8,-9,-10,-11,-7,-24,-13,137,-12,137,-36,152,-26,-14,-28,-30,-35,-38,-37,]),'[':([6,40,41,45,52,79,81,101,112,124,127,132,142,145,155,],[48,48,83,91,48,48,113,48,91,-53,48,91,-49,-52,-48,]),'ELSE':([8,9,10,11,49,96,99,128,147,148,149,150,],[-8,-9,-10,-11,-7,126,-13,-12,-26,-14,-28,-30,]),'{':([23,27,28,29,30,31,32,33,34,35,37,42,45,47,50,51,52,53,57,58,77,78,79,80,84,85,86,103,108,109,110,111,112,119,120,122,124,125,126,127,130,132,133,137,138,140,143,144,145,152,154,],[-63,-44,-70,-72,-74,-76,-77,-80,-81,-82,-65,-20,-68,-16,98,-45,-79,-58,104,-32,-67,-64,-79,-66,-22,98,-19,-78,-69,-71,-73,-75,-68,-18,-50,-83,-53,98,-25,-57,-56,-51,98,98,-31,-34,-17,-21,-52,98,-33,]),')':([23,27,28,29,30,31,32,33,34,35,37,45,46,51,52,53,56,77,78,79,80,92,93,94,102,103,107,108,109,110,111,112,120,122,124,127,130,132,139,145,146,],[-63,-44,-70,-72,-74,-76,-77,-80,-81,-82,-65,-68,-85,-45,-79,-58,103,-67,-64,-79,-66,122,-84,-87,133,-78,140,-69,-71,-73,-75,-68,-50,-83,-53,-57,-56,-51,154,-52,-86,]),',':([23,27,28,29,30,31,32,33,34,35,37,45,51,52,53,57,58,77,78,79,80,84,86,93,94,103,108,109,110,111,112,120,122,124,127,130,132,138,140,144,145,146,154,],[-63,-44,-70,-72,-74,-76,-77,-80,-81,-82,-65,-68,-45,-79,-58,105,-32,-67,-64,-79,-66,-22,118,123,-87,-78,-69,-71,-73,-75,-68,-50,-83,-53,-57,-56,-51,-31,-34,-21,-52,-86,-33,]),']':([23,27,28,29,30,31,32,33,34,35,37,45,51,52,53,77,78,79,80,95,103,108,109,110,111,112,115,120,121,122,124,127,130,132,141,145,],[-63,-44,-70,-72,-74,-76,-77,-80,-81,-82,-65,-68,-45,-79,-58,-67,-64,-79,-66,124,-78,-69,-71,-73,-75,-68,142,-50,145,-83,-53,-57,-56,-51,155,-52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Start':([0,],[1,]),'Axiom':([0,],[2,]),'Code':([2,98,],[3,129,]),'Function':([2,],[4,]),'Block':([2,3,50,85,98,125,129,133,137,152,],[5,39,99,99,5,99,39,99,99,99,]),'Exp':([2,3,50,85,98,125,129,133,137,152,],[7,7,7,7,7,7,7,7,7,7,]),'If':([2,3,50,85,98,125,129,133,137,152,],[8,8,8,8,8,8,8,8,8,8,]),'IfElse':([2,3,50,85,98,125,129,133,137,152,],[9,9,9,9,9,9,9,9,9,9,]),'While':([2,3,50,85,98,125,129,133,137,152,],[10,10,10,10,10,10,10,10,10,10,]),'Switch':([2,3,50,85,98,125,129,133,137,152,],[11,11,11,11,11,11,11,11,11,11,]),'Atrib':([2,3,50,85,98,125,129,133,137,152,],[12,12,12,12,12,12,12,12,12,12,]),'Op':([2,3,17,20,43,46,48,50,55,60,82,85,90,91,98,100,106,123,125,129,133,137,152,],[13,13,51,51,51,51,51,13,51,51,51,13,51,51,13,51,51,51,13,13,13,13,13,]),'Decl':([2,3,50,85,98,125,129,133,137,152,],[14,14,14,14,14,14,14,14,14,14,]),'DeclArray':([2,3,50,85,98,125,129,133,137,152,],[15,15,15,15,15,15,15,15,15,15,]),'DeclAtrib':([2,3,50,85,98,125,129,133,137,152,],[16,16,16,16,16,16,16,16,16,16,]),'IfScope':([2,3,50,85,98,125,129,133,137,152,],[17,17,17,17,17,17,17,17,17,17,]),'AtribOp':([2,3,17,20,43,46,48,50,55,60,82,85,90,91,98,100,106,123,125,129,133,137,152,],[18,18,50,56,88,94,95,18,102,107,114,18,120,121,18,130,139,146,18,18,18,18,18,]),'WhileScope':([2,3,50,85,98,125,129,133,137,152,],[19,19,19,19,19,19,19,19,19,19,]),'SwitchScope':([2,3,50,85,98,125,129,133,137,152,],[21,21,21,21,21,21,21,21,21,21,]),'AtribArray':([2,3,17,20,43,46,48,50,55,60,82,85,90,91,98,100,106,123,125,129,133,137,152,],[22,22,53,53,53,53,53,22,53,53,53,22,53,53,22,53,53,53,22,22,22,22,22,]),'OpBin':([2,3,17,20,43,46,48,50,55,60,82,85,90,91,98,100,106,123,125,129,133,137,152,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'AtribNum':([2,3,17,20,43,46,48,50,55,60,82,85,90,91,98,100,106,123,125,129,133,137,152,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'TermPlus':([2,3,17,20,43,46,48,50,55,60,61,82,85,90,91,98,100,106,123,125,129,133,137,152,],[28,28,28,28,28,28,28,28,28,28,108,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'TermMult':([2,3,17,20,43,46,48,50,55,60,61,69,82,85,90,91,98,100,106,123,125,129,133,137,152,],[29,29,29,29,29,29,29,29,29,29,29,109,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TermPow':([2,3,17,20,43,46,48,50,55,60,61,69,72,82,85,90,91,98,100,106,123,125,129,133,137,152,],[30,30,30,30,30,30,30,30,30,30,30,30,110,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'Base':([2,3,17,20,36,38,43,46,48,50,55,60,61,69,72,75,82,85,90,91,98,100,106,123,125,129,133,137,152,],[31,31,31,31,78,80,31,31,31,31,31,31,31,31,31,111,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'OpUno':([2,3,17,20,36,38,43,46,48,50,55,60,61,69,72,75,82,85,90,91,98,100,106,123,125,129,133,137,152,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'FunCall':([2,3,17,20,36,38,43,46,48,50,55,60,61,69,72,75,82,85,90,91,98,100,106,123,125,129,133,137,152,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'AccessArray':([2,3,17,20,36,38,43,46,48,50,55,60,61,69,72,75,82,85,90,91,98,100,106,123,125,129,133,137,152,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'FunScope':([6,],[42,]),'ArraySize':([6,40,52,79,101,127,],[45,45,45,112,132,132,]),'Conds':([21,],[57,]),'Cond':([21,105,],[58,138,]),'OpLogico':([23,],[61,]),'OpPlus':([28,108,],[69,69,]),'OpMult':([29,109,],[72,72,]),'OpPow':([30,110,],[75,75,]),'DeclArraySize':([41,],[81,]),'FunCases':([42,],[85,]),'FunExtra':([42,],[86,]),'FunArg':([46,],[92,]),'FunRec':([46,],[93,]),'Body':([50,85,125,133,137,152,],[96,116,147,149,153,156,]),'ElseScope':([96,],[125,]),'Cases':([104,],[134,]),'Case':([104,134,],[135,151,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Start","S'",1,None,None,None),
  ('Start -> Axiom','Start',1,'p_start','yacc.py',11),
  ('Axiom -> Axiom Code','Axiom',2,'p_axiom_code','yacc.py',17),
  ('Axiom -> Axiom Function','Axiom',2,'p_axiom_function','yacc.py',23),
  ('Axiom -> <empty>','Axiom',0,'p_axiom_empty','yacc.py',29),
  ('Code -> Code Block','Code',2,'p_code_block','yacc.py',34),
  ('Code -> Block','Code',1,'p_code_empty','yacc.py',39),
  ('Block -> Exp ;','Block',2,'p_block_exp','yacc.py',44),
  ('Block -> If','Block',1,'p_block_if','yacc.py',49),
  ('Block -> IfElse','Block',1,'p_block_ifelse','yacc.py',54),
  ('Block -> While','Block',1,'p_block_while','yacc.py',59),
  ('Block -> Switch','Block',1,'p_block_switch','yacc.py',64),
  ('Body -> { }','Body',2,'p_body_empty','yacc.py',73),
  ('Body -> Block','Body',1,'p_body_block','yacc.py',78),
  ('Body -> { Code }','Body',3,'p_body_code','yacc.py',83),
  ('Function -> ID FunScope FunCases Body','Function',4,'p_function','yacc.py',88),
  ('FunScope -> :','FunScope',1,'p_funscope','yacc.py',117),
  ('FunCases -> FunExtra RARROW ID','FunCases',3,'p_funcases_funextra_rarrow','yacc.py',123),
  ('FunCases -> RARROW ID','FunCases',2,'p_funcases_rarrow','yacc.py',143),
  ('FunCases -> FunExtra','FunCases',1,'p_funcases_funextra','yacc.py',153),
  ('FunCases -> <empty>','FunCases',0,'p_funcases_empty','yacc.py',158),
  ('FunExtra -> FunExtra , ID','FunExtra',3,'p_funextra_rec','yacc.py',163),
  ('FunExtra -> ID','FunExtra',1,'p_funextra_empty','yacc.py',169),
  ('IfScope -> IF','IfScope',1,'p_if_scope','yacc.py',174),
  ('If -> IfScope AtribOp Body','If',3,'p_if','yacc.py',180),
  ('ElseScope -> ELSE','ElseScope',1,'p_else_scope','yacc.py',192),
  ('IfElse -> IfScope AtribOp Body ElseScope Body','IfElse',5,'p_ifelse','yacc.py',200),
  ('WhileScope -> WHILE','WhileScope',1,'p_while_scope','yacc.py',215),
  ('While -> WhileScope ( AtribOp ) Body','While',5,'p_while','yacc.py',221),
  ('SwitchScope -> SWITCH','SwitchScope',1,'p_switch_scope','yacc.py',236),
  ('Switch -> SwitchScope Conds { Cases }','Switch',5,'p_switch','yacc.py',248),
  ('Conds -> Conds , Cond','Conds',3,'p_conds_rec','yacc.py',288),
  ('Conds -> Cond','Conds',1,'p_conds_base','yacc.py',294),
  ('Cond -> ID ( AtribOp )','Cond',4,'p_cond_id','yacc.py',299),
  ('Cond -> ( AtribOp )','Cond',3,'p_cond_empty','yacc.py',305),
  ('Cases -> Cases Case','Cases',2,'p_cases_rec','yacc.py',311),
  ('Cases -> Case','Cases',1,'p_cases_base','yacc.py',317),
  ('Case -> ID : Body','Case',3,'p_case_id','yacc.py',322),
  ('Case -> : Body','Case',2,'p_case_empty','yacc.py',329),
  ('Exp -> Atrib','Exp',1,'p_exp_atrib','yacc.py',336),
  ('Exp -> Op','Exp',1,'p_exp_op','yacc.py',341),
  ('Exp -> Decl','Exp',1,'p_exp_decl','yacc.py',346),
  ('Exp -> DeclArray','Exp',1,'p_exp_declarray','yacc.py',351),
  ('Exp -> DeclAtrib','Exp',1,'p_exp_declatrib','yacc.py',356),
  ('AtribOp -> AtribNum','AtribOp',1,'p_atribop_atribnum','yacc.py',361),
  ('AtribOp -> Op','AtribOp',1,'p_atribop_op','yacc.py',366),
  ('Decl -> ID ID','Decl',2,'p_decl','yacc.py',371),
  ('DeclArray -> ID ID DeclArraySize','DeclArray',3,'p_declarray','yacc.py',394),
  ('DeclArraySize -> DeclArraySize [ NUM ]','DeclArraySize',4,'p_declarraysize_rec','yacc.py',418),
  ('DeclArraySize -> [ NUM ]','DeclArraySize',3,'p_declarraysize_empty','yacc.py',424),
  ('AtribArray -> ID ArraySize LARROW AtribOp','AtribArray',4,'p_atribarray_Leftatribop','yacc.py',429),
  ('AtribArray -> AtribOp RARROW ID ArraySize','AtribArray',4,'p_atribarray_Rightatribop','yacc.py',452),
  ('ArraySize -> ArraySize [ AtribOp ]','ArraySize',4,'p_arraysize_rec','yacc.py',480),
  ('ArraySize -> [ AtribOp ]','ArraySize',3,'p_arraysize_empty','yacc.py',485),
  ('DeclAtrib -> ID ID LARROW AtribOp','DeclAtrib',4,'p_declatrib_left','yacc.py',490),
  ('DeclAtrib -> AtribOp RARROW ID ID','DeclAtrib',4,'p_declatrib_right','yacc.py',511),
  ('AtribNum -> ID LARROW AtribOp','AtribNum',3,'p_atribnum_left','yacc.py',532),
  ('AtribNum -> AtribOp RARROW ID','AtribNum',3,'p_atribnum_right','yacc.py',537),
  ('AtribNum -> AtribArray','AtribNum',1,'p_atribnum_array','yacc.py',543),
  ('Atrib -> ID LARROW AtribOp','Atrib',3,'p_atrib_left','yacc.py',548),
  ('Atrib -> AtribOp RARROW ID','Atrib',3,'p_atrib_right','yacc.py',553),
  ('Atrib -> ID SWAP ID','Atrib',3,'p_atrib_equiv','yacc.py',558),
  ('Atrib -> AtribArray','Atrib',1,'p_atrib_array','yacc.py',581),
  ('Op -> OpBin','Op',1,'p_op_opbin','yacc.py',591),
  ('OpUno -> NEG Base','OpUno',2,'p_opuno_neg','yacc.py',596),
  ('OpUno -> AccessArray','OpUno',1,'p_opuno_accessarray','yacc.py',601),
  ('OpUno -> SUB Base','OpUno',2,'p_opuno_minus','yacc.py',606),
  ('OpUno -> Base ?','OpUno',2,'p_opuno_print','yacc.py',611),
  ('AccessArray -> ID ArraySize','AccessArray',2,'p_accessarray','yacc.py',617),
  ('OpBin -> OpBin OpLogico TermPlus','OpBin',3,'p_opbin_rec','yacc.py',632),
  ('OpBin -> TermPlus','OpBin',1,'p_opbin_base','yacc.py',637),
  ('TermPlus -> TermPlus OpPlus TermMult','TermPlus',3,'p_termplus_rec','yacc.py',642),
  ('TermPlus -> TermMult','TermPlus',1,'p_termplus_base','yacc.py',647),
  ('TermMult -> TermMult OpMult TermPow','TermMult',3,'p_termmult_rec','yacc.py',652),
  ('TermMult -> TermPow','TermMult',1,'p_termmult_base','yacc.py',657),
  ('TermPow -> TermPow OpPow Base','TermPow',3,'p_termpow_rec','yacc.py',662),
  ('TermPow -> Base','TermPow',1,'p_termpow_base','yacc.py',667),
  ('Base -> OpUno','Base',1,'p_base_opuno','yacc.py',671),
  ('Base -> ( AtribOp )','Base',3,'p_base_exp','yacc.py',675),
  ('Base -> ID','Base',1,'p_base_id','yacc.py',680),
  ('Base -> NUM','Base',1,'p_base_num','yacc.py',693),
  ('Base -> FunCall','Base',1,'p_base_funcall','yacc.py',698),
  ('Base -> ¿','Base',1,'p_base_read','yacc.py',703),
  ('FunCall -> ID ( FunArg )','FunCall',4,'p_funcall','yacc.py',708),
  ('FunArg -> FunRec','FunArg',1,'p_funarg_funrec','yacc.py',720),
  ('FunArg -> <empty>','FunArg',0,'p_funarg_empty','yacc.py',725),
  ('FunRec -> FunRec , AtribOp','FunRec',3,'p_funrec_rec','yacc.py',730),
  ('FunRec -> AtribOp','FunRec',1,'p_funrec_base','yacc.py',735),
  ('OpLogico -> AND','OpLogico',1,'p_oplogico_and','yacc.py',740),
  ('OpLogico -> OR','OpLogico',1,'p_oplogico_or','yacc.py',745),
  ('OpLogico -> LESSER','OpLogico',1,'p_oplogico_lesser','yacc.py',750),
  ('OpLogico -> GREATER','OpLogico',1,'p_oplogico_greater','yacc.py',755),
  ('OpLogico -> LEQ','OpLogico',1,'p_oplogico_leq','yacc.py',760),
  ('OpLogico -> GEQ','OpLogico',1,'p_oplogico_geq','yacc.py',765),
  ('OpLogico -> EQUAL','OpLogico',1,'p_oplogico_equal','yacc.py',770),
  ('OpPlus -> ADD','OpPlus',1,'p_opplus_add','yacc.py',775),
  ('OpPlus -> SUB','OpPlus',1,'p_opplus_sub','yacc.py',780),
  ('OpMult -> MUL','OpMult',1,'p_opmult_mul','yacc.py',785),
  ('OpMult -> DIV','OpMult',1,'p_opmult_div','yacc.py',790),
  ('OpPow -> POW','OpPow',1,'p_oppow','yacc.py',795),
]
