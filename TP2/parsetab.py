
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD AND DIV ELSE EQUAL GEQ GREATER ID IF LARROW LEQ LESSER MUL NEG NUM OR POW RARROW SUB SWAP SWITCH WHILEStart : AxiomAxiom : Axiom CodeAxiom : Axiom FunctionAxiom : Code : Code BlockCode : BlockBlock : Exp ';'Block : If Block : IfElse Block : While Block : Switch Body : '{' '}'Body : BlockBody : '{' Code '}'Function : ID FunScope FunCases BodyFunScope : ':'FunCases : FunExtra RARROW IDFunCases : RARROW IDFunCases : FunExtraFunCases : FunExtra : FunExtra ',' IDFunExtra : IDIfScope : IFIf : IfScope Exp BodyElseScope : ELSEIfElse : IfScope Exp Body ElseScope BodyWhileScope : WHILEWhile : WhileScope '(' Exp ')' BodySwitchScope : SWITCHSwitch : SwitchScope Conds '{' Cases '}'Conds : Conds ',' CondConds : CondCond : ID '(' AtribOp ')'Cond : '(' AtribOp ')'Cases : Cases Case Cases : CaseCase : ID ':' BodyCase : ':' BodyExp : AtribExp : OpExp : DeclExp : DeclArrayExp : DeclAtribAtribOp : AtribNumAtribOp : OpDecl : ID IDDeclArray : ID ID DeclArraySizeDeclArraySize : DeclArraySize '[' NUM ']'DeclArraySize : AtribArray : ID ArraySize LARROW AtribOpAtribArray : AtribOp RARROW ID ArraySizeArraySize : ArraySize '[' AtribOp ']'ArraySize : '[' AtribOp ']'DeclAtrib : ID ID LARROW AtribOpDeclAtrib : AtribOp RARROW ID IDAtribNum : ID LARROW AtribOpAtribNum : AtribOp LARROW IDAtribNum : AtribArrayAtrib : ID LARROW AtribOpAtrib : AtribOp RARROW IDAtrib : ID SWAP IDAtrib : AtribArrayOp : OpUnoOp : OpBinOpUno : NEG AtribOpOpUno : AccessArrayOpUno : SUB AtribOpAccessArray : ID ArraySizeOpBin : OpBin OpLogico TermPlusOpBin : TermPlusTermPlus : TermPlus OpPlus TermMultTermPlus : TermMultTermMult : TermMult OpMult TermPowTermMult : TermPowTermPow : TermPow OpPow BaseTermPow : BaseBase : '(' AtribOp ')'Base : IDBase : NUMBase : FunCallFunCall : ID '(' FunArg ')'FunArg : FunRecFunArg : FunRec : FunRec ',' AtribOpFunRec : AtribOpOpLogico : ANDOpLogico : OROpLogico : LESSEROpLogico : GREATEROpLogico : LEQOpLogico : GEQOpLogico : EQUALOpPlus : ADDOpPlus : SUBOpMult : MULOpMult : DIVOpPow : POW"
    
_lr_action_items = {'ID':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,19,20,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,97,98,99,100,101,102,104,105,106,107,108,109,110,112,113,114,115,116,117,119,120,121,122,123,124,125,126,128,129,130,132,136,137,139,140,141,143,144,145,146,147,148,149,151,152,],[-4,6,39,-3,-6,40,-8,-9,-10,-11,-39,-40,-41,-42,-43,39,53,57,-62,-63,-64,-23,-29,-44,53,-66,53,-70,-72,-74,-76,-79,-80,-5,40,-46,81,53,86,-68,53,-16,53,-7,39,39,-45,-78,-58,53,104,105,107,-86,-87,-88,-89,-90,-91,-92,-65,-67,107,-93,-94,107,-95,-96,107,-97,-47,53,-22,39,-19,116,-59,-61,53,53,-24,39,-13,-77,127,53,131,57,53,136,-57,-69,-78,-71,-73,-75,-54,-15,139,140,-18,-50,-81,53,-53,39,-25,-12,39,39,-56,131,-36,39,-55,-51,-17,-21,-52,-26,-14,-28,-30,-35,39,-38,-48,-37,]),'IF':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,22,23,24,28,30,32,33,34,35,36,37,38,39,40,41,44,46,48,49,52,53,54,69,70,79,81,82,83,85,86,93,94,95,97,104,105,106,107,108,109,110,112,113,116,117,119,121,122,123,124,125,126,128,132,136,137,139,140,141,143,144,145,146,148,151,],[-4,25,25,-3,-6,-8,-9,-10,-11,-39,-40,-41,-42,-43,-62,-63,-64,-44,-66,-70,-72,-74,-76,-79,-80,-5,-78,-46,-20,-68,-16,-7,25,-45,-78,-58,-65,-67,-47,-22,25,-19,-59,-61,-24,25,-13,-77,-60,-57,-69,-78,-71,-73,-75,-54,-15,-18,-50,-81,-53,25,-25,-12,25,25,-56,25,-55,-51,-17,-21,-52,-26,-14,-28,-30,25,-48,]),'WHILE':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,22,23,24,28,30,32,33,34,35,36,37,38,39,40,41,44,46,48,49,52,53,54,69,70,79,81,82,83,85,86,93,94,95,97,104,105,106,107,108,109,110,112,113,116,117,119,121,122,123,124,125,126,128,132,136,137,139,140,141,143,144,145,146,148,151,],[-4,26,26,-3,-6,-8,-9,-10,-11,-39,-40,-41,-42,-43,-62,-63,-64,-44,-66,-70,-72,-74,-76,-79,-80,-5,-78,-46,-20,-68,-16,-7,26,-45,-78,-58,-65,-67,-47,-22,26,-19,-59,-61,-24,26,-13,-77,-60,-57,-69,-78,-71,-73,-75,-54,-15,-18,-50,-81,-53,26,-25,-12,26,26,-56,26,-55,-51,-17,-21,-52,-26,-14,-28,-30,26,-48,]),'SWITCH':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,22,23,24,28,30,32,33,34,35,36,37,38,39,40,41,44,46,48,49,52,53,54,69,70,79,81,82,83,85,86,93,94,95,97,104,105,106,107,108,109,110,112,113,116,117,119,121,122,123,124,125,126,128,132,136,137,139,140,141,143,144,145,146,148,151,],[-4,27,27,-3,-6,-8,-9,-10,-11,-39,-40,-41,-42,-43,-62,-63,-64,-44,-66,-70,-72,-74,-76,-79,-80,-5,-78,-46,-20,-68,-16,-7,27,-45,-78,-58,-65,-67,-47,-22,27,-19,-59,-61,-24,27,-13,-77,-60,-57,-69,-78,-71,-73,-75,-54,-15,-18,-50,-81,-53,27,-25,-12,27,27,-56,27,-55,-51,-17,-21,-52,-26,-14,-28,-30,27,-48,]),'NEG':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,17,19,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,58,69,70,79,80,81,82,83,85,86,87,88,93,94,95,97,99,102,104,105,106,107,108,109,110,112,113,116,117,119,120,121,122,123,124,125,126,128,132,136,137,139,140,141,143,144,145,146,148,151,],[-4,29,29,-3,-6,-8,-9,-10,-11,-39,-40,-41,-42,-43,29,29,-62,-63,-64,-23,-44,29,-66,29,-70,-72,-74,-76,-79,-80,-5,-78,-46,-20,29,-68,29,-16,29,-7,29,29,-45,-78,-58,29,-65,-67,-47,29,-22,29,-19,-59,-61,29,29,-24,29,-13,-77,29,29,-60,-57,-69,-78,-71,-73,-75,-54,-15,-18,-50,-81,29,-53,29,-25,-12,29,29,-56,29,-55,-51,-17,-21,-52,-26,-14,-28,-30,29,-48,]),'SUB':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,19,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,58,69,70,79,80,81,82,83,85,86,87,88,93,94,95,97,99,102,104,105,106,107,108,109,110,112,113,116,117,119,120,121,122,123,124,125,126,128,132,136,137,139,140,141,143,144,145,146,148,151,],[-4,31,31,-3,-6,-78,-8,-9,-10,-11,-39,-40,-41,-42,-43,31,31,-62,-63,-64,-23,-44,31,-66,31,73,-72,-74,-76,-79,-80,-5,-78,-46,-20,31,-68,31,-16,31,-7,31,31,-45,-78,-58,31,-65,-67,-47,31,-22,31,-19,-59,-61,31,31,-24,31,-13,-77,31,31,-60,-57,73,-78,-71,-73,-75,-54,-15,-18,-50,-81,31,-53,31,-25,-12,31,31,-56,31,-55,-51,-17,-21,-52,-26,-14,-28,-30,31,-48,]),'(':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,93,94,95,97,99,101,102,104,105,106,107,108,109,110,112,113,116,117,119,120,121,122,123,124,125,126,128,132,136,137,139,140,141,143,144,145,146,148,151,],[-4,19,19,-3,-6,45,-8,-9,-10,-11,-39,-40,-41,-42,-43,19,50,19,58,-62,-63,-64,-23,-27,-29,-44,19,-66,19,-70,-72,-74,-76,-79,-80,-5,45,-46,-20,19,-68,19,-16,19,-7,19,19,-45,45,-58,102,19,19,-86,-87,-88,-89,-90,-91,-92,-65,-67,19,-93,-94,19,-95,-96,19,-97,-47,19,-22,19,-19,-59,-61,19,19,-24,19,-13,-77,19,58,19,-60,-57,-69,45,-71,-73,-75,-54,-15,-18,-50,-81,19,-53,19,-25,-12,19,19,-56,19,-55,-51,-17,-21,-52,-26,-14,-28,-30,19,-48,]),'NUM':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,17,19,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,93,94,95,97,99,102,104,105,106,107,108,109,110,111,112,113,116,117,119,120,121,122,123,124,125,126,128,132,136,137,139,140,141,143,144,145,146,148,151,],[-4,36,36,-3,-6,-8,-9,-10,-11,-39,-40,-41,-42,-43,36,36,-62,-63,-64,-23,-44,36,-66,36,-70,-72,-74,-76,-79,-80,-5,-78,-46,-20,36,-68,36,-16,36,-7,36,36,-45,-78,-58,36,36,-86,-87,-88,-89,-90,-91,-92,-65,-67,36,-93,-94,36,-95,-96,36,-97,-47,36,-22,36,-19,-59,-61,36,36,-24,36,-13,-77,36,36,-60,-57,-69,-78,-71,-73,-75,138,-54,-15,-18,-50,-81,36,-53,36,-25,-12,36,36,-56,36,-55,-51,-17,-21,-52,-26,-14,-28,-30,36,-48,]),'$end':([0,1,2,3,4,5,8,9,10,11,38,48,93,95,113,124,143,144,145,146,],[-4,0,-1,-2,-3,-6,-8,-9,-10,-11,-5,-7,-24,-13,-15,-12,-26,-14,-28,-30,]),'}':([5,8,9,10,11,38,48,93,94,95,124,125,129,130,143,144,145,146,147,149,152,],[-6,-8,-9,-10,-11,-5,-7,-24,124,-13,-12,144,146,-36,-26,-14,-28,-30,-35,-38,-37,]),'LARROW':([6,13,21,22,23,24,28,30,32,33,34,35,36,37,39,40,44,51,52,53,54,69,70,85,91,92,97,103,105,106,107,108,109,110,112,117,118,119,121,128,134,137,141,142,],[42,-45,60,-58,-63,-64,-44,-66,-70,-72,-74,-76,-79,-80,42,80,87,60,-45,99,-58,60,60,60,60,60,-77,60,-57,-69,-78,-71,-73,-75,60,60,60,-81,-53,60,60,-51,-52,60,]),'SWAP':([6,39,],[43,43,]),'POW':([6,34,35,36,37,39,53,97,107,109,110,119,],[-78,78,-76,-79,-80,-78,-78,-77,-78,78,-75,-81,]),'MUL':([6,33,34,35,36,37,39,53,97,107,108,109,110,119,],[-78,75,-74,-76,-79,-80,-78,-78,-77,-78,75,-73,-75,-81,]),'DIV':([6,33,34,35,36,37,39,53,97,107,108,109,110,119,],[-78,76,-74,-76,-79,-80,-78,-78,-77,-78,76,-73,-75,-81,]),'ADD':([6,32,33,34,35,36,37,39,53,97,106,107,108,109,110,119,],[-78,72,-72,-74,-76,-79,-80,-78,-78,-77,72,-78,-71,-73,-75,-81,]),'AND':([6,24,32,33,34,35,36,37,39,53,97,106,107,108,109,110,119,],[-78,62,-70,-72,-74,-76,-79,-80,-78,-78,-77,-69,-78,-71,-73,-75,-81,]),'OR':([6,24,32,33,34,35,36,37,39,53,97,106,107,108,109,110,119,],[-78,63,-70,-72,-74,-76,-79,-80,-78,-78,-77,-69,-78,-71,-73,-75,-81,]),'LESSER':([6,24,32,33,34,35,36,37,39,53,97,106,107,108,109,110,119,],[-78,64,-70,-72,-74,-76,-79,-80,-78,-78,-77,-69,-78,-71,-73,-75,-81,]),'GREATER':([6,24,32,33,34,35,36,37,39,53,97,106,107,108,109,110,119,],[-78,65,-70,-72,-74,-76,-79,-80,-78,-78,-77,-69,-78,-71,-73,-75,-81,]),'LEQ':([6,24,32,33,34,35,36,37,39,53,97,106,107,108,109,110,119,],[-78,66,-70,-72,-74,-76,-79,-80,-78,-78,-77,-69,-78,-71,-73,-75,-81,]),'GEQ':([6,24,32,33,34,35,36,37,39,53,97,106,107,108,109,110,119,],[-78,67,-70,-72,-74,-76,-79,-80,-78,-78,-77,-69,-78,-71,-73,-75,-81,]),'EQUAL':([6,24,32,33,34,35,36,37,39,53,97,106,107,108,109,110,119,],[-78,68,-70,-72,-74,-76,-79,-80,-78,-78,-77,-69,-78,-71,-73,-75,-81,]),';':([6,7,12,13,14,15,16,22,23,24,28,30,32,33,34,35,36,37,39,40,44,52,53,54,69,70,79,85,86,97,104,105,106,107,108,109,110,112,117,119,121,128,136,137,141,151,],[-78,48,-39,-40,-41,-42,-43,-62,-63,-64,-44,-66,-70,-72,-74,-76,-79,-80,-78,-46,-68,-45,-78,-58,-65,-67,-47,-59,-61,-77,-60,-57,-69,-78,-71,-73,-75,-54,-50,-81,-53,-56,-55,-51,-52,-48,]),'RARROW':([6,13,21,22,23,24,28,30,32,33,34,35,36,37,39,41,44,46,51,52,53,54,69,70,81,83,85,91,92,97,103,105,106,107,108,109,110,112,117,118,119,121,128,134,137,140,141,142,],[-78,-45,59,-58,-63,-64,-44,-66,-70,-72,-74,-76,-79,-80,-78,84,-68,-16,98,-45,-78,-58,98,98,-22,114,98,98,98,-77,98,-57,-69,-78,-71,-73,-75,98,98,98,-81,-53,98,98,-51,-21,-52,98,]),':':([6,8,9,10,11,48,93,95,100,124,129,130,131,143,144,145,146,147,149,152,],[46,-8,-9,-10,-11,-7,-24,-13,132,-12,132,-36,148,-26,-14,-28,-30,-35,-38,-37,]),'[':([6,39,40,44,53,79,104,121,127,137,141,151,],[47,47,-49,88,47,111,47,-53,47,88,-52,-48,]),'ELSE':([8,9,10,11,48,93,95,124,143,144,145,146,],[-8,-9,-10,-11,-7,123,-13,-12,-26,-14,-28,-30,]),'{':([12,13,14,15,16,22,23,24,28,30,32,33,34,35,36,37,39,40,41,44,46,49,52,53,54,55,56,69,70,79,81,82,83,85,86,97,104,105,106,107,108,109,110,112,116,117,119,121,122,123,126,128,132,133,135,136,137,139,140,141,148,150,151,],[-39,-40,-41,-42,-43,-62,-63,-64,-44,-66,-70,-72,-74,-76,-79,-80,-78,-46,-20,-68,-16,94,-45,-78,-58,100,-32,-65,-67,-47,-22,94,-19,-59,-61,-77,-60,-57,-69,-78,-71,-73,-75,-54,-18,-50,-81,-53,94,-25,94,-56,94,-31,-34,-55,-51,-17,-21,-52,94,-33,-48,]),')':([12,13,14,15,16,22,23,24,28,30,32,33,34,35,36,37,39,40,44,45,51,52,53,54,69,70,79,85,86,89,90,91,96,97,103,104,105,106,107,108,109,110,112,117,119,121,128,134,136,137,141,142,151,],[-39,-40,-41,-42,-43,-62,-63,-64,-44,-66,-70,-72,-74,-76,-79,-80,-78,-46,-68,-83,97,-45,-78,-58,-65,-67,-47,-59,-61,119,-82,-85,126,-77,135,-60,-57,-69,-78,-71,-73,-75,-54,-50,-81,-53,-56,150,-55,-51,-52,-84,-48,]),',':([23,24,28,30,32,33,34,35,36,37,44,52,53,54,55,56,69,70,81,83,90,91,97,105,106,107,108,109,110,117,119,121,128,133,135,137,140,141,142,150,],[-63,-64,-44,-66,-70,-72,-74,-76,-79,-80,-68,-45,-78,-58,101,-32,-65,-67,-22,115,120,-85,-77,-57,-69,-78,-71,-73,-75,-50,-81,-53,-56,-31,-34,-51,-21,-52,-84,-33,]),']':([23,24,28,30,32,33,34,35,36,37,44,52,53,54,69,70,92,97,105,106,107,108,109,110,117,118,119,121,128,137,138,141,],[-63,-64,-44,-66,-70,-72,-74,-76,-79,-80,-68,-45,-78,-58,-65,-67,121,-77,-57,-69,-78,-71,-73,-75,-50,141,-81,-53,-56,-51,151,-52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Start':([0,],[1,]),'Axiom':([0,],[2,]),'Code':([2,94,],[3,125,]),'Function':([2,],[4,]),'Block':([2,3,49,82,94,122,125,126,132,148,],[5,38,95,95,5,95,38,95,95,95,]),'Exp':([2,3,17,49,50,82,94,122,125,126,132,148,],[7,7,49,7,96,7,7,7,7,7,7,7,]),'If':([2,3,49,82,94,122,125,126,132,148,],[8,8,8,8,8,8,8,8,8,8,]),'IfElse':([2,3,49,82,94,122,125,126,132,148,],[9,9,9,9,9,9,9,9,9,9,]),'While':([2,3,49,82,94,122,125,126,132,148,],[10,10,10,10,10,10,10,10,10,10,]),'Switch':([2,3,49,82,94,122,125,126,132,148,],[11,11,11,11,11,11,11,11,11,11,]),'Atrib':([2,3,17,49,50,82,94,122,125,126,132,148,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'Op':([2,3,17,19,29,31,42,45,47,49,50,58,80,82,87,88,94,99,102,120,122,125,126,132,148,],[13,13,13,52,52,52,52,52,52,13,13,52,52,13,52,52,13,52,52,52,13,13,13,13,13,]),'Decl':([2,3,17,49,50,82,94,122,125,126,132,148,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'DeclArray':([2,3,17,49,50,82,94,122,125,126,132,148,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'DeclAtrib':([2,3,17,49,50,82,94,122,125,126,132,148,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'IfScope':([2,3,49,82,94,122,125,126,132,148,],[17,17,17,17,17,17,17,17,17,17,]),'WhileScope':([2,3,49,82,94,122,125,126,132,148,],[18,18,18,18,18,18,18,18,18,18,]),'SwitchScope':([2,3,49,82,94,122,125,126,132,148,],[20,20,20,20,20,20,20,20,20,20,]),'AtribOp':([2,3,17,19,29,31,42,45,47,49,50,58,80,82,87,88,94,99,102,120,122,125,126,132,148,],[21,21,21,51,69,70,85,91,92,21,21,103,112,21,117,118,21,128,134,142,21,21,21,21,21,]),'AtribArray':([2,3,17,19,29,31,42,45,47,49,50,58,80,82,87,88,94,99,102,120,122,125,126,132,148,],[22,22,22,54,54,54,54,54,54,22,22,54,54,22,54,54,22,54,54,54,22,22,22,22,22,]),'OpUno':([2,3,17,19,29,31,42,45,47,49,50,58,80,82,87,88,94,99,102,120,122,125,126,132,148,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'OpBin':([2,3,17,19,29,31,42,45,47,49,50,58,80,82,87,88,94,99,102,120,122,125,126,132,148,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'AtribNum':([2,3,17,19,29,31,42,45,47,49,50,58,80,82,87,88,94,99,102,120,122,125,126,132,148,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'AccessArray':([2,3,17,19,29,31,42,45,47,49,50,58,80,82,87,88,94,99,102,120,122,125,126,132,148,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TermPlus':([2,3,17,19,29,31,42,45,47,49,50,58,61,80,82,87,88,94,99,102,120,122,125,126,132,148,],[32,32,32,32,32,32,32,32,32,32,32,32,106,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TermMult':([2,3,17,19,29,31,42,45,47,49,50,58,61,71,80,82,87,88,94,99,102,120,122,125,126,132,148,],[33,33,33,33,33,33,33,33,33,33,33,33,33,108,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'TermPow':([2,3,17,19,29,31,42,45,47,49,50,58,61,71,74,80,82,87,88,94,99,102,120,122,125,126,132,148,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,109,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'Base':([2,3,17,19,29,31,42,45,47,49,50,58,61,71,74,77,80,82,87,88,94,99,102,120,122,125,126,132,148,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,110,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FunCall':([2,3,17,19,29,31,42,45,47,49,50,58,61,71,74,77,80,82,87,88,94,99,102,120,122,125,126,132,148,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'FunScope':([6,],[41,]),'ArraySize':([6,39,53,104,127,],[44,44,44,137,137,]),'Conds':([20,],[55,]),'Cond':([20,101,],[56,133,]),'OpLogico':([24,],[61,]),'OpPlus':([32,106,],[71,71,]),'OpMult':([33,108,],[74,74,]),'OpPow':([34,109,],[77,77,]),'DeclArraySize':([40,],[79,]),'FunCases':([41,],[82,]),'FunExtra':([41,],[83,]),'FunArg':([45,],[89,]),'FunRec':([45,],[90,]),'Body':([49,82,122,126,132,148,],[93,113,143,145,149,152,]),'ElseScope':([93,],[122,]),'Cases':([100,],[129,]),'Case':([100,129,],[130,147,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Start","S'",1,None,None,None),
  ('Start -> Axiom','Start',1,'p_start','yacc.py',10),
  ('Axiom -> Axiom Code','Axiom',2,'p_axiom_code','yacc.py',14),
  ('Axiom -> Axiom Function','Axiom',2,'p_axiom_function','yacc.py',20),
  ('Axiom -> <empty>','Axiom',0,'p_axiom_empty','yacc.py',26),
  ('Code -> Code Block','Code',2,'p_code_block','yacc.py',31),
  ('Code -> Block','Code',1,'p_code_empty','yacc.py',36),
  ('Block -> Exp ;','Block',2,'p_block_exp','yacc.py',41),
  ('Block -> If','Block',1,'p_block_if','yacc.py',46),
  ('Block -> IfElse','Block',1,'p_block_ifelse','yacc.py',51),
  ('Block -> While','Block',1,'p_block_while','yacc.py',56),
  ('Block -> Switch','Block',1,'p_block_switch','yacc.py',61),
  ('Body -> { }','Body',2,'p_body_empty','yacc.py',70),
  ('Body -> Block','Body',1,'p_body_block','yacc.py',74),
  ('Body -> { Code }','Body',3,'p_body_code','yacc.py',79),
  ('Function -> ID FunScope FunCases Body','Function',4,'p_function','yacc.py',84),
  ('FunScope -> :','FunScope',1,'p_funscope','yacc.py',98),
  ('FunCases -> FunExtra RARROW ID','FunCases',3,'p_funcases_funextra_rarrow','yacc.py',104),
  ('FunCases -> RARROW ID','FunCases',2,'p_funcases_rarrow','yacc.py',120),
  ('FunCases -> FunExtra','FunCases',1,'p_funcases_funextra','yacc.py',130),
  ('FunCases -> <empty>','FunCases',0,'p_funcases_empty','yacc.py',135),
  ('FunExtra -> FunExtra , ID','FunExtra',3,'p_funextra_rec','yacc.py',140),
  ('FunExtra -> ID','FunExtra',1,'p_funextra_empty','yacc.py',146),
  ('IfScope -> IF','IfScope',1,'p_if_scope','yacc.py',151),
  ('If -> IfScope Exp Body','If',3,'p_if','yacc.py',157),
  ('ElseScope -> ELSE','ElseScope',1,'p_else_scope','yacc.py',169),
  ('IfElse -> IfScope Exp Body ElseScope Body','IfElse',5,'p_ifelse','yacc.py',177),
  ('WhileScope -> WHILE','WhileScope',1,'p_while_scope','yacc.py',192),
  ('While -> WhileScope ( Exp ) Body','While',5,'p_while','yacc.py',198),
  ('SwitchScope -> SWITCH','SwitchScope',1,'p_switch_scope','yacc.py',214),
  ('Switch -> SwitchScope Conds { Cases }','Switch',5,'p_switch','yacc.py',226),
  ('Conds -> Conds , Cond','Conds',3,'p_conds_rec','yacc.py',266),
  ('Conds -> Cond','Conds',1,'p_conds_base','yacc.py',271),
  ('Cond -> ID ( AtribOp )','Cond',4,'p_cond_id','yacc.py',276),
  ('Cond -> ( AtribOp )','Cond',3,'p_cond_empty','yacc.py',282),
  ('Cases -> Cases Case','Cases',2,'p_cases_rec','yacc.py',288),
  ('Cases -> Case','Cases',1,'p_cases_base','yacc.py',293),
  ('Case -> ID : Body','Case',3,'p_case_id','yacc.py',298),
  ('Case -> : Body','Case',2,'p_case_empty','yacc.py',305),
  ('Exp -> Atrib','Exp',1,'p_exp_atrib','yacc.py',312),
  ('Exp -> Op','Exp',1,'p_exp_op','yacc.py',317),
  ('Exp -> Decl','Exp',1,'p_exp_decl','yacc.py',322),
  ('Exp -> DeclArray','Exp',1,'p_exp_declarray','yacc.py',327),
  ('Exp -> DeclAtrib','Exp',1,'p_exp_declatrib','yacc.py',332),
  ('AtribOp -> AtribNum','AtribOp',1,'p_atribop_atribnum','yacc.py',337),
  ('AtribOp -> Op','AtribOp',1,'p_atribop_op','yacc.py',342),
  ('Decl -> ID ID','Decl',2,'p_decl','yacc.py',347),
  ('DeclArray -> ID ID DeclArraySize','DeclArray',3,'p_declarray','yacc.py',367),
  ('DeclArraySize -> DeclArraySize [ NUM ]','DeclArraySize',4,'p_declarraysize_rec','yacc.py',391),
  ('DeclArraySize -> <empty>','DeclArraySize',0,'p_declarraysize_empty','yacc.py',396),
  ('AtribArray -> ID ArraySize LARROW AtribOp','AtribArray',4,'p_atribarray_Leftatribop','yacc.py',401),
  ('AtribArray -> AtribOp RARROW ID ArraySize','AtribArray',4,'p_atribarray_Rightatribop','yacc.py',424),
  ('ArraySize -> ArraySize [ AtribOp ]','ArraySize',4,'p_arraysize_rec','yacc.py',452),
  ('ArraySize -> [ AtribOp ]','ArraySize',3,'p_arraysize_empty','yacc.py',457),
  ('DeclAtrib -> ID ID LARROW AtribOp','DeclAtrib',4,'p_declatrib_left','yacc.py',462),
  ('DeclAtrib -> AtribOp RARROW ID ID','DeclAtrib',4,'p_declatrib_right','yacc.py',483),
  ('AtribNum -> ID LARROW AtribOp','AtribNum',3,'p_atribnum_left','yacc.py',504),
  ('AtribNum -> AtribOp LARROW ID','AtribNum',3,'p_atribnum_right','yacc.py',509),
  ('AtribNum -> AtribArray','AtribNum',1,'p_atribnum_array','yacc.py',515),
  ('Atrib -> ID LARROW AtribOp','Atrib',3,'p_atrib_left','yacc.py',520),
  ('Atrib -> AtribOp RARROW ID','Atrib',3,'p_atrib_right','yacc.py',525),
  ('Atrib -> ID SWAP ID','Atrib',3,'p_atrib_equiv','yacc.py',530),
  ('Atrib -> AtribArray','Atrib',1,'p_atrib_array','yacc.py',553),
  ('Op -> OpUno','Op',1,'p_op_opuno','yacc.py',558),
  ('Op -> OpBin','Op',1,'p_op_opbin','yacc.py',563),
  ('OpUno -> NEG AtribOp','OpUno',2,'p_opuno_neg','yacc.py',568),
  ('OpUno -> AccessArray','OpUno',1,'p_opuno_accessarray','yacc.py',573),
  ('OpUno -> SUB AtribOp','OpUno',2,'p_opuno_minus','yacc.py',578),
  ('AccessArray -> ID ArraySize','AccessArray',2,'p_accessarray','yacc.py',583),
  ('OpBin -> OpBin OpLogico TermPlus','OpBin',3,'p_opbin_rec','yacc.py',598),
  ('OpBin -> TermPlus','OpBin',1,'p_opbin_base','yacc.py',603),
  ('TermPlus -> TermPlus OpPlus TermMult','TermPlus',3,'p_termplus_rec','yacc.py',608),
  ('TermPlus -> TermMult','TermPlus',1,'p_termplus_base','yacc.py',613),
  ('TermMult -> TermMult OpMult TermPow','TermMult',3,'p_termmult_rec','yacc.py',618),
  ('TermMult -> TermPow','TermMult',1,'p_termmult_base','yacc.py',623),
  ('TermPow -> TermPow OpPow Base','TermPow',3,'p_termpow_rec','yacc.py',628),
  ('TermPow -> Base','TermPow',1,'p_termpow_base','yacc.py',633),
  ('Base -> ( AtribOp )','Base',3,'p_base_exp','yacc.py',638),
  ('Base -> ID','Base',1,'p_base_id','yacc.py',643),
  ('Base -> NUM','Base',1,'p_base_num','yacc.py',656),
  ('Base -> FunCall','Base',1,'p_base_funcall','yacc.py',661),
  ('FunCall -> ID ( FunArg )','FunCall',4,'p_funcall','yacc.py',666),
  ('FunArg -> FunRec','FunArg',1,'p_funarg_funrec','yacc.py',677),
  ('FunArg -> <empty>','FunArg',0,'p_funarg_empty','yacc.py',682),
  ('FunRec -> FunRec , AtribOp','FunRec',3,'p_funrec_rec','yacc.py',687),
  ('FunRec -> AtribOp','FunRec',1,'p_funrec_base','yacc.py',692),
  ('OpLogico -> AND','OpLogico',1,'p_oplogico_and','yacc.py',697),
  ('OpLogico -> OR','OpLogico',1,'p_oplogico_or','yacc.py',702),
  ('OpLogico -> LESSER','OpLogico',1,'p_oplogico_lesser','yacc.py',707),
  ('OpLogico -> GREATER','OpLogico',1,'p_oplogico_greater','yacc.py',712),
  ('OpLogico -> LEQ','OpLogico',1,'p_oplogico_leq','yacc.py',717),
  ('OpLogico -> GEQ','OpLogico',1,'p_oplogico_geq','yacc.py',722),
  ('OpLogico -> EQUAL','OpLogico',1,'p_oplogico_equal','yacc.py',727),
  ('OpPlus -> ADD','OpPlus',1,'p_opplus_add','yacc.py',732),
  ('OpPlus -> SUB','OpPlus',1,'p_opplus_sub','yacc.py',737),
  ('OpMult -> MUL','OpMult',1,'p_opmult_mul','yacc.py',742),
  ('OpMult -> DIV','OpMult',1,'p_opmult_div','yacc.py',747),
  ('OpPow -> POW','OpPow',1,'p_oppow','yacc.py',752),
]
