
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD AND DIV ELSE EQUAL GEQ GREATER ID IF LARROW LEQ LESSER MUL NEG NUM OR POW PRINT RARROW READ SUB SWAP SWITCHCASE SWITCHCOND WHILEStart : AxiomStart : Axiom : Axiom BlockAxiom : Axiom FunctionAxiom : Code : Code BlockCode : BlockBlock : FunCall ';'Block : Exp ';'Block : If Block : IfElse Block : While Block : Switch Body : '{' '}'Body : BlockBody : '{' Code '}'Function : ID FunScope FunCases BodyFunScope : ':'FunCases : FunExtra RARROW IDFunCases : RARROW IDFunCases : FunExtraFunCases : FunExtra : FunExtra ',' IDFunExtra : IDIfScope : IFIf : IfScope AtribOp BodyElseScope : ELSEIfElse : IfScope AtribOp Body ElseScope BodyWhileScope : WHILEWhile : WhileScope '(' AtribOp ')' BodySwitchScope : SWITCHCONDSwitchScope : SWITCHCASESwitch : SwitchScope Conds '{' Cases '}'Conds : Conds ',' CondConds : CondCond : ID '(' AtribOp ')'Cond : '(' AtribOp ')'Cases : Cases Case Cases : CaseCase : ID ':' BodyCase : ':' BodyExp : AtribExp : OpExp : DeclExp : DeclArrayExp : DeclAtribAtribOp : AtribNumAtribOp : OpDecl : ID IDDeclArray : ID ID DeclArraySizeDeclArraySize : DeclArraySize '[' NUM ']'DeclArraySize : '[' NUM ']'AtribArray : ID ArraySize LARROW AtribOpAtribArray : AtribOp RARROW ID ArraySizeArraySize : ArraySize '[' AtribOp ']'ArraySize : '[' AtribOp ']'DeclAtrib : ID ID LARROW AtribOpDeclAtrib : AtribOp RARROW ID IDAtribNum : ID LARROW AtribOpAtribNum : AtribOp RARROW IDAtribNum : AtribArrayAtrib : ID LARROW AtribOpAtrib : AtribOp RARROW IDAtrib : ID SWAP IDAtrib : AtribArrayOp : OpBinOpUno : NEG BaseOpUno : AccessArrayOpUno : SUB BaseOpUno : Base PRINTAccessArray : ID ArraySizeOpBin : OpBin OpLogico TermPlusOpBin : TermPlusTermPlus : TermPlus OpPlus TermMultTermPlus : TermMultTermMult : TermMult OpMult TermPowTermMult : TermPowTermPow : TermPow OpPow BaseTermPow : BaseBase : OpUnoBase : '(' AtribOp ')'Base : IDBase : NUMBase : FunCallBase : READFunCall : ID '(' FunArg ')'FunArg : FunRecFunArg : FunRec : FunRec ',' AtribOpFunRec : AtribOpOpLogico : ANDOpLogico : OROpLogico : LESSEROpLogico : GREATEROpLogico : LEQOpLogico : GEQOpLogico : EQUALOpPlus : ADDOpPlus : SUBOpMult : MULOpMult : DIVOpPow : POW"
    
_lr_action_items = {'$end':([0,1,2,3,4,7,8,9,10,39,40,99,102,117,130,149,150,152,153,],[-2,0,-1,-3,-4,-10,-11,-12,-13,-8,-9,-26,-15,-17,-14,-28,-16,-30,-33,]),'ID':([0,2,3,4,7,8,9,10,11,12,18,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,85,86,87,93,94,96,97,98,99,100,101,102,103,105,106,107,109,110,111,112,113,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,134,135,136,137,139,145,146,148,149,150,151,152,153,154,155,156,159,],[-5,11,-3,-4,-10,-11,-12,-13,41,51,51,59,-66,-25,-31,-32,-47,-73,-75,-77,-79,-80,-83,-85,79,-68,79,-8,-9,84,51,51,92,-71,-18,51,-48,-82,-61,-84,100,103,51,51,79,-91,-92,-93,-94,-95,-96,-97,79,-98,-99,79,-100,-101,79,-102,-70,-67,-82,-69,51,-24,100,-21,120,51,51,-81,126,51,-26,41,100,-15,133,138,59,51,-72,-74,-76,-78,-71,-17,145,146,-20,-86,51,-53,-56,-60,-59,100,-27,-14,100,-7,-54,100,138,-39,100,-19,-23,-55,-28,-16,-6,-30,-33,-38,100,-41,-40,]),'IF':([0,2,3,4,7,8,9,10,23,28,29,30,31,32,33,34,35,37,39,40,42,46,47,50,51,52,53,54,77,78,79,80,84,85,86,96,99,101,102,109,110,111,112,113,117,120,121,123,125,126,127,128,129,130,131,132,134,135,139,145,146,148,149,150,151,152,153,155,],[-5,24,-3,-4,-10,-11,-12,-13,-66,-47,-73,-75,-77,-79,-80,-83,-85,-68,-8,-9,-22,-71,-18,-48,-82,-61,-84,24,-70,-67,-82,-69,-24,24,-21,-81,-26,24,-15,-72,-74,-76,-78,-71,-17,-20,-86,-53,-56,-60,-59,24,-27,-14,24,-7,-54,24,24,-19,-23,-55,-28,-16,-6,-30,-33,24,]),'WHILE':([0,2,3,4,7,8,9,10,23,28,29,30,31,32,33,34,35,37,39,40,42,46,47,50,51,52,53,54,77,78,79,80,84,85,86,96,99,101,102,109,110,111,112,113,117,120,121,123,125,126,127,128,129,130,131,132,134,135,139,145,146,148,149,150,151,152,153,155,],[-5,25,-3,-4,-10,-11,-12,-13,-66,-47,-73,-75,-77,-79,-80,-83,-85,-68,-8,-9,-22,-71,-18,-48,-82,-61,-84,25,-70,-67,-82,-69,-24,25,-21,-81,-26,25,-15,-72,-74,-76,-78,-71,-17,-20,-86,-53,-56,-60,-59,25,-27,-14,25,-7,-54,25,25,-19,-23,-55,-28,-16,-6,-30,-33,25,]),'SWITCHCOND':([0,2,3,4,7,8,9,10,23,28,29,30,31,32,33,34,35,37,39,40,42,46,47,50,51,52,53,54,77,78,79,80,84,85,86,96,99,101,102,109,110,111,112,113,117,120,121,123,125,126,127,128,129,130,131,132,134,135,139,145,146,148,149,150,151,152,153,155,],[-5,26,-3,-4,-10,-11,-12,-13,-66,-47,-73,-75,-77,-79,-80,-83,-85,-68,-8,-9,-22,-71,-18,-48,-82,-61,-84,26,-70,-67,-82,-69,-24,26,-21,-81,-26,26,-15,-72,-74,-76,-78,-71,-17,-20,-86,-53,-56,-60,-59,26,-27,-14,26,-7,-54,26,26,-19,-23,-55,-28,-16,-6,-30,-33,26,]),'SWITCHCASE':([0,2,3,4,7,8,9,10,23,28,29,30,31,32,33,34,35,37,39,40,42,46,47,50,51,52,53,54,77,78,79,80,84,85,86,96,99,101,102,109,110,111,112,113,117,120,121,123,125,126,127,128,129,130,131,132,134,135,139,145,146,148,149,150,151,152,153,155,],[-5,27,-3,-4,-10,-11,-12,-13,-66,-47,-73,-75,-77,-79,-80,-83,-85,-68,-8,-9,-22,-71,-18,-48,-82,-61,-84,27,-70,-67,-82,-69,-24,27,-21,-81,-26,27,-15,-72,-74,-76,-78,-71,-17,-20,-86,-53,-56,-60,-59,27,-27,-14,27,-7,-54,27,27,-19,-23,-55,-28,-16,-6,-30,-33,27,]),'(':([0,2,3,4,7,8,9,10,11,12,18,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,46,47,48,50,51,52,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,85,86,93,94,96,98,99,100,101,102,106,107,109,110,111,112,113,117,120,121,122,123,125,126,127,128,129,130,131,132,134,135,139,145,146,148,149,150,151,152,153,155,],[-5,12,-3,-4,-10,-11,-12,-13,43,12,12,56,60,-66,-25,-29,-31,-32,-47,-73,-75,-77,-79,-80,-83,-85,12,-68,12,-8,-9,-22,12,12,-71,-18,12,-48,43,-61,-84,12,12,107,12,12,-91,-92,-93,-94,-95,-96,-97,12,-98,-99,12,-100,-101,12,-102,-70,-67,43,-69,12,-24,12,-21,12,12,-81,12,-26,43,12,-15,60,12,-72,-74,-76,-78,-71,-17,-20,-86,12,-53,-56,-60,-59,12,-27,-14,12,-7,-54,12,12,-19,-23,-55,-28,-16,-6,-30,-33,12,]),'NUM':([0,2,3,4,7,8,9,10,12,18,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,46,47,48,50,51,52,53,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,93,94,96,98,99,101,102,107,109,110,111,112,113,114,117,120,121,122,123,125,126,127,128,129,130,131,132,134,135,139,145,146,148,149,150,151,152,153,155,],[-5,34,-3,-4,-10,-11,-12,-13,34,34,-66,-25,-47,-73,-75,-77,-79,-80,-83,-85,34,-68,34,-8,-9,-22,34,34,-71,-18,34,-48,-82,-61,-84,34,34,34,34,-91,-92,-93,-94,-95,-96,-97,34,-98,-99,34,-100,-101,34,-102,-70,-67,-82,-69,34,116,-24,34,-21,34,34,-81,34,-26,34,-15,34,-72,-74,-76,-78,-71,143,-17,-20,-86,34,-53,-56,-60,-59,34,-27,-14,34,-7,-54,34,34,-19,-23,-55,-28,-16,-6,-30,-33,34,]),'READ':([0,2,3,4,7,8,9,10,12,18,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,46,47,48,50,51,52,53,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,85,86,93,94,96,98,99,101,102,107,109,110,111,112,113,117,120,121,122,123,125,126,127,128,129,130,131,132,134,135,139,145,146,148,149,150,151,152,153,155,],[-5,35,-3,-4,-10,-11,-12,-13,35,35,-66,-25,-47,-73,-75,-77,-79,-80,-83,-85,35,-68,35,-8,-9,-22,35,35,-71,-18,35,-48,-82,-61,-84,35,35,35,35,-91,-92,-93,-94,-95,-96,-97,35,-98,-99,35,-100,-101,35,-102,-70,-67,-82,-69,35,-24,35,-21,35,35,-81,35,-26,35,-15,35,-72,-74,-76,-78,-71,-17,-20,-86,35,-53,-56,-60,-59,35,-27,-14,35,-7,-54,35,35,-19,-23,-55,-28,-16,-6,-30,-33,35,]),'NEG':([0,2,3,4,7,8,9,10,12,18,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,46,47,48,50,51,52,53,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,85,86,93,94,96,98,99,101,102,107,109,110,111,112,113,117,120,121,122,123,125,126,127,128,129,130,131,132,134,135,139,145,146,148,149,150,151,152,153,155,],[-5,36,-3,-4,-10,-11,-12,-13,36,36,-66,-25,-47,-73,-75,-77,-79,-80,-83,-85,36,-68,36,-8,-9,-22,36,36,-71,-18,36,-48,-82,-61,-84,36,36,36,36,-91,-92,-93,-94,-95,-96,-97,36,-98,-99,36,-100,-101,36,-102,-70,-67,-82,-69,36,-24,36,-21,36,36,-81,36,-26,36,-15,36,-72,-74,-76,-78,-71,-17,-20,-86,36,-53,-56,-60,-59,36,-27,-14,36,-7,-54,36,36,-19,-23,-55,-28,-16,-6,-30,-33,36,]),'SUB':([0,2,3,4,5,7,8,9,10,11,12,18,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,46,47,48,50,51,52,53,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,85,86,93,94,96,98,99,100,101,102,107,109,110,111,112,113,117,120,121,122,123,125,126,127,128,129,130,131,132,134,135,139,145,146,148,149,150,151,152,153,155,],[-5,38,-3,-4,-84,-10,-11,-12,-13,-82,38,38,-66,-25,-47,71,-75,-77,-79,-80,-83,-85,38,-68,38,-8,-9,-22,38,38,-71,-18,38,-48,-82,-61,-84,38,38,38,38,-91,-92,-93,-94,-95,-96,-97,38,-98,-99,38,-100,-101,38,-102,-70,-67,-82,-69,38,-24,38,-21,38,38,-81,38,-26,-82,38,-15,38,71,-74,-76,-78,-71,-17,-20,-86,38,-53,-56,-60,-59,38,-27,-14,38,-7,-54,38,38,-19,-23,-55,-28,-16,-6,-30,-33,38,]),';':([5,6,11,13,14,15,16,17,22,23,28,29,30,31,32,33,34,35,37,41,46,50,51,52,53,77,78,79,80,81,91,92,96,100,103,109,110,111,112,113,115,121,123,125,126,127,133,134,144,148,158,],[39,40,-82,-42,-43,-44,-45,-46,-65,-66,-47,-73,-75,-77,-79,-80,-83,-85,-68,-49,-71,-48,-82,-61,-84,-70,-67,-82,-69,-50,-62,-64,-81,-82,-63,-72,-74,-76,-78,-71,-57,-86,-53,-56,-60,-59,-58,-54,-52,-55,-51,]),'PRINT':([5,11,32,33,34,35,37,46,51,53,77,78,79,80,96,100,112,113,121,125,148,],[-84,-82,77,-80,-83,-85,-68,-71,-82,-84,-70,77,-82,77,-81,-82,77,-71,-86,-56,-55,]),'POW':([5,11,31,32,33,34,35,37,46,51,53,77,78,79,80,96,100,111,112,113,121,125,148,],[-84,-82,76,-79,-80,-83,-85,-68,-71,-82,-84,-70,-67,-82,-69,-81,-82,76,-78,-71,-86,-56,-55,]),'MUL':([5,11,30,31,32,33,34,35,37,46,51,53,77,78,79,80,96,100,110,111,112,113,121,125,148,],[-84,-82,73,-77,-79,-80,-83,-85,-68,-71,-82,-84,-70,-67,-82,-69,-81,-82,73,-76,-78,-71,-86,-56,-55,]),'DIV':([5,11,30,31,32,33,34,35,37,46,51,53,77,78,79,80,96,100,110,111,112,113,121,125,148,],[-84,-82,74,-77,-79,-80,-83,-85,-68,-71,-82,-84,-70,-67,-82,-69,-81,-82,74,-76,-78,-71,-86,-56,-55,]),'ADD':([5,11,29,30,31,32,33,34,35,37,46,51,53,77,78,79,80,96,100,109,110,111,112,113,121,125,148,],[-84,-82,70,-75,-77,-79,-80,-83,-85,-68,-71,-82,-84,-70,-67,-82,-69,-81,-82,70,-74,-76,-78,-71,-86,-56,-55,]),'AND':([5,11,23,29,30,31,32,33,34,35,37,46,51,53,77,78,79,80,96,100,109,110,111,112,113,121,125,148,],[-84,-82,62,-73,-75,-77,-79,-80,-83,-85,-68,-71,-82,-84,-70,-67,-82,-69,-81,-82,-72,-74,-76,-78,-71,-86,-56,-55,]),'OR':([5,11,23,29,30,31,32,33,34,35,37,46,51,53,77,78,79,80,96,100,109,110,111,112,113,121,125,148,],[-84,-82,63,-73,-75,-77,-79,-80,-83,-85,-68,-71,-82,-84,-70,-67,-82,-69,-81,-82,-72,-74,-76,-78,-71,-86,-56,-55,]),'LESSER':([5,11,23,29,30,31,32,33,34,35,37,46,51,53,77,78,79,80,96,100,109,110,111,112,113,121,125,148,],[-84,-82,64,-73,-75,-77,-79,-80,-83,-85,-68,-71,-82,-84,-70,-67,-82,-69,-81,-82,-72,-74,-76,-78,-71,-86,-56,-55,]),'GREATER':([5,11,23,29,30,31,32,33,34,35,37,46,51,53,77,78,79,80,96,100,109,110,111,112,113,121,125,148,],[-84,-82,65,-73,-75,-77,-79,-80,-83,-85,-68,-71,-82,-84,-70,-67,-82,-69,-81,-82,-72,-74,-76,-78,-71,-86,-56,-55,]),'LEQ':([5,11,23,29,30,31,32,33,34,35,37,46,51,53,77,78,79,80,96,100,109,110,111,112,113,121,125,148,],[-84,-82,66,-73,-75,-77,-79,-80,-83,-85,-68,-71,-82,-84,-70,-67,-82,-69,-81,-82,-72,-74,-76,-78,-71,-86,-56,-55,]),'GEQ':([5,11,23,29,30,31,32,33,34,35,37,46,51,53,77,78,79,80,96,100,109,110,111,112,113,121,125,148,],[-84,-82,67,-73,-75,-77,-79,-80,-83,-85,-68,-71,-82,-84,-70,-67,-82,-69,-81,-82,-72,-74,-76,-78,-71,-86,-56,-55,]),'EQUAL':([5,11,23,29,30,31,32,33,34,35,37,46,51,53,77,78,79,80,96,100,109,110,111,112,113,121,125,148,],[-84,-82,68,-73,-75,-77,-79,-80,-83,-85,-68,-71,-82,-84,-70,-67,-82,-69,-81,-82,-72,-74,-76,-78,-71,-86,-56,-55,]),'RARROW':([5,11,14,19,22,23,28,29,30,31,32,33,34,35,37,42,46,47,49,50,51,52,53,54,77,78,79,80,84,86,90,91,95,96,100,103,104,108,109,110,111,112,113,115,121,123,124,125,126,127,134,141,146,147,148,],[-84,-82,-48,55,-61,-66,-47,-73,-75,-77,-79,-80,-83,-85,-68,87,-71,-18,97,-48,-82,-61,-84,97,-70,-67,-82,-69,-24,118,97,97,97,-81,-82,-60,97,97,-72,-74,-76,-78,-71,97,-86,97,97,-56,-60,97,-54,97,-23,97,-55,]),'ELSE':([7,8,9,10,39,40,99,102,130,149,150,152,153,],[-10,-11,-12,-13,-8,-9,129,-15,-14,-28,-16,-30,-33,]),'}':([7,8,9,10,39,40,99,101,102,130,131,132,136,137,149,150,151,152,153,154,156,159,],[-10,-11,-12,-13,-8,-9,-26,130,-15,-14,150,-7,153,-39,-28,-16,-6,-30,-33,-38,-41,-40,]),':':([7,8,9,10,11,39,40,99,102,105,130,136,137,138,149,150,152,153,154,156,159,],[-10,-11,-12,-13,47,-8,-9,-26,-15,139,-14,139,-39,155,-28,-16,-30,-33,-38,-41,-40,]),'LARROW':([11,41,46,51,100,125,148,],[44,82,93,98,44,-56,-55,]),'SWAP':([11,100,],[45,45,]),'[':([11,41,46,51,79,81,100,103,113,125,126,134,144,148,158,],[48,83,94,48,48,114,48,48,94,-56,48,94,-52,-55,-51,]),')':([23,28,29,30,31,32,33,34,35,37,43,46,49,50,51,52,53,77,78,79,80,88,89,90,96,104,108,109,110,111,112,113,121,123,125,126,127,134,141,147,148,],[-66,-47,-73,-75,-77,-79,-80,-83,-85,-68,-88,-71,96,-48,-82,-61,-84,-70,-67,-82,-69,121,-87,-90,-81,135,142,-72,-74,-76,-78,-71,-86,-53,-56,-60,-59,-54,157,-89,-55,]),'{':([23,28,29,30,31,32,33,34,35,37,42,46,47,50,51,52,53,54,57,58,77,78,79,80,84,85,86,96,109,110,111,112,113,120,121,123,125,126,127,128,129,134,135,139,140,142,145,146,148,155,157,],[-66,-47,-73,-75,-77,-79,-80,-83,-85,-68,-22,-71,-18,-48,-82,-61,-84,101,105,-35,-70,-67,-82,-69,-24,101,-21,-81,-72,-74,-76,-78,-71,-20,-86,-53,-56,-60,-59,101,-27,-54,101,101,-34,-37,-19,-23,-55,101,-36,]),',':([23,28,29,30,31,32,33,34,35,37,46,50,51,52,53,57,58,77,78,79,80,84,86,89,90,96,109,110,111,112,113,121,123,125,126,127,134,140,142,146,147,148,157,],[-66,-47,-73,-75,-77,-79,-80,-83,-85,-68,-71,-48,-82,-61,-84,106,-35,-70,-67,-82,-69,-24,119,122,-90,-81,-72,-74,-76,-78,-71,-86,-53,-56,-60,-59,-54,-34,-37,-23,-89,-55,-36,]),']':([23,28,29,30,31,32,33,34,35,37,46,50,51,52,53,77,78,79,80,95,96,109,110,111,112,113,116,121,123,124,125,126,127,134,143,148,],[-66,-47,-73,-75,-77,-79,-80,-83,-85,-68,-71,-48,-82,-61,-84,-70,-67,-82,-69,125,-81,-72,-74,-76,-78,-71,144,-86,-53,148,-56,-60,-59,-54,158,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Start':([0,],[1,]),'Axiom':([0,],[2,]),'Block':([2,54,85,101,128,131,135,139,155,],[3,102,102,132,102,151,102,102,102,]),'Function':([2,],[4,]),'FunCall':([2,12,18,36,38,43,44,48,54,56,60,61,69,72,75,82,85,93,94,98,101,107,122,128,131,135,139,155,],[5,53,53,53,53,53,53,53,5,53,53,53,53,53,53,53,5,53,53,53,5,53,53,5,5,5,5,5,]),'Exp':([2,54,85,101,128,131,135,139,155,],[6,6,6,6,6,6,6,6,6,]),'If':([2,54,85,101,128,131,135,139,155,],[7,7,7,7,7,7,7,7,7,]),'IfElse':([2,54,85,101,128,131,135,139,155,],[8,8,8,8,8,8,8,8,8,]),'While':([2,54,85,101,128,131,135,139,155,],[9,9,9,9,9,9,9,9,9,]),'Switch':([2,54,85,101,128,131,135,139,155,],[10,10,10,10,10,10,10,10,10,]),'Atrib':([2,54,85,101,128,131,135,139,155,],[13,13,13,13,13,13,13,13,13,]),'Op':([2,12,18,43,44,48,54,56,60,82,85,93,94,98,101,107,122,128,131,135,139,155,],[14,50,50,50,50,50,14,50,50,50,14,50,50,50,14,50,50,14,14,14,14,14,]),'Decl':([2,54,85,101,128,131,135,139,155,],[15,15,15,15,15,15,15,15,15,]),'DeclArray':([2,54,85,101,128,131,135,139,155,],[16,16,16,16,16,16,16,16,16,]),'DeclAtrib':([2,54,85,101,128,131,135,139,155,],[17,17,17,17,17,17,17,17,17,]),'IfScope':([2,54,85,101,128,131,135,139,155,],[18,18,18,18,18,18,18,18,18,]),'AtribOp':([2,12,18,43,44,48,54,56,60,82,85,93,94,98,101,107,122,128,131,135,139,155,],[19,49,54,90,91,95,19,104,108,115,19,123,124,127,19,141,147,19,19,19,19,19,]),'WhileScope':([2,54,85,101,128,131,135,139,155,],[20,20,20,20,20,20,20,20,20,]),'SwitchScope':([2,54,85,101,128,131,135,139,155,],[21,21,21,21,21,21,21,21,21,]),'AtribArray':([2,12,18,43,44,48,54,56,60,82,85,93,94,98,101,107,122,128,131,135,139,155,],[22,52,52,52,52,52,22,52,52,52,22,52,52,52,22,52,52,22,22,22,22,22,]),'OpBin':([2,12,18,43,44,48,54,56,60,82,85,93,94,98,101,107,122,128,131,135,139,155,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'AtribNum':([2,12,18,43,44,48,54,56,60,82,85,93,94,98,101,107,122,128,131,135,139,155,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'TermPlus':([2,12,18,43,44,48,54,56,60,61,82,85,93,94,98,101,107,122,128,131,135,139,155,],[29,29,29,29,29,29,29,29,29,109,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TermMult':([2,12,18,43,44,48,54,56,60,61,69,82,85,93,94,98,101,107,122,128,131,135,139,155,],[30,30,30,30,30,30,30,30,30,30,110,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TermPow':([2,12,18,43,44,48,54,56,60,61,69,72,82,85,93,94,98,101,107,122,128,131,135,139,155,],[31,31,31,31,31,31,31,31,31,31,31,111,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'Base':([2,12,18,36,38,43,44,48,54,56,60,61,69,72,75,82,85,93,94,98,101,107,122,128,131,135,139,155,],[32,32,32,78,80,32,32,32,32,32,32,32,32,32,112,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'OpUno':([2,12,18,36,38,43,44,48,54,56,60,61,69,72,75,82,85,93,94,98,101,107,122,128,131,135,139,155,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'AccessArray':([2,12,18,36,38,43,44,48,54,56,60,61,69,72,75,82,85,93,94,98,101,107,122,128,131,135,139,155,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'FunScope':([11,],[42,]),'ArraySize':([11,51,79,100,103,126,],[46,46,113,46,134,134,]),'Conds':([21,],[57,]),'Cond':([21,106,],[58,140,]),'OpLogico':([23,],[61,]),'OpPlus':([29,109,],[69,69,]),'OpMult':([30,110,],[72,72,]),'OpPow':([31,111,],[75,75,]),'DeclArraySize':([41,],[81,]),'FunCases':([42,],[85,]),'FunExtra':([42,],[86,]),'FunArg':([43,],[88,]),'FunRec':([43,],[89,]),'Body':([54,85,128,135,139,155,],[99,117,149,152,156,159,]),'ElseScope':([99,],[128,]),'Code':([101,],[131,]),'Cases':([105,],[136,]),'Case':([105,136,],[137,154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Start","S'",1,None,None,None),
  ('Start -> Axiom','Start',1,'p_start_axiom','yacc.py',11),
  ('Start -> <empty>','Start',0,'p_start_empty','yacc.py',17),
  ('Axiom -> Axiom Block','Axiom',2,'p_axiom_code','yacc.py',22),
  ('Axiom -> Axiom Function','Axiom',2,'p_axiom_function','yacc.py',28),
  ('Axiom -> <empty>','Axiom',0,'p_axiom_empty','yacc.py',34),
  ('Code -> Code Block','Code',2,'p_code_block','yacc.py',39),
  ('Code -> Block','Code',1,'p_code_empty','yacc.py',44),
  ('Block -> FunCall ;','Block',2,'p_block_funcall','yacc.py',49),
  ('Block -> Exp ;','Block',2,'p_block_exp','yacc.py',57),
  ('Block -> If','Block',1,'p_block_if','yacc.py',62),
  ('Block -> IfElse','Block',1,'p_block_ifelse','yacc.py',67),
  ('Block -> While','Block',1,'p_block_while','yacc.py',72),
  ('Block -> Switch','Block',1,'p_block_switch','yacc.py',77),
  ('Body -> { }','Body',2,'p_body_empty','yacc.py',86),
  ('Body -> Block','Body',1,'p_body_block','yacc.py',91),
  ('Body -> { Code }','Body',3,'p_body_code','yacc.py',96),
  ('Function -> ID FunScope FunCases Body','Function',4,'p_function','yacc.py',101),
  ('FunScope -> :','FunScope',1,'p_funscope','yacc.py',130),
  ('FunCases -> FunExtra RARROW ID','FunCases',3,'p_funcases_funextra_rarrow','yacc.py',136),
  ('FunCases -> RARROW ID','FunCases',2,'p_funcases_rarrow','yacc.py',156),
  ('FunCases -> FunExtra','FunCases',1,'p_funcases_funextra','yacc.py',166),
  ('FunCases -> <empty>','FunCases',0,'p_funcases_empty','yacc.py',180),
  ('FunExtra -> FunExtra , ID','FunExtra',3,'p_funextra_rec','yacc.py',185),
  ('FunExtra -> ID','FunExtra',1,'p_funextra_empty','yacc.py',191),
  ('IfScope -> IF','IfScope',1,'p_if_scope','yacc.py',196),
  ('If -> IfScope AtribOp Body','If',3,'p_if','yacc.py',202),
  ('ElseScope -> ELSE','ElseScope',1,'p_else_scope','yacc.py',214),
  ('IfElse -> IfScope AtribOp Body ElseScope Body','IfElse',5,'p_ifelse','yacc.py',222),
  ('WhileScope -> WHILE','WhileScope',1,'p_while_scope','yacc.py',237),
  ('While -> WhileScope ( AtribOp ) Body','While',5,'p_while','yacc.py',243),
  ('SwitchScope -> SWITCHCOND','SwitchScope',1,'p_switch_scopecond','yacc.py',258),
  ('SwitchScope -> SWITCHCASE','SwitchScope',1,'p_switch_scopecase','yacc.py',270),
  ('Switch -> SwitchScope Conds { Cases }','Switch',5,'p_switch','yacc.py',283),
  ('Conds -> Conds , Cond','Conds',3,'p_conds_rec','yacc.py',325),
  ('Conds -> Cond','Conds',1,'p_conds_base','yacc.py',331),
  ('Cond -> ID ( AtribOp )','Cond',4,'p_cond_id','yacc.py',336),
  ('Cond -> ( AtribOp )','Cond',3,'p_cond_empty','yacc.py',342),
  ('Cases -> Cases Case','Cases',2,'p_cases_rec','yacc.py',348),
  ('Cases -> Case','Cases',1,'p_cases_base','yacc.py',354),
  ('Case -> ID : Body','Case',3,'p_case_id','yacc.py',359),
  ('Case -> : Body','Case',2,'p_case_empty','yacc.py',366),
  ('Exp -> Atrib','Exp',1,'p_exp_atrib','yacc.py',381),
  ('Exp -> Op','Exp',1,'p_exp_op','yacc.py',386),
  ('Exp -> Decl','Exp',1,'p_exp_decl','yacc.py',391),
  ('Exp -> DeclArray','Exp',1,'p_exp_declarray','yacc.py',396),
  ('Exp -> DeclAtrib','Exp',1,'p_exp_declatrib','yacc.py',401),
  ('AtribOp -> AtribNum','AtribOp',1,'p_atribop_atribnum','yacc.py',406),
  ('AtribOp -> Op','AtribOp',1,'p_atribop_op','yacc.py',411),
  ('Decl -> ID ID','Decl',2,'p_decl','yacc.py',416),
  ('DeclArray -> ID ID DeclArraySize','DeclArray',3,'p_declarray','yacc.py',439),
  ('DeclArraySize -> DeclArraySize [ NUM ]','DeclArraySize',4,'p_declarraysize_rec','yacc.py',463),
  ('DeclArraySize -> [ NUM ]','DeclArraySize',3,'p_declarraysize_empty','yacc.py',469),
  ('AtribArray -> ID ArraySize LARROW AtribOp','AtribArray',4,'p_atribarray_Leftatribop','yacc.py',474),
  ('AtribArray -> AtribOp RARROW ID ArraySize','AtribArray',4,'p_atribarray_Rightatribop','yacc.py',509),
  ('ArraySize -> ArraySize [ AtribOp ]','ArraySize',4,'p_arraysize_rec','yacc.py',537),
  ('ArraySize -> [ AtribOp ]','ArraySize',3,'p_arraysize_empty','yacc.py',542),
  ('DeclAtrib -> ID ID LARROW AtribOp','DeclAtrib',4,'p_declatrib_left','yacc.py',547),
  ('DeclAtrib -> AtribOp RARROW ID ID','DeclAtrib',4,'p_declatrib_right','yacc.py',568),
  ('AtribNum -> ID LARROW AtribOp','AtribNum',3,'p_atribnum_left','yacc.py',589),
  ('AtribNum -> AtribOp RARROW ID','AtribNum',3,'p_atribnum_right','yacc.py',594),
  ('AtribNum -> AtribArray','AtribNum',1,'p_atribnum_array','yacc.py',600),
  ('Atrib -> ID LARROW AtribOp','Atrib',3,'p_atrib_left','yacc.py',605),
  ('Atrib -> AtribOp RARROW ID','Atrib',3,'p_atrib_right','yacc.py',610),
  ('Atrib -> ID SWAP ID','Atrib',3,'p_atrib_equiv','yacc.py',615),
  ('Atrib -> AtribArray','Atrib',1,'p_atrib_array','yacc.py',640),
  ('Op -> OpBin','Op',1,'p_op_opbin','yacc.py',650),
  ('OpUno -> NEG Base','OpUno',2,'p_opuno_neg','yacc.py',655),
  ('OpUno -> AccessArray','OpUno',1,'p_opuno_accessarray','yacc.py',660),
  ('OpUno -> SUB Base','OpUno',2,'p_opuno_minus','yacc.py',665),
  ('OpUno -> Base PRINT','OpUno',2,'p_opuno_print','yacc.py',670),
  ('AccessArray -> ID ArraySize','AccessArray',2,'p_accessarray','yacc.py',676),
  ('OpBin -> OpBin OpLogico TermPlus','OpBin',3,'p_opbin_rec','yacc.py',691),
  ('OpBin -> TermPlus','OpBin',1,'p_opbin_base','yacc.py',696),
  ('TermPlus -> TermPlus OpPlus TermMult','TermPlus',3,'p_termplus_rec','yacc.py',701),
  ('TermPlus -> TermMult','TermPlus',1,'p_termplus_base','yacc.py',706),
  ('TermMult -> TermMult OpMult TermPow','TermMult',3,'p_termmult_rec','yacc.py',711),
  ('TermMult -> TermPow','TermMult',1,'p_termmult_base','yacc.py',716),
  ('TermPow -> TermPow OpPow Base','TermPow',3,'p_termpow_rec','yacc.py',721),
  ('TermPow -> Base','TermPow',1,'p_termpow_base','yacc.py',726),
  ('Base -> OpUno','Base',1,'p_base_opuno','yacc.py',731),
  ('Base -> ( AtribOp )','Base',3,'p_base_exp','yacc.py',736),
  ('Base -> ID','Base',1,'p_base_id','yacc.py',741),
  ('Base -> NUM','Base',1,'p_base_num','yacc.py',754),
  ('Base -> FunCall','Base',1,'p_base_funcall','yacc.py',759),
  ('Base -> READ','Base',1,'p_base_read','yacc.py',769),
  ('FunCall -> ID ( FunArg )','FunCall',4,'p_funcall','yacc.py',774),
  ('FunArg -> FunRec','FunArg',1,'p_funarg_funrec','yacc.py',795),
  ('FunArg -> <empty>','FunArg',0,'p_funarg_empty','yacc.py',800),
  ('FunRec -> FunRec , AtribOp','FunRec',3,'p_funrec_rec','yacc.py',805),
  ('FunRec -> AtribOp','FunRec',1,'p_funrec_base','yacc.py',811),
  ('OpLogico -> AND','OpLogico',1,'p_oplogico_and','yacc.py',816),
  ('OpLogico -> OR','OpLogico',1,'p_oplogico_or','yacc.py',821),
  ('OpLogico -> LESSER','OpLogico',1,'p_oplogico_lesser','yacc.py',826),
  ('OpLogico -> GREATER','OpLogico',1,'p_oplogico_greater','yacc.py',831),
  ('OpLogico -> LEQ','OpLogico',1,'p_oplogico_leq','yacc.py',836),
  ('OpLogico -> GEQ','OpLogico',1,'p_oplogico_geq','yacc.py',841),
  ('OpLogico -> EQUAL','OpLogico',1,'p_oplogico_equal','yacc.py',846),
  ('OpPlus -> ADD','OpPlus',1,'p_opplus_add','yacc.py',851),
  ('OpPlus -> SUB','OpPlus',1,'p_opplus_sub','yacc.py',856),
  ('OpMult -> MUL','OpMult',1,'p_opmult_mul','yacc.py',861),
  ('OpMult -> DIV','OpMult',1,'p_opmult_div','yacc.py',866),
  ('OpPow -> POW','OpPow',1,'p_oppow','yacc.py',871),
]
