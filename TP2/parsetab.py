
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD AND DIFF DIV ELSE EQUAL GEQ GREATER ID IF LARROW LEQ LESSER MOD MUL NEG NUM OR POW PRINT RARROW READ STRING SUB SWAP SWITCHCASE SWITCHCOND WHILEAxiom : StartAxiom : Start : Start BlockStart : Start FunctionStart : Code : Code BlockCode : BlockBlock : FunCall ';'Block : Exp ';'Block : If Block : IfElse Block : While Block : Switch Body : '{' '}'Body : BlockBody : '{' Code '}'FunctionHeader : ID FunScope FunCasesFunction : FunctionHeader BodyFunScope : ':'FunCases : FunExtra RARROW IDFunCases : RARROW IDFunCases : FunExtraFunCases : FunExtra : FunExtra ',' IDFunExtra : IDIfScope : IFIf : IfScope AtribOp BodyElseScope : ELSEIfElse : IfScope AtribOp Body ElseScope BodyWhileScope : WHILEWhile : WhileScope '(' AtribOp ')' BodySwitchScope : SWITCHCONDSwitchScope : SWITCHCASESwitch : SwitchScope Conds '{' Cases '}'Conds : Conds ',' CondConds : CondCond : ID '(' AtribOp ')'Cond : '(' AtribOp ')'Cases : Cases Case Cases : CaseCase : ID ':' BodyCase : ':' BodyExp : STRING PRINTExp : AtribExp : OpExp : DeclExp : DeclArrayExp : DeclAtribAtribOp : AtribNumAtribOp : OpDecl : ID IDDeclArray : ID ID DeclArraySizeDeclArraySize : DeclArraySize '[' NUM ']'DeclArraySize : '[' NUM ']'AtribArray : ID ArraySize LARROW AtribOpAtribArray : AtribOp RARROW ID ArraySizeAccessArray : ID ArraySizeArraySize : ArraySize '[' AtribOp ']'ArraySize : '[' AtribOp ']'DeclAtrib : ID ID LARROW AtribOpDeclAtrib : AtribOp RARROW ID IDAtribNum : ID LARROW AtribOpAtribNum : AtribOp RARROW IDAtribNum : AtribArrayAtrib : ID LARROW AtribOpAtrib : AtribOp RARROW IDAtrib : ID SWAP IDAtrib : AtribArrayOp : OpBinOpUno : NEG BaseOpUno : AccessArrayOpUno : SUB BaseOpUno : Base PRINTOpBin : OpBin OpLogico TermModOpBin : TermModTermMod : TermMod OpMod TermPlusTermMod : TermPlusTermPlus : TermPlus OpPlus TermMultTermPlus : TermMultTermMult : TermMult OpMult TermPowTermMult : TermPowTermPow : TermPow OpPow BaseTermPow : BaseBase : OpUnoBase : '(' AtribOp ')'Base : IDBase : NUMBase : FunCallBase : READFunCall : ID '(' FunArg ')'FunArg : FunRecFunArg : FunRec : FunRec ',' AtribOpFunRec : AtribOpOpLogico : DIFFOpLogico : ANDOpLogico : OROpLogico : LESSEROpLogico : GREATEROpLogico : LEQOpLogico : GEQOpLogico : EQUALOpMod : MODOpPlus : ADDOpPlus : SUBOpMult : MULOpMult : DIVOpPow : POW"
    
_lr_action_items = {'$end':([0,1,2,3,4,7,8,9,10,42,43,44,46,92,113,126,159,160,161,],[-2,0,-1,-3,-4,-10,-11,-12,-13,-8,-9,-18,-15,-14,-27,-16,-29,-31,-34,]),'ID':([0,2,3,4,7,8,9,10,11,12,13,20,23,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,57,58,59,60,62,63,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,101,102,103,104,107,108,110,111,112,113,114,116,117,118,120,121,122,123,124,125,126,127,131,132,133,134,135,136,138,139,140,141,142,144,145,146,147,149,156,157,158,159,160,161,162,163,164,167,],[-5,12,-3,-4,-10,-11,-12,-13,47,48,58,58,67,-69,-26,-32,-33,-49,-75,-77,-79,-81,-83,-84,-87,-89,90,-71,90,-8,-9,-18,47,-15,48,58,101,58,106,-57,-19,58,-50,-86,-64,-88,47,114,58,58,90,-95,-96,-97,-98,-99,-100,-101,-102,90,-103,90,-104,-105,90,-106,-107,90,-108,-73,-70,-86,-72,-14,47,-7,58,-25,-17,-22,135,58,58,-85,139,58,-27,143,148,67,58,-74,-76,-78,-80,-82,-57,-16,-6,-90,58,156,157,-21,-55,-59,-63,-62,47,-28,-56,47,148,-40,47,-20,-24,-58,-29,-31,-34,-39,47,-42,-41,]),'STRING':([0,2,3,4,7,8,9,10,11,25,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,50,53,54,57,58,59,60,62,88,89,90,91,92,93,94,101,102,103,110,113,120,121,122,123,124,125,126,127,131,135,136,138,139,140,141,142,144,145,149,156,157,158,159,160,161,163,],[-5,14,-3,-4,-10,-11,-12,-13,14,-69,-49,-75,-77,-79,-81,-83,-84,-87,-89,-71,-8,-9,-18,14,-15,-23,-57,-19,-50,-86,-64,-88,14,-73,-70,-86,-72,-14,14,-7,-25,-17,-22,-85,-27,-74,-76,-78,-80,-82,-57,-16,-6,-90,-21,-55,-59,-63,-62,14,-28,-56,14,14,-20,-24,-58,-29,-31,-34,14,]),'IF':([0,2,3,4,7,8,9,10,11,25,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,50,53,54,57,58,59,60,62,88,89,90,91,92,93,94,101,102,103,110,113,120,121,122,123,124,125,126,127,131,135,136,138,139,140,141,142,144,145,149,156,157,158,159,160,161,163,],[-5,26,-3,-4,-10,-11,-12,-13,26,-69,-49,-75,-77,-79,-81,-83,-84,-87,-89,-71,-8,-9,-18,26,-15,-23,-57,-19,-50,-86,-64,-88,26,-73,-70,-86,-72,-14,26,-7,-25,-17,-22,-85,-27,-74,-76,-78,-80,-82,-57,-16,-6,-90,-21,-55,-59,-63,-62,26,-28,-56,26,26,-20,-24,-58,-29,-31,-34,26,]),'WHILE':([0,2,3,4,7,8,9,10,11,25,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,50,53,54,57,58,59,60,62,88,89,90,91,92,93,94,101,102,103,110,113,120,121,122,123,124,125,126,127,131,135,136,138,139,140,141,142,144,145,149,156,157,158,159,160,161,163,],[-5,27,-3,-4,-10,-11,-12,-13,27,-69,-49,-75,-77,-79,-81,-83,-84,-87,-89,-71,-8,-9,-18,27,-15,-23,-57,-19,-50,-86,-64,-88,27,-73,-70,-86,-72,-14,27,-7,-25,-17,-22,-85,-27,-74,-76,-78,-80,-82,-57,-16,-6,-90,-21,-55,-59,-63,-62,27,-28,-56,27,27,-20,-24,-58,-29,-31,-34,27,]),'SWITCHCOND':([0,2,3,4,7,8,9,10,11,25,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,50,53,54,57,58,59,60,62,88,89,90,91,92,93,94,101,102,103,110,113,120,121,122,123,124,125,126,127,131,135,136,138,139,140,141,142,144,145,149,156,157,158,159,160,161,163,],[-5,28,-3,-4,-10,-11,-12,-13,28,-69,-49,-75,-77,-79,-81,-83,-84,-87,-89,-71,-8,-9,-18,28,-15,-23,-57,-19,-50,-86,-64,-88,28,-73,-70,-86,-72,-14,28,-7,-25,-17,-22,-85,-27,-74,-76,-78,-80,-82,-57,-16,-6,-90,-21,-55,-59,-63,-62,28,-28,-56,28,28,-20,-24,-58,-29,-31,-34,28,]),'SWITCHCASE':([0,2,3,4,7,8,9,10,11,25,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,50,53,54,57,58,59,60,62,88,89,90,91,92,93,94,101,102,103,110,113,120,121,122,123,124,125,126,127,131,135,136,138,139,140,141,142,144,145,149,156,157,158,159,160,161,163,],[-5,29,-3,-4,-10,-11,-12,-13,29,-69,-49,-75,-77,-79,-81,-83,-84,-87,-89,-71,-8,-9,-18,29,-15,-23,-57,-19,-50,-86,-64,-88,29,-73,-70,-86,-72,-14,29,-7,-25,-17,-22,-85,-27,-74,-76,-78,-80,-82,-57,-16,-6,-90,-21,-55,-59,-63,-62,29,-28,-56,29,29,-20,-24,-58,-29,-31,-34,29,]),'(':([0,2,3,4,7,8,9,10,11,12,13,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,53,54,55,57,58,59,60,62,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,101,102,103,107,108,110,112,113,117,118,120,121,122,123,124,125,126,127,131,132,135,136,138,139,140,141,142,144,145,149,156,157,158,159,160,161,163,],[-5,13,-3,-4,-10,-11,-12,-13,13,49,13,13,64,68,-69,-26,-30,-32,-33,-49,-75,-77,-79,-81,-83,-84,-87,-89,13,-71,13,-8,-9,-18,13,-15,49,13,-23,13,-57,-19,13,-50,49,-64,-88,13,13,118,13,13,-95,-96,-97,-98,-99,-100,-101,-102,13,-103,13,-104,-105,13,-106,-107,13,-108,-73,-70,49,-72,-14,13,-7,13,-25,-17,-22,13,13,-85,13,-27,68,13,-74,-76,-78,-80,-82,-57,-16,-6,-90,13,-21,-55,-59,-63,-62,13,-28,-56,13,13,-20,-24,-58,-29,-31,-34,13,]),'NUM':([0,2,3,4,7,8,9,10,11,13,20,25,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,53,54,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,101,102,103,107,108,110,112,113,118,120,121,122,123,124,125,126,127,128,131,132,135,136,138,139,140,141,142,144,145,149,156,157,158,159,160,161,163,],[-5,37,-3,-4,-10,-11,-12,-13,37,37,37,-69,-26,-49,-75,-77,-79,-81,-83,-84,-87,-89,37,-71,37,-8,-9,-18,37,-15,37,-23,37,-57,-19,37,-50,-86,-64,-88,37,37,37,37,-95,-96,-97,-98,-99,-100,-101,-102,37,-103,37,-104,-105,37,-106,-107,37,-108,-73,-70,-86,-72,-14,37,-7,37,130,-25,-17,-22,37,37,-85,37,-27,37,-74,-76,-78,-80,-82,-57,-16,-6,153,-90,37,-21,-55,-59,-63,-62,37,-28,-56,37,37,-20,-24,-58,-29,-31,-34,37,]),'READ':([0,2,3,4,7,8,9,10,11,13,20,25,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,53,54,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,101,102,103,107,108,110,112,113,118,120,121,122,123,124,125,126,127,131,132,135,136,138,139,140,141,142,144,145,149,156,157,158,159,160,161,163,],[-5,38,-3,-4,-10,-11,-12,-13,38,38,38,-69,-26,-49,-75,-77,-79,-81,-83,-84,-87,-89,38,-71,38,-8,-9,-18,38,-15,38,-23,38,-57,-19,38,-50,-86,-64,-88,38,38,38,38,-95,-96,-97,-98,-99,-100,-101,-102,38,-103,38,-104,-105,38,-106,-107,38,-108,-73,-70,-86,-72,-14,38,-7,38,-25,-17,-22,38,38,-85,38,-27,38,-74,-76,-78,-80,-82,-57,-16,-6,-90,38,-21,-55,-59,-63,-62,38,-28,-56,38,38,-20,-24,-58,-29,-31,-34,38,]),'NEG':([0,2,3,4,7,8,9,10,11,13,20,25,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,53,54,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,101,102,103,107,108,110,112,113,118,120,121,122,123,124,125,126,127,131,132,135,136,138,139,140,141,142,144,145,149,156,157,158,159,160,161,163,],[-5,39,-3,-4,-10,-11,-12,-13,39,39,39,-69,-26,-49,-75,-77,-79,-81,-83,-84,-87,-89,39,-71,39,-8,-9,-18,39,-15,39,-23,39,-57,-19,39,-50,-86,-64,-88,39,39,39,39,-95,-96,-97,-98,-99,-100,-101,-102,39,-103,39,-104,-105,39,-106,-107,39,-108,-73,-70,-86,-72,-14,39,-7,39,-25,-17,-22,39,39,-85,39,-27,39,-74,-76,-78,-80,-82,-57,-16,-6,-90,39,-21,-55,-59,-63,-62,39,-28,-56,39,39,-20,-24,-58,-29,-31,-34,39,]),'SUB':([0,2,3,4,5,7,8,9,10,11,12,13,20,25,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,53,54,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,101,102,103,107,108,110,112,113,118,120,121,122,123,124,125,126,127,131,132,135,136,138,139,140,141,142,144,145,149,156,157,158,159,160,161,163,],[-5,41,-3,-4,-88,-10,-11,-12,-13,41,-86,41,41,-69,-26,-49,-75,82,-79,-81,-83,-84,-87,-89,41,-71,41,-8,-9,-18,41,-15,-86,41,-23,41,-57,-19,41,-50,-86,-64,-88,41,41,41,41,-95,-96,-97,-98,-99,-100,-101,-102,41,-103,41,-104,-105,41,-106,-107,41,-108,-73,-70,-86,-72,-14,41,-7,41,-25,-17,-22,41,41,-85,41,-27,41,-74,82,-78,-80,-82,-57,-16,-6,-90,41,-21,-55,-59,-63,-62,41,-28,-56,41,41,-20,-24,-58,-29,-31,-34,41,]),';':([5,6,12,15,16,17,18,19,24,25,30,31,32,33,34,35,36,37,38,40,47,48,53,57,58,59,60,61,88,89,90,91,95,105,106,110,114,120,121,122,123,124,125,129,131,136,138,139,140,143,144,154,158,166,],[42,43,-86,-44,-45,-46,-47,-48,-68,-69,-49,-75,-77,-79,-81,-83,-84,-87,-89,-71,-86,-51,-57,-50,-86,-64,-88,-43,-73,-70,-86,-72,-52,-65,-67,-85,-66,-74,-76,-78,-80,-82,-57,-60,-90,-55,-59,-63,-62,-61,-56,-54,-58,-53,]),'PRINT':([5,12,14,35,36,37,38,40,47,53,58,60,88,89,90,91,110,124,125,131,138,158,],[-88,-86,61,88,-84,-87,-89,-71,-86,-57,-86,-88,-73,88,-86,88,-85,88,-57,-90,-59,-58,]),'POW':([5,12,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,123,124,125,131,138,158,],[-88,-86,87,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,87,-82,-57,-90,-59,-58,]),'MUL':([5,12,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,122,123,124,125,131,138,158,],[-88,-86,84,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,84,-80,-82,-57,-90,-59,-58,]),'DIV':([5,12,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,122,123,124,125,131,138,158,],[-88,-86,85,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,85,-80,-82,-57,-90,-59,-58,]),'ADD':([5,12,32,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,121,122,123,124,125,131,138,158,],[-88,-86,81,-79,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,81,-78,-80,-82,-57,-90,-59,-58,]),'MOD':([5,12,31,32,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,120,121,122,123,124,125,131,138,158,],[-88,-86,79,-77,-79,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,79,-76,-78,-80,-82,-57,-90,-59,-58,]),'DIFF':([5,12,25,31,32,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,120,121,122,123,124,125,131,138,158,],[-88,-86,70,-75,-77,-79,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,-74,-76,-78,-80,-82,-57,-90,-59,-58,]),'AND':([5,12,25,31,32,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,120,121,122,123,124,125,131,138,158,],[-88,-86,71,-75,-77,-79,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,-74,-76,-78,-80,-82,-57,-90,-59,-58,]),'OR':([5,12,25,31,32,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,120,121,122,123,124,125,131,138,158,],[-88,-86,72,-75,-77,-79,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,-74,-76,-78,-80,-82,-57,-90,-59,-58,]),'LESSER':([5,12,25,31,32,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,120,121,122,123,124,125,131,138,158,],[-88,-86,73,-75,-77,-79,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,-74,-76,-78,-80,-82,-57,-90,-59,-58,]),'GREATER':([5,12,25,31,32,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,120,121,122,123,124,125,131,138,158,],[-88,-86,74,-75,-77,-79,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,-74,-76,-78,-80,-82,-57,-90,-59,-58,]),'LEQ':([5,12,25,31,32,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,120,121,122,123,124,125,131,138,158,],[-88,-86,75,-75,-77,-79,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,-74,-76,-78,-80,-82,-57,-90,-59,-58,]),'GEQ':([5,12,25,31,32,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,120,121,122,123,124,125,131,138,158,],[-88,-86,76,-75,-77,-79,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,-74,-76,-78,-80,-82,-57,-90,-59,-58,]),'EQUAL':([5,12,25,31,32,33,34,35,36,37,38,40,47,53,58,60,88,89,90,91,110,120,121,122,123,124,125,131,138,158,],[-88,-86,77,-75,-77,-79,-81,-83,-84,-87,-89,-71,-86,-57,-86,-88,-73,-70,-86,-72,-85,-74,-76,-78,-80,-82,-57,-90,-59,-58,]),'RARROW':([5,12,16,21,24,25,30,31,32,33,34,35,36,37,38,40,47,50,53,54,56,57,58,59,60,62,88,89,90,91,100,101,103,105,109,110,114,115,119,120,121,122,123,124,125,129,131,136,137,138,139,140,144,151,155,157,158,],[-88,-86,-50,63,-64,-69,-49,-75,-77,-79,-81,-83,-84,-87,-89,-71,-86,104,-57,-19,111,-50,-86,-64,-88,111,-73,-70,-86,-72,111,-25,133,111,111,-85,-63,111,111,-74,-76,-78,-80,-82,-57,111,-90,111,111,-59,-63,111,-56,111,111,-24,-58,]),'}':([7,8,9,10,42,43,45,46,92,93,94,113,126,127,146,147,159,160,161,162,164,167,],[-10,-11,-12,-13,-8,-9,92,-15,-14,126,-7,-27,-16,-6,161,-40,-29,-31,-34,-39,-42,-41,]),'ELSE':([7,8,9,10,42,43,46,92,113,126,159,160,161,],[-10,-11,-12,-13,-8,-9,-15,-14,142,-16,-29,-31,-34,]),':':([7,8,9,10,12,42,43,46,92,113,116,126,146,147,148,159,160,161,162,164,167,],[-10,-11,-12,-13,54,-8,-9,-15,-14,-27,149,-16,149,-40,163,-29,-31,-34,-39,-42,-41,]),'{':([11,25,30,31,32,33,34,35,36,37,38,40,50,53,54,57,58,59,60,62,65,66,88,89,90,91,101,102,103,110,120,121,122,123,124,125,131,135,136,138,139,140,141,142,144,145,149,150,152,156,157,158,163,165,],[45,-69,-49,-75,-77,-79,-81,-83,-84,-87,-89,-71,-23,-57,-19,-50,-86,-64,-88,45,116,-36,-73,-70,-86,-72,-25,-17,-22,-85,-74,-76,-78,-80,-82,-57,-90,-21,-55,-59,-63,-62,45,-28,-56,45,45,-35,-38,-20,-24,-58,45,-37,]),'LARROW':([12,47,48,53,58,138,158,],[51,51,96,107,112,-59,-58,]),'SWAP':([12,47,],[52,52,]),'[':([12,47,48,53,58,90,95,114,125,138,139,144,154,158,166,],[55,55,97,108,55,55,128,55,108,-59,55,108,-54,-58,-53,]),')':([25,30,31,32,33,34,35,36,37,38,40,49,53,56,57,58,59,60,88,89,90,91,98,99,100,110,115,119,120,121,122,123,124,125,131,136,138,139,140,144,151,155,158,],[-69,-49,-75,-77,-79,-81,-83,-84,-87,-89,-71,-92,-57,110,-50,-86,-64,-88,-73,-70,-86,-72,131,-91,-94,-85,145,152,-74,-76,-78,-80,-82,-57,-90,-55,-59,-63,-62,-56,165,-93,-58,]),',':([25,30,31,32,33,34,35,36,37,38,40,53,57,58,59,60,65,66,88,89,90,91,99,100,101,103,110,120,121,122,123,124,125,131,136,138,139,140,144,150,152,155,157,158,165,],[-69,-49,-75,-77,-79,-81,-83,-84,-87,-89,-71,-57,-50,-86,-64,-88,117,-36,-73,-70,-86,-72,132,-94,-25,134,-85,-74,-76,-78,-80,-82,-57,-90,-55,-59,-63,-62,-56,-35,-38,-93,-24,-58,-37,]),']':([25,30,31,32,33,34,35,36,37,38,40,53,57,58,59,60,88,89,90,91,109,110,120,121,122,123,124,125,130,131,136,137,138,139,140,144,153,158,],[-69,-49,-75,-77,-79,-81,-83,-84,-87,-89,-71,-57,-50,-86,-64,-88,-73,-70,-86,-72,138,-85,-74,-76,-78,-80,-82,-57,154,-90,-55,158,-59,-63,-62,-56,166,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Axiom':([0,],[1,]),'Start':([0,],[2,]),'Block':([2,11,45,62,93,141,145,149,163,],[3,46,94,46,127,46,46,46,46,]),'Function':([2,],[4,]),'FunCall':([2,11,13,20,39,41,45,49,51,55,62,64,68,69,78,80,83,86,93,96,107,108,112,118,132,141,145,149,163,],[5,5,60,60,60,60,5,60,60,60,5,60,60,60,60,60,60,60,5,60,60,60,60,60,60,5,5,5,5,]),'Exp':([2,11,45,62,93,141,145,149,163,],[6,6,6,6,6,6,6,6,6,]),'If':([2,11,45,62,93,141,145,149,163,],[7,7,7,7,7,7,7,7,7,]),'IfElse':([2,11,45,62,93,141,145,149,163,],[8,8,8,8,8,8,8,8,8,]),'While':([2,11,45,62,93,141,145,149,163,],[9,9,9,9,9,9,9,9,9,]),'Switch':([2,11,45,62,93,141,145,149,163,],[10,10,10,10,10,10,10,10,10,]),'FunctionHeader':([2,],[11,]),'Atrib':([2,11,45,62,93,141,145,149,163,],[15,15,15,15,15,15,15,15,15,]),'Op':([2,11,13,20,45,49,51,55,62,64,68,93,96,107,108,112,118,132,141,145,149,163,],[16,16,57,57,16,57,57,57,16,57,57,16,57,57,57,57,57,57,16,16,16,16,]),'Decl':([2,11,45,62,93,141,145,149,163,],[17,17,17,17,17,17,17,17,17,]),'DeclArray':([2,11,45,62,93,141,145,149,163,],[18,18,18,18,18,18,18,18,18,]),'DeclAtrib':([2,11,45,62,93,141,145,149,163,],[19,19,19,19,19,19,19,19,19,]),'IfScope':([2,11,45,62,93,141,145,149,163,],[20,20,20,20,20,20,20,20,20,]),'AtribOp':([2,11,13,20,45,49,51,55,62,64,68,93,96,107,108,112,118,132,141,145,149,163,],[21,21,56,62,21,100,105,109,21,115,119,21,129,136,137,140,151,155,21,21,21,21,]),'WhileScope':([2,11,45,62,93,141,145,149,163,],[22,22,22,22,22,22,22,22,22,]),'SwitchScope':([2,11,45,62,93,141,145,149,163,],[23,23,23,23,23,23,23,23,23,]),'AtribArray':([2,11,13,20,45,49,51,55,62,64,68,93,96,107,108,112,118,132,141,145,149,163,],[24,24,59,59,24,59,59,59,24,59,59,24,59,59,59,59,59,59,24,24,24,24,]),'OpBin':([2,11,13,20,45,49,51,55,62,64,68,93,96,107,108,112,118,132,141,145,149,163,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'AtribNum':([2,11,13,20,45,49,51,55,62,64,68,93,96,107,108,112,118,132,141,145,149,163,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TermMod':([2,11,13,20,45,49,51,55,62,64,68,69,93,96,107,108,112,118,132,141,145,149,163,],[31,31,31,31,31,31,31,31,31,31,31,120,31,31,31,31,31,31,31,31,31,31,31,]),'TermPlus':([2,11,13,20,45,49,51,55,62,64,68,69,78,93,96,107,108,112,118,132,141,145,149,163,],[32,32,32,32,32,32,32,32,32,32,32,32,121,32,32,32,32,32,32,32,32,32,32,32,]),'TermMult':([2,11,13,20,45,49,51,55,62,64,68,69,78,80,93,96,107,108,112,118,132,141,145,149,163,],[33,33,33,33,33,33,33,33,33,33,33,33,33,122,33,33,33,33,33,33,33,33,33,33,33,]),'TermPow':([2,11,13,20,45,49,51,55,62,64,68,69,78,80,83,93,96,107,108,112,118,132,141,145,149,163,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,123,34,34,34,34,34,34,34,34,34,34,34,]),'Base':([2,11,13,20,39,41,45,49,51,55,62,64,68,69,78,80,83,86,93,96,107,108,112,118,132,141,145,149,163,],[35,35,35,35,89,91,35,35,35,35,35,35,35,35,35,35,35,124,35,35,35,35,35,35,35,35,35,35,35,]),'OpUno':([2,11,13,20,39,41,45,49,51,55,62,64,68,69,78,80,83,86,93,96,107,108,112,118,132,141,145,149,163,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'AccessArray':([2,11,13,20,39,41,45,49,51,55,62,64,68,69,78,80,83,86,93,96,107,108,112,118,132,141,145,149,163,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'Body':([11,62,141,145,149,163,],[44,113,159,160,164,167,]),'FunScope':([12,],[50,]),'ArraySize':([12,47,58,90,114,139,],[53,53,53,125,144,144,]),'Conds':([23,],[65,]),'Cond':([23,117,],[66,150,]),'OpLogico':([25,],[69,]),'OpMod':([31,120,],[78,78,]),'OpPlus':([32,121,],[80,80,]),'OpMult':([33,122,],[83,83,]),'OpPow':([34,123,],[86,86,]),'Code':([45,],[93,]),'DeclArraySize':([48,],[95,]),'FunArg':([49,],[98,]),'FunRec':([49,],[99,]),'FunCases':([50,],[102,]),'FunExtra':([50,],[103,]),'ElseScope':([113,],[141,]),'Cases':([116,],[146,]),'Case':([116,146,],[147,162,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Axiom","S'",1,None,None,None),
  ('Axiom -> Start','Axiom',1,'p_axiom_start','yacc.py',7),
  ('Axiom -> <empty>','Axiom',0,'p_start_empty','yacc.py',15),
  ('Start -> Start Block','Start',2,'p_axiom_code','yacc.py',20),
  ('Start -> Start Function','Start',2,'p_axiom_function','yacc.py',26),
  ('Start -> <empty>','Start',0,'p_axiom_empty','yacc.py',32),
  ('Code -> Code Block','Code',2,'p_code_block','yacc.py',37),
  ('Code -> Block','Code',1,'p_code_empty','yacc.py',42),
  ('Block -> FunCall ;','Block',2,'p_block_funcall','yacc.py',47),
  ('Block -> Exp ;','Block',2,'p_block_exp','yacc.py',55),
  ('Block -> If','Block',1,'p_block_if','yacc.py',60),
  ('Block -> IfElse','Block',1,'p_block_ifelse','yacc.py',65),
  ('Block -> While','Block',1,'p_block_while','yacc.py',70),
  ('Block -> Switch','Block',1,'p_block_switch','yacc.py',75),
  ('Body -> { }','Body',2,'p_body_empty','yacc.py',84),
  ('Body -> Block','Body',1,'p_body_block','yacc.py',89),
  ('Body -> { Code }','Body',3,'p_body_code','yacc.py',94),
  ('FunctionHeader -> ID FunScope FunCases','FunctionHeader',3,'p_function_header','yacc.py',98),
  ('Function -> FunctionHeader Body','Function',2,'p_function','yacc.py',117),
  ('FunScope -> :','FunScope',1,'p_funscope','yacc.py',140),
  ('FunCases -> FunExtra RARROW ID','FunCases',3,'p_funcases_funextra_rarrow','yacc.py',146),
  ('FunCases -> RARROW ID','FunCases',2,'p_funcases_rarrow','yacc.py',167),
  ('FunCases -> FunExtra','FunCases',1,'p_funcases_funextra','yacc.py',177),
  ('FunCases -> <empty>','FunCases',0,'p_funcases_empty','yacc.py',193),
  ('FunExtra -> FunExtra , ID','FunExtra',3,'p_funextra_rec','yacc.py',199),
  ('FunExtra -> ID','FunExtra',1,'p_funextra_empty','yacc.py',205),
  ('IfScope -> IF','IfScope',1,'p_if_scope','yacc.py',210),
  ('If -> IfScope AtribOp Body','If',3,'p_if','yacc.py',216),
  ('ElseScope -> ELSE','ElseScope',1,'p_else_scope','yacc.py',228),
  ('IfElse -> IfScope AtribOp Body ElseScope Body','IfElse',5,'p_ifelse','yacc.py',237),
  ('WhileScope -> WHILE','WhileScope',1,'p_while_scope','yacc.py',253),
  ('While -> WhileScope ( AtribOp ) Body','While',5,'p_while','yacc.py',259),
  ('SwitchScope -> SWITCHCOND','SwitchScope',1,'p_switch_scopecond','yacc.py',277),
  ('SwitchScope -> SWITCHCASE','SwitchScope',1,'p_switch_scopecase','yacc.py',289),
  ('Switch -> SwitchScope Conds { Cases }','Switch',5,'p_switch','yacc.py',302),
  ('Conds -> Conds , Cond','Conds',3,'p_conds_rec','yacc.py',343),
  ('Conds -> Cond','Conds',1,'p_conds_base','yacc.py',349),
  ('Cond -> ID ( AtribOp )','Cond',4,'p_cond_id','yacc.py',354),
  ('Cond -> ( AtribOp )','Cond',3,'p_cond_empty','yacc.py',360),
  ('Cases -> Cases Case','Cases',2,'p_cases_rec','yacc.py',366),
  ('Cases -> Case','Cases',1,'p_cases_base','yacc.py',372),
  ('Case -> ID : Body','Case',3,'p_case_id','yacc.py',377),
  ('Case -> : Body','Case',2,'p_case_empty','yacc.py',387),
  ('Exp -> STRING PRINT','Exp',2,'p_exp_print','yacc.py',396),
  ('Exp -> Atrib','Exp',1,'p_exp_atrib','yacc.py',401),
  ('Exp -> Op','Exp',1,'p_exp_op','yacc.py',406),
  ('Exp -> Decl','Exp',1,'p_exp_decl','yacc.py',411),
  ('Exp -> DeclArray','Exp',1,'p_exp_declarray','yacc.py',416),
  ('Exp -> DeclAtrib','Exp',1,'p_exp_declatrib','yacc.py',421),
  ('AtribOp -> AtribNum','AtribOp',1,'p_atribop_atribnum','yacc.py',426),
  ('AtribOp -> Op','AtribOp',1,'p_atribop_op','yacc.py',431),
  ('Decl -> ID ID','Decl',2,'p_decl','yacc.py',436),
  ('DeclArray -> ID ID DeclArraySize','DeclArray',3,'p_declarray','yacc.py',461),
  ('DeclArraySize -> DeclArraySize [ NUM ]','DeclArraySize',4,'p_declarraysize_rec','yacc.py',490),
  ('DeclArraySize -> [ NUM ]','DeclArraySize',3,'p_declarraysize_empty','yacc.py',496),
  ('AtribArray -> ID ArraySize LARROW AtribOp','AtribArray',4,'p_atribarray_Leftatribop','yacc.py',501),
  ('AtribArray -> AtribOp RARROW ID ArraySize','AtribArray',4,'p_atribarray_Rightatribop','yacc.py',536),
  ('AccessArray -> ID ArraySize','AccessArray',2,'p_accessarray','yacc.py',576),
  ('ArraySize -> ArraySize [ AtribOp ]','ArraySize',4,'p_arraysize_rec','yacc.py',600),
  ('ArraySize -> [ AtribOp ]','ArraySize',3,'p_arraysize_empty','yacc.py',605),
  ('DeclAtrib -> ID ID LARROW AtribOp','DeclAtrib',4,'p_declatrib_left','yacc.py',610),
  ('DeclAtrib -> AtribOp RARROW ID ID','DeclAtrib',4,'p_declatrib_right','yacc.py',632),
  ('AtribNum -> ID LARROW AtribOp','AtribNum',3,'p_atribnum_left','yacc.py',654),
  ('AtribNum -> AtribOp RARROW ID','AtribNum',3,'p_atribnum_right','yacc.py',659),
  ('AtribNum -> AtribArray','AtribNum',1,'p_atribnum_array','yacc.py',665),
  ('Atrib -> ID LARROW AtribOp','Atrib',3,'p_atrib_left','yacc.py',670),
  ('Atrib -> AtribOp RARROW ID','Atrib',3,'p_atrib_right','yacc.py',675),
  ('Atrib -> ID SWAP ID','Atrib',3,'p_atrib_equiv','yacc.py',680),
  ('Atrib -> AtribArray','Atrib',1,'p_atrib_array','yacc.py',722),
  ('Op -> OpBin','Op',1,'p_op_opbin','yacc.py',732),
  ('OpUno -> NEG Base','OpUno',2,'p_opuno_neg','yacc.py',737),
  ('OpUno -> AccessArray','OpUno',1,'p_opuno_accessarray','yacc.py',742),
  ('OpUno -> SUB Base','OpUno',2,'p_opuno_minus','yacc.py',747),
  ('OpUno -> Base PRINT','OpUno',2,'p_opuno_print','yacc.py',752),
  ('OpBin -> OpBin OpLogico TermMod','OpBin',3,'p_opbin_rec','yacc.py',759),
  ('OpBin -> TermMod','OpBin',1,'p_opbin_base','yacc.py',764),
  ('TermMod -> TermMod OpMod TermPlus','TermMod',3,'p_opmod_rec','yacc.py',769),
  ('TermMod -> TermPlus','TermMod',1,'p_opmod_base','yacc.py',774),
  ('TermPlus -> TermPlus OpPlus TermMult','TermPlus',3,'p_termplus_rec','yacc.py',779),
  ('TermPlus -> TermMult','TermPlus',1,'p_termplus_base','yacc.py',784),
  ('TermMult -> TermMult OpMult TermPow','TermMult',3,'p_termmult_rec','yacc.py',789),
  ('TermMult -> TermPow','TermMult',1,'p_termmult_base','yacc.py',794),
  ('TermPow -> TermPow OpPow Base','TermPow',3,'p_termpow_rec','yacc.py',799),
  ('TermPow -> Base','TermPow',1,'p_termpow_base','yacc.py',804),
  ('Base -> OpUno','Base',1,'p_base_opuno','yacc.py',809),
  ('Base -> ( AtribOp )','Base',3,'p_base_exp','yacc.py',814),
  ('Base -> ID','Base',1,'p_base_id','yacc.py',819),
  ('Base -> NUM','Base',1,'p_base_num','yacc.py',833),
  ('Base -> FunCall','Base',1,'p_base_funcall','yacc.py',838),
  ('Base -> READ','Base',1,'p_base_read','yacc.py',848),
  ('FunCall -> ID ( FunArg )','FunCall',4,'p_funcall','yacc.py',853),
  ('FunArg -> FunRec','FunArg',1,'p_funarg_funrec','yacc.py',874),
  ('FunArg -> <empty>','FunArg',0,'p_funarg_empty','yacc.py',879),
  ('FunRec -> FunRec , AtribOp','FunRec',3,'p_funrec_rec','yacc.py',884),
  ('FunRec -> AtribOp','FunRec',1,'p_funrec_base','yacc.py',890),
  ('OpLogico -> DIFF','OpLogico',1,'p_oplogico_diff','yacc.py',895),
  ('OpLogico -> AND','OpLogico',1,'p_oplogico_and','yacc.py',899),
  ('OpLogico -> OR','OpLogico',1,'p_oplogico_or','yacc.py',904),
  ('OpLogico -> LESSER','OpLogico',1,'p_oplogico_lesser','yacc.py',909),
  ('OpLogico -> GREATER','OpLogico',1,'p_oplogico_greater','yacc.py',914),
  ('OpLogico -> LEQ','OpLogico',1,'p_oplogico_leq','yacc.py',919),
  ('OpLogico -> GEQ','OpLogico',1,'p_oplogico_geq','yacc.py',924),
  ('OpLogico -> EQUAL','OpLogico',1,'p_oplogico_equal','yacc.py',929),
  ('OpMod -> MOD','OpMod',1,'p_opmod_mod','yacc.py',933),
  ('OpPlus -> ADD','OpPlus',1,'p_opplus_add','yacc.py',937),
  ('OpPlus -> SUB','OpPlus',1,'p_opplus_sub','yacc.py',942),
  ('OpMult -> MUL','OpMult',1,'p_opmult_mul','yacc.py',947),
  ('OpMult -> DIV','OpMult',1,'p_opmult_div','yacc.py',952),
  ('OpPow -> POW','OpPow',1,'p_oppow','yacc.py',957),
]
