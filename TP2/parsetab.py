
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD AND DIV ELSE EQUAL GEQ GREATER ID IF LARROW LEQ LESSER MUL NEG NUM OR POW RARROW SUB SWAP SWITCH WHILEStart : AxiomStart : Axiom : Axiom BlockAxiom : Axiom FunctionAxiom : Code : Code BlockCode : BlockBlock : Exp ';'Block : If Block : IfElse Block : While Block : Switch Body : '{' '}'Body : BlockBody : '{' Code '}'Function : ID FunScope FunCases BodyFunScope : ':'FunCases : FunExtra RARROW IDFunCases : RARROW IDFunCases : FunExtraFunCases : FunExtra : FunExtra ',' IDFunExtra : IDIfScope : IFIf : IfScope AtribOp BodyElseScope : ELSEIfElse : IfScope AtribOp Body ElseScope BodyWhileScope : WHILEWhile : WhileScope '(' AtribOp ')' BodySwitchScope : SWITCHSwitch : SwitchScope Conds '{' Cases '}'Conds : Conds ',' CondConds : CondCond : ID '(' AtribOp ')'Cond : '(' AtribOp ')'Cases : Cases Case Cases : CaseCase : ID ':' BodyCase : ':' BodyExp : AtribExp : OpExp : DeclExp : DeclArrayExp : DeclAtribAtribOp : AtribNumAtribOp : OpDecl : ID IDDeclArray : ID ID DeclArraySizeDeclArraySize : DeclArraySize '[' NUM ']'DeclArraySize : '[' NUM ']'AtribArray : ID ArraySize LARROW AtribOpAtribArray : AtribOp RARROW ID ArraySizeArraySize : ArraySize '[' AtribOp ']'ArraySize : '[' AtribOp ']'DeclAtrib : ID ID LARROW AtribOpDeclAtrib : AtribOp RARROW ID IDAtribNum : ID LARROW AtribOpAtribNum : AtribOp RARROW IDAtribNum : AtribArrayAtrib : ID LARROW AtribOpAtrib : AtribOp RARROW IDAtrib : ID SWAP IDAtrib : AtribArrayOp : OpBinOpUno : NEG BaseOpUno : AccessArrayOpUno : SUB BaseOpUno : Base '?'AccessArray : ID ArraySizeOpBin : OpBin OpLogico TermPlusOpBin : TermPlusTermPlus : TermPlus OpPlus TermMultTermPlus : TermMultTermMult : TermMult OpMult TermPowTermMult : TermPowTermPow : TermPow OpPow BaseTermPow : BaseBase : OpUnoBase : '(' AtribOp ')'Base : IDBase : NUMBase : FunCallBase : '¿'FunCall : ID '(' FunArg ')'FunArg : FunRecFunArg : FunRec : FunRec ',' AtribOpFunRec : AtribOpOpLogico : ANDOpLogico : OROpLogico : LESSEROpLogico : GREATEROpLogico : LEQOpLogico : GEQOpLogico : EQUALOpPlus : ADDOpPlus : SUBOpMult : MULOpMult : DIVOpPow : POW"
    
_lr_action_items = {'$end':([0,1,2,3,4,6,7,8,9,38,93,97,114,126,146,147,149,150,],[-2,0,-1,-3,-4,-9,-10,-11,-12,-8,-25,-14,-16,-13,-27,-15,-29,-31,]),'ID':([0,2,3,4,6,7,8,9,10,16,19,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,83,84,87,88,93,94,95,96,97,98,99,101,102,103,104,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,131,132,133,134,136,142,143,144,146,147,148,149,150,151,152,153,156,],[-5,10,-3,-4,-9,-10,-11,-12,39,49,49,56,-64,-24,-30,-45,-71,-73,-75,-77,-78,-81,-82,-83,76,-66,76,-8,81,49,86,-69,49,-17,49,95,-46,-80,-59,99,49,49,76,-89,-90,-91,-92,-93,-94,-95,76,-96,-97,76,-98,-99,76,-100,-68,-65,-80,-67,49,-23,95,-20,117,49,49,-25,125,39,95,-14,49,130,-79,135,56,49,-70,-72,-74,-76,-69,-16,142,143,-19,-51,-84,49,-54,95,-26,-58,-13,95,-7,-57,-52,95,135,-37,95,-18,-22,-53,-27,-15,-6,-29,-31,-36,95,-39,-38,]),'IF':([0,2,3,4,6,7,8,9,22,26,27,28,29,30,31,32,33,34,36,38,40,43,45,47,48,49,50,74,75,76,77,81,82,83,93,96,97,101,106,107,108,109,110,114,117,118,120,122,123,124,125,126,127,128,129,131,132,136,142,143,144,146,147,148,149,150,152,],[-5,23,-3,-4,-9,-10,-11,-12,-64,-45,-71,-73,-75,-77,-78,-81,-82,-83,-66,-8,-21,-69,-17,23,-46,-80,-59,-68,-65,-80,-67,-23,23,-20,-25,23,-14,-79,-70,-72,-74,-76,-69,-16,-19,-51,-84,-54,23,-26,-58,-13,23,-7,-57,-52,23,23,-18,-22,-53,-27,-15,-6,-29,-31,23,]),'WHILE':([0,2,3,4,6,7,8,9,22,26,27,28,29,30,31,32,33,34,36,38,40,43,45,47,48,49,50,74,75,76,77,81,82,83,93,96,97,101,106,107,108,109,110,114,117,118,120,122,123,124,125,126,127,128,129,131,132,136,142,143,144,146,147,148,149,150,152,],[-5,24,-3,-4,-9,-10,-11,-12,-64,-45,-71,-73,-75,-77,-78,-81,-82,-83,-66,-8,-21,-69,-17,24,-46,-80,-59,-68,-65,-80,-67,-23,24,-20,-25,24,-14,-79,-70,-72,-74,-76,-69,-16,-19,-51,-84,-54,24,-26,-58,-13,24,-7,-57,-52,24,24,-18,-22,-53,-27,-15,-6,-29,-31,24,]),'SWITCH':([0,2,3,4,6,7,8,9,22,26,27,28,29,30,31,32,33,34,36,38,40,43,45,47,48,49,50,74,75,76,77,81,82,83,93,96,97,101,106,107,108,109,110,114,117,118,120,122,123,124,125,126,127,128,129,131,132,136,142,143,144,146,147,148,149,150,152,],[-5,25,-3,-4,-9,-10,-11,-12,-64,-45,-71,-73,-75,-77,-78,-81,-82,-83,-66,-8,-21,-69,-17,25,-46,-80,-59,-68,-65,-80,-67,-23,25,-20,-25,25,-14,-79,-70,-72,-74,-76,-69,-16,-19,-51,-84,-54,25,-26,-58,-13,25,-7,-57,-52,25,25,-18,-22,-53,-27,-15,-6,-29,-31,25,]),'(':([0,2,3,4,6,7,8,9,10,16,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,43,44,45,46,47,48,49,50,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,83,87,88,93,95,96,97,98,101,103,104,106,107,108,109,110,114,117,118,120,121,122,123,124,125,126,127,128,129,131,132,136,142,143,144,146,147,148,149,150,152,],[-5,19,-3,-4,-9,-10,-11,-12,44,19,52,19,57,-64,-24,-28,-30,-45,-71,-73,-75,-77,-78,-81,-82,-83,19,-66,19,-8,-21,19,-69,19,-17,19,19,-46,44,-59,19,104,19,19,-89,-90,-91,-92,-93,-94,-95,19,-96,-97,19,-98,-99,19,-100,-68,-65,44,-67,19,-23,19,-20,19,19,-25,44,19,-14,19,-79,57,19,-70,-72,-74,-76,-69,-16,-19,-51,-84,19,-54,19,-26,-58,-13,19,-7,-57,-52,19,19,-18,-22,-53,-27,-15,-6,-29,-31,19,]),'NUM':([0,2,3,4,6,7,8,9,16,19,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,87,88,93,96,97,98,101,104,106,107,108,109,110,111,114,117,118,120,121,122,123,124,125,126,127,128,129,131,132,136,142,143,144,146,147,148,149,150,152,],[-5,32,-3,-4,-9,-10,-11,-12,32,32,-64,-24,-45,-71,-73,-75,-77,-78,-81,-82,-83,32,-66,32,-8,-21,32,-69,32,-17,32,32,-46,-80,-59,32,32,32,-89,-90,-91,-92,-93,-94,-95,32,-96,-97,32,-98,-99,32,-100,-68,-65,-80,-67,32,113,-23,32,-20,32,32,-25,32,-14,32,-79,32,-70,-72,-74,-76,-69,140,-16,-19,-51,-84,32,-54,32,-26,-58,-13,32,-7,-57,-52,32,32,-18,-22,-53,-27,-15,-6,-29,-31,32,]),'�':([0,2,3,4,6,7,8,9,16,19,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,83,87,88,93,96,97,98,101,104,106,107,108,109,110,114,117,118,120,121,122,123,124,125,126,127,128,129,131,132,136,142,143,144,146,147,148,149,150,152,],[-5,34,-3,-4,-9,-10,-11,-12,34,34,-64,-24,-45,-71,-73,-75,-77,-78,-81,-82,-83,34,-66,34,-8,-21,34,-69,34,-17,34,34,-46,-80,-59,34,34,34,-89,-90,-91,-92,-93,-94,-95,34,-96,-97,34,-98,-99,34,-100,-68,-65,-80,-67,34,-23,34,-20,34,34,-25,34,-14,34,-79,34,-70,-72,-74,-76,-69,-16,-19,-51,-84,34,-54,34,-26,-58,-13,34,-7,-57,-52,34,34,-18,-22,-53,-27,-15,-6,-29,-31,34,]),'NEG':([0,2,3,4,6,7,8,9,16,19,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,83,87,88,93,96,97,98,101,104,106,107,108,109,110,114,117,118,120,121,122,123,124,125,126,127,128,129,131,132,136,142,143,144,146,147,148,149,150,152,],[-5,35,-3,-4,-9,-10,-11,-12,35,35,-64,-24,-45,-71,-73,-75,-77,-78,-81,-82,-83,35,-66,35,-8,-21,35,-69,35,-17,35,35,-46,-80,-59,35,35,35,-89,-90,-91,-92,-93,-94,-95,35,-96,-97,35,-98,-99,35,-100,-68,-65,-80,-67,35,-23,35,-20,35,35,-25,35,-14,35,-79,35,-70,-72,-74,-76,-69,-16,-19,-51,-84,35,-54,35,-26,-58,-13,35,-7,-57,-52,35,35,-18,-22,-53,-27,-15,-6,-29,-31,35,]),'SUB':([0,2,3,4,6,7,8,9,10,16,19,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,83,87,88,93,95,96,97,98,101,104,106,107,108,109,110,114,117,118,120,121,122,123,124,125,126,127,128,129,131,132,136,142,143,144,146,147,148,149,150,152,],[-5,37,-3,-4,-9,-10,-11,-12,-80,37,37,-64,-24,-45,68,-73,-75,-77,-78,-81,-82,-83,37,-66,37,-8,-21,37,-69,37,-17,37,37,-46,-80,-59,37,37,37,-89,-90,-91,-92,-93,-94,-95,37,-96,-97,37,-98,-99,37,-100,-68,-65,-80,-67,37,-23,37,-20,37,37,-25,-80,37,-14,37,-79,37,68,-72,-74,-76,-69,-16,-19,-51,-84,37,-54,37,-26,-58,-13,37,-7,-57,-52,37,37,-18,-22,-53,-27,-15,-6,-29,-31,37,]),';':([5,10,11,12,13,14,15,21,22,26,27,28,29,30,31,32,33,34,36,39,43,48,49,50,74,75,76,77,78,85,86,95,99,101,106,107,108,109,110,112,118,120,122,125,129,130,131,141,144,155,],[38,-80,-40,-41,-42,-43,-44,-63,-64,-45,-71,-73,-75,-77,-78,-81,-82,-83,-66,-47,-69,-46,-80,-59,-68,-65,-80,-67,-48,-60,-62,-80,-61,-79,-70,-72,-74,-76,-69,-55,-51,-84,-54,-58,-57,-56,-52,-50,-53,-49,]),'ELSE':([6,7,8,9,38,93,97,126,146,147,149,150,],[-9,-10,-11,-12,-8,124,-14,-13,-27,-15,-29,-31,]),'}':([6,7,8,9,38,93,96,97,126,127,128,133,134,146,147,148,149,150,151,153,156,],[-9,-10,-11,-12,-8,-25,126,-14,-13,147,-7,150,-37,-27,-15,-6,-29,-31,-36,-39,-38,]),':':([6,7,8,9,10,38,93,97,102,126,133,134,135,146,147,149,150,151,153,156,],[-9,-10,-11,-12,45,-8,-25,-14,136,-13,136,-37,152,-27,-15,-29,-31,-36,-39,-38,]),'LARROW':([10,39,43,49,95,122,144,],[41,79,87,98,41,-54,-53,]),'SWAP':([10,95,],[42,42,]),'?':([10,30,31,32,33,34,36,43,49,74,75,76,77,95,101,109,110,120,122,144,],[-80,74,-78,-81,-82,-83,-66,-69,-80,-68,74,-80,74,-80,-79,74,-69,-84,-54,-53,]),'POW':([10,29,30,31,32,33,34,36,43,49,74,75,76,77,95,101,108,109,110,120,122,144,],[-80,73,-77,-78,-81,-82,-83,-66,-69,-80,-68,-65,-80,-67,-80,-79,73,-76,-69,-84,-54,-53,]),'MUL':([10,28,29,30,31,32,33,34,36,43,49,74,75,76,77,95,101,107,108,109,110,120,122,144,],[-80,70,-75,-77,-78,-81,-82,-83,-66,-69,-80,-68,-65,-80,-67,-80,-79,70,-74,-76,-69,-84,-54,-53,]),'DIV':([10,28,29,30,31,32,33,34,36,43,49,74,75,76,77,95,101,107,108,109,110,120,122,144,],[-80,71,-75,-77,-78,-81,-82,-83,-66,-69,-80,-68,-65,-80,-67,-80,-79,71,-74,-76,-69,-84,-54,-53,]),'ADD':([10,27,28,29,30,31,32,33,34,36,43,49,74,75,76,77,95,101,106,107,108,109,110,120,122,144,],[-80,67,-73,-75,-77,-78,-81,-82,-83,-66,-69,-80,-68,-65,-80,-67,-80,-79,67,-72,-74,-76,-69,-84,-54,-53,]),'AND':([10,22,27,28,29,30,31,32,33,34,36,43,49,74,75,76,77,95,101,106,107,108,109,110,120,122,144,],[-80,59,-71,-73,-75,-77,-78,-81,-82,-83,-66,-69,-80,-68,-65,-80,-67,-80,-79,-70,-72,-74,-76,-69,-84,-54,-53,]),'OR':([10,22,27,28,29,30,31,32,33,34,36,43,49,74,75,76,77,95,101,106,107,108,109,110,120,122,144,],[-80,60,-71,-73,-75,-77,-78,-81,-82,-83,-66,-69,-80,-68,-65,-80,-67,-80,-79,-70,-72,-74,-76,-69,-84,-54,-53,]),'LESSER':([10,22,27,28,29,30,31,32,33,34,36,43,49,74,75,76,77,95,101,106,107,108,109,110,120,122,144,],[-80,61,-71,-73,-75,-77,-78,-81,-82,-83,-66,-69,-80,-68,-65,-80,-67,-80,-79,-70,-72,-74,-76,-69,-84,-54,-53,]),'GREATER':([10,22,27,28,29,30,31,32,33,34,36,43,49,74,75,76,77,95,101,106,107,108,109,110,120,122,144,],[-80,62,-71,-73,-75,-77,-78,-81,-82,-83,-66,-69,-80,-68,-65,-80,-67,-80,-79,-70,-72,-74,-76,-69,-84,-54,-53,]),'LEQ':([10,22,27,28,29,30,31,32,33,34,36,43,49,74,75,76,77,95,101,106,107,108,109,110,120,122,144,],[-80,63,-71,-73,-75,-77,-78,-81,-82,-83,-66,-69,-80,-68,-65,-80,-67,-80,-79,-70,-72,-74,-76,-69,-84,-54,-53,]),'GEQ':([10,22,27,28,29,30,31,32,33,34,36,43,49,74,75,76,77,95,101,106,107,108,109,110,120,122,144,],[-80,64,-71,-73,-75,-77,-78,-81,-82,-83,-66,-69,-80,-68,-65,-80,-67,-80,-79,-70,-72,-74,-76,-69,-84,-54,-53,]),'EQUAL':([10,22,27,28,29,30,31,32,33,34,36,43,49,74,75,76,77,95,101,106,107,108,109,110,120,122,144,],[-80,65,-71,-73,-75,-77,-78,-81,-82,-83,-66,-69,-80,-68,-65,-80,-67,-80,-79,-70,-72,-74,-76,-69,-84,-54,-53,]),'RARROW':([10,12,17,21,22,26,27,28,29,30,31,32,33,34,36,40,43,45,47,48,49,50,53,74,75,76,77,81,83,85,91,92,95,99,100,101,105,106,107,108,109,110,112,118,119,120,122,125,129,131,138,143,144,145,],[-80,-46,51,-59,-64,-45,-71,-73,-75,-77,-78,-81,-82,-83,-66,84,-69,-17,94,-46,-80,-59,94,-68,-65,-80,-67,-23,115,94,94,94,-80,-58,94,-79,94,-70,-72,-74,-76,-69,94,94,94,-84,-54,-58,94,-52,94,-22,-53,94,]),'[':([10,39,43,49,76,78,95,99,110,122,125,131,141,144,155,],[46,80,88,46,46,111,46,46,88,-54,46,88,-50,-53,-49,]),'{':([22,26,27,28,29,30,31,32,33,34,36,40,43,45,47,48,49,50,54,55,74,75,76,77,81,82,83,101,106,107,108,109,110,117,118,120,122,123,124,125,129,131,132,136,137,139,142,143,144,152,154,],[-64,-45,-71,-73,-75,-77,-78,-81,-82,-83,-66,-21,-69,-17,96,-46,-80,-59,102,-33,-68,-65,-80,-67,-23,96,-20,-79,-70,-72,-74,-76,-69,-19,-51,-84,-54,96,-26,-58,-57,-52,96,96,-32,-35,-18,-22,-53,96,-34,]),')':([22,26,27,28,29,30,31,32,33,34,36,43,44,48,49,50,53,74,75,76,77,89,90,91,100,101,105,106,107,108,109,110,118,120,122,125,129,131,138,144,145,],[-64,-45,-71,-73,-75,-77,-78,-81,-82,-83,-66,-69,-86,-46,-80,-59,101,-68,-65,-80,-67,120,-85,-88,132,-79,139,-70,-72,-74,-76,-69,-51,-84,-54,-58,-57,-52,154,-53,-87,]),',':([22,26,27,28,29,30,31,32,33,34,36,43,48,49,50,54,55,74,75,76,77,81,83,90,91,101,106,107,108,109,110,118,120,122,125,129,131,137,139,143,144,145,154,],[-64,-45,-71,-73,-75,-77,-78,-81,-82,-83,-66,-69,-46,-80,-59,103,-33,-68,-65,-80,-67,-23,116,121,-88,-79,-70,-72,-74,-76,-69,-51,-84,-54,-58,-57,-52,-32,-35,-22,-53,-87,-34,]),']':([22,26,27,28,29,30,31,32,33,34,36,43,48,49,50,74,75,76,77,92,101,106,107,108,109,110,113,118,119,120,122,125,129,131,140,144,],[-64,-45,-71,-73,-75,-77,-78,-81,-82,-83,-66,-69,-46,-80,-59,-68,-65,-80,-67,122,-79,-70,-72,-74,-76,-69,141,-51,144,-84,-54,-58,-57,-52,155,-53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Start':([0,],[1,]),'Axiom':([0,],[2,]),'Block':([2,47,82,96,123,127,132,136,152,],[3,97,97,128,97,148,97,97,97,]),'Function':([2,],[4,]),'Exp':([2,47,82,96,123,127,132,136,152,],[5,5,5,5,5,5,5,5,5,]),'If':([2,47,82,96,123,127,132,136,152,],[6,6,6,6,6,6,6,6,6,]),'IfElse':([2,47,82,96,123,127,132,136,152,],[7,7,7,7,7,7,7,7,7,]),'While':([2,47,82,96,123,127,132,136,152,],[8,8,8,8,8,8,8,8,8,]),'Switch':([2,47,82,96,123,127,132,136,152,],[9,9,9,9,9,9,9,9,9,]),'Atrib':([2,47,82,96,123,127,132,136,152,],[11,11,11,11,11,11,11,11,11,]),'Op':([2,16,19,41,44,46,47,52,57,79,82,87,88,96,98,104,121,123,127,132,136,152,],[12,48,48,48,48,48,12,48,48,48,12,48,48,12,48,48,48,12,12,12,12,12,]),'Decl':([2,47,82,96,123,127,132,136,152,],[13,13,13,13,13,13,13,13,13,]),'DeclArray':([2,47,82,96,123,127,132,136,152,],[14,14,14,14,14,14,14,14,14,]),'DeclAtrib':([2,47,82,96,123,127,132,136,152,],[15,15,15,15,15,15,15,15,15,]),'IfScope':([2,47,82,96,123,127,132,136,152,],[16,16,16,16,16,16,16,16,16,]),'AtribOp':([2,16,19,41,44,46,47,52,57,79,82,87,88,96,98,104,121,123,127,132,136,152,],[17,47,53,85,91,92,17,100,105,112,17,118,119,17,129,138,145,17,17,17,17,17,]),'WhileScope':([2,47,82,96,123,127,132,136,152,],[18,18,18,18,18,18,18,18,18,]),'SwitchScope':([2,47,82,96,123,127,132,136,152,],[20,20,20,20,20,20,20,20,20,]),'AtribArray':([2,16,19,41,44,46,47,52,57,79,82,87,88,96,98,104,121,123,127,132,136,152,],[21,50,50,50,50,50,21,50,50,50,21,50,50,21,50,50,50,21,21,21,21,21,]),'OpBin':([2,16,19,41,44,46,47,52,57,79,82,87,88,96,98,104,121,123,127,132,136,152,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'AtribNum':([2,16,19,41,44,46,47,52,57,79,82,87,88,96,98,104,121,123,127,132,136,152,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TermPlus':([2,16,19,41,44,46,47,52,57,58,79,82,87,88,96,98,104,121,123,127,132,136,152,],[27,27,27,27,27,27,27,27,27,106,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'TermMult':([2,16,19,41,44,46,47,52,57,58,66,79,82,87,88,96,98,104,121,123,127,132,136,152,],[28,28,28,28,28,28,28,28,28,28,107,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'TermPow':([2,16,19,41,44,46,47,52,57,58,66,69,79,82,87,88,96,98,104,121,123,127,132,136,152,],[29,29,29,29,29,29,29,29,29,29,29,108,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'Base':([2,16,19,35,37,41,44,46,47,52,57,58,66,69,72,79,82,87,88,96,98,104,121,123,127,132,136,152,],[30,30,30,75,77,30,30,30,30,30,30,30,30,30,109,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'OpUno':([2,16,19,35,37,41,44,46,47,52,57,58,66,69,72,79,82,87,88,96,98,104,121,123,127,132,136,152,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'FunCall':([2,16,19,35,37,41,44,46,47,52,57,58,66,69,72,79,82,87,88,96,98,104,121,123,127,132,136,152,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'AccessArray':([2,16,19,35,37,41,44,46,47,52,57,58,66,69,72,79,82,87,88,96,98,104,121,123,127,132,136,152,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'FunScope':([10,],[40,]),'ArraySize':([10,49,76,95,99,125,],[43,43,110,43,131,131,]),'Conds':([20,],[54,]),'Cond':([20,103,],[55,137,]),'OpLogico':([22,],[58,]),'OpPlus':([27,106,],[66,66,]),'OpMult':([28,107,],[69,69,]),'OpPow':([29,108,],[72,72,]),'DeclArraySize':([39,],[78,]),'FunCases':([40,],[82,]),'FunExtra':([40,],[83,]),'FunArg':([44,],[89,]),'FunRec':([44,],[90,]),'Body':([47,82,123,132,136,152,],[93,114,146,149,153,156,]),'ElseScope':([93,],[123,]),'Code':([96,],[127,]),'Cases':([102,],[133,]),'Case':([102,133,],[134,151,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Start","S'",1,None,None,None),
  ('Start -> Axiom','Start',1,'p_start_axiom','yacc.py',11),
  ('Start -> <empty>','Start',0,'p_start_empty','yacc.py',16),
  ('Axiom -> Axiom Block','Axiom',2,'p_axiom_code','yacc.py',21),
  ('Axiom -> Axiom Function','Axiom',2,'p_axiom_function','yacc.py',27),
  ('Axiom -> <empty>','Axiom',0,'p_axiom_empty','yacc.py',33),
  ('Code -> Code Block','Code',2,'p_code_block','yacc.py',38),
  ('Code -> Block','Code',1,'p_code_empty','yacc.py',43),
  ('Block -> Exp ;','Block',2,'p_block_exp','yacc.py',48),
  ('Block -> If','Block',1,'p_block_if','yacc.py',53),
  ('Block -> IfElse','Block',1,'p_block_ifelse','yacc.py',58),
  ('Block -> While','Block',1,'p_block_while','yacc.py',63),
  ('Block -> Switch','Block',1,'p_block_switch','yacc.py',68),
  ('Body -> { }','Body',2,'p_body_empty','yacc.py',77),
  ('Body -> Block','Body',1,'p_body_block','yacc.py',82),
  ('Body -> { Code }','Body',3,'p_body_code','yacc.py',87),
  ('Function -> ID FunScope FunCases Body','Function',4,'p_function','yacc.py',92),
  ('FunScope -> :','FunScope',1,'p_funscope','yacc.py',121),
  ('FunCases -> FunExtra RARROW ID','FunCases',3,'p_funcases_funextra_rarrow','yacc.py',127),
  ('FunCases -> RARROW ID','FunCases',2,'p_funcases_rarrow','yacc.py',147),
  ('FunCases -> FunExtra','FunCases',1,'p_funcases_funextra','yacc.py',157),
  ('FunCases -> <empty>','FunCases',0,'p_funcases_empty','yacc.py',171),
  ('FunExtra -> FunExtra , ID','FunExtra',3,'p_funextra_rec','yacc.py',176),
  ('FunExtra -> ID','FunExtra',1,'p_funextra_empty','yacc.py',182),
  ('IfScope -> IF','IfScope',1,'p_if_scope','yacc.py',187),
  ('If -> IfScope AtribOp Body','If',3,'p_if','yacc.py',193),
  ('ElseScope -> ELSE','ElseScope',1,'p_else_scope','yacc.py',205),
  ('IfElse -> IfScope AtribOp Body ElseScope Body','IfElse',5,'p_ifelse','yacc.py',213),
  ('WhileScope -> WHILE','WhileScope',1,'p_while_scope','yacc.py',228),
  ('While -> WhileScope ( AtribOp ) Body','While',5,'p_while','yacc.py',234),
  ('SwitchScope -> SWITCH','SwitchScope',1,'p_switch_scope','yacc.py',249),
  ('Switch -> SwitchScope Conds { Cases }','Switch',5,'p_switch','yacc.py',261),
  ('Conds -> Conds , Cond','Conds',3,'p_conds_rec','yacc.py',301),
  ('Conds -> Cond','Conds',1,'p_conds_base','yacc.py',307),
  ('Cond -> ID ( AtribOp )','Cond',4,'p_cond_id','yacc.py',312),
  ('Cond -> ( AtribOp )','Cond',3,'p_cond_empty','yacc.py',318),
  ('Cases -> Cases Case','Cases',2,'p_cases_rec','yacc.py',324),
  ('Cases -> Case','Cases',1,'p_cases_base','yacc.py',330),
  ('Case -> ID : Body','Case',3,'p_case_id','yacc.py',335),
  ('Case -> : Body','Case',2,'p_case_empty','yacc.py',342),
  ('Exp -> Atrib','Exp',1,'p_exp_atrib','yacc.py',356),
  ('Exp -> Op','Exp',1,'p_exp_op','yacc.py',361),
  ('Exp -> Decl','Exp',1,'p_exp_decl','yacc.py',366),
  ('Exp -> DeclArray','Exp',1,'p_exp_declarray','yacc.py',371),
  ('Exp -> DeclAtrib','Exp',1,'p_exp_declatrib','yacc.py',376),
  ('AtribOp -> AtribNum','AtribOp',1,'p_atribop_atribnum','yacc.py',381),
  ('AtribOp -> Op','AtribOp',1,'p_atribop_op','yacc.py',386),
  ('Decl -> ID ID','Decl',2,'p_decl','yacc.py',391),
  ('DeclArray -> ID ID DeclArraySize','DeclArray',3,'p_declarray','yacc.py',414),
  ('DeclArraySize -> DeclArraySize [ NUM ]','DeclArraySize',4,'p_declarraysize_rec','yacc.py',438),
  ('DeclArraySize -> [ NUM ]','DeclArraySize',3,'p_declarraysize_empty','yacc.py',444),
  ('AtribArray -> ID ArraySize LARROW AtribOp','AtribArray',4,'p_atribarray_Leftatribop','yacc.py',449),
  ('AtribArray -> AtribOp RARROW ID ArraySize','AtribArray',4,'p_atribarray_Rightatribop','yacc.py',484),
  ('ArraySize -> ArraySize [ AtribOp ]','ArraySize',4,'p_arraysize_rec','yacc.py',512),
  ('ArraySize -> [ AtribOp ]','ArraySize',3,'p_arraysize_empty','yacc.py',517),
  ('DeclAtrib -> ID ID LARROW AtribOp','DeclAtrib',4,'p_declatrib_left','yacc.py',522),
  ('DeclAtrib -> AtribOp RARROW ID ID','DeclAtrib',4,'p_declatrib_right','yacc.py',543),
  ('AtribNum -> ID LARROW AtribOp','AtribNum',3,'p_atribnum_left','yacc.py',564),
  ('AtribNum -> AtribOp RARROW ID','AtribNum',3,'p_atribnum_right','yacc.py',569),
  ('AtribNum -> AtribArray','AtribNum',1,'p_atribnum_array','yacc.py',575),
  ('Atrib -> ID LARROW AtribOp','Atrib',3,'p_atrib_left','yacc.py',580),
  ('Atrib -> AtribOp RARROW ID','Atrib',3,'p_atrib_right','yacc.py',585),
  ('Atrib -> ID SWAP ID','Atrib',3,'p_atrib_equiv','yacc.py',590),
  ('Atrib -> AtribArray','Atrib',1,'p_atrib_array','yacc.py',613),
  ('Op -> OpBin','Op',1,'p_op_opbin','yacc.py',623),
  ('OpUno -> NEG Base','OpUno',2,'p_opuno_neg','yacc.py',628),
  ('OpUno -> AccessArray','OpUno',1,'p_opuno_accessarray','yacc.py',633),
  ('OpUno -> SUB Base','OpUno',2,'p_opuno_minus','yacc.py',638),
  ('OpUno -> Base ?','OpUno',2,'p_opuno_print','yacc.py',643),
  ('AccessArray -> ID ArraySize','AccessArray',2,'p_accessarray','yacc.py',649),
  ('OpBin -> OpBin OpLogico TermPlus','OpBin',3,'p_opbin_rec','yacc.py',664),
  ('OpBin -> TermPlus','OpBin',1,'p_opbin_base','yacc.py',669),
  ('TermPlus -> TermPlus OpPlus TermMult','TermPlus',3,'p_termplus_rec','yacc.py',674),
  ('TermPlus -> TermMult','TermPlus',1,'p_termplus_base','yacc.py',679),
  ('TermMult -> TermMult OpMult TermPow','TermMult',3,'p_termmult_rec','yacc.py',684),
  ('TermMult -> TermPow','TermMult',1,'p_termmult_base','yacc.py',689),
  ('TermPow -> TermPow OpPow Base','TermPow',3,'p_termpow_rec','yacc.py',694),
  ('TermPow -> Base','TermPow',1,'p_termpow_base','yacc.py',699),
  ('Base -> OpUno','Base',1,'p_base_opuno','yacc.py',704),
  ('Base -> ( AtribOp )','Base',3,'p_base_exp','yacc.py',709),
  ('Base -> ID','Base',1,'p_base_id','yacc.py',714),
  ('Base -> NUM','Base',1,'p_base_num','yacc.py',727),
  ('Base -> FunCall','Base',1,'p_base_funcall','yacc.py',732),
  ('Base -> �','Base',1,'p_base_read','yacc.py',742),
  ('FunCall -> ID ( FunArg )','FunCall',4,'p_funcall','yacc.py',747),
  ('FunArg -> FunRec','FunArg',1,'p_funarg_funrec','yacc.py',768),
  ('FunArg -> <empty>','FunArg',0,'p_funarg_empty','yacc.py',773),
  ('FunRec -> FunRec , AtribOp','FunRec',3,'p_funrec_rec','yacc.py',778),
  ('FunRec -> AtribOp','FunRec',1,'p_funrec_base','yacc.py',784),
  ('OpLogico -> AND','OpLogico',1,'p_oplogico_and','yacc.py',789),
  ('OpLogico -> OR','OpLogico',1,'p_oplogico_or','yacc.py',794),
  ('OpLogico -> LESSER','OpLogico',1,'p_oplogico_lesser','yacc.py',799),
  ('OpLogico -> GREATER','OpLogico',1,'p_oplogico_greater','yacc.py',804),
  ('OpLogico -> LEQ','OpLogico',1,'p_oplogico_leq','yacc.py',809),
  ('OpLogico -> GEQ','OpLogico',1,'p_oplogico_geq','yacc.py',814),
  ('OpLogico -> EQUAL','OpLogico',1,'p_oplogico_equal','yacc.py',819),
  ('OpPlus -> ADD','OpPlus',1,'p_opplus_add','yacc.py',824),
  ('OpPlus -> SUB','OpPlus',1,'p_opplus_sub','yacc.py',829),
  ('OpMult -> MUL','OpMult',1,'p_opmult_mul','yacc.py',834),
  ('OpMult -> DIV','OpMult',1,'p_opmult_div','yacc.py',839),
  ('OpPow -> POW','OpPow',1,'p_oppow','yacc.py',844),
]
