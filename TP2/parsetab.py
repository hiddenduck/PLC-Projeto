
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD AND DIFF DIV ELSE EQUAL GEQ GREATER ID IF LARROW LEQ LESSER MOD MUL NEG NUM OR POW PRINT RARROW READ STRING SUB SWAP SWITCHCASE SWITCHCOND WHILEStart : AxiomStart : Axiom : Axiom BlockAxiom : Axiom FunctionAxiom : Code : Code BlockCode : BlockBlock : FunCall ';'Block : Exp ';'Block : If Block : IfElse Block : While Block : Switch Body : '{' '}'Body : BlockBody : '{' Code '}'Function : ID FunScope FunCases BodyFunScope : ':'FunCases : FunExtra RARROW IDFunCases : RARROW IDFunCases : FunExtraFunCases : FunExtra : FunExtra ',' IDFunExtra : IDIfScope : IFIf : IfScope AtribOp BodyElseScope : ELSEIfElse : IfScope AtribOp Body ElseScope BodyWhileScope : WHILEWhile : WhileScope '(' AtribOp ')' BodySwitchScope : SWITCHCONDSwitchScope : SWITCHCASESwitch : SwitchScope Conds '{' Cases '}'Conds : Conds ',' CondConds : CondCond : ID '(' AtribOp ')'Cond : '(' AtribOp ')'Cases : Cases Case Cases : CaseCase : ID ':' BodyCase : ':' BodyExp : STRING PRINTExp : AtribExp : OpExp : DeclExp : DeclArrayExp : DeclAtribAtribOp : AtribNumAtribOp : OpDecl : ID IDDeclArray : ID ID DeclArraySizeDeclArraySize : DeclArraySize '[' NUM ']'DeclArraySize : '[' NUM ']'AtribArray : ID ArraySize LARROW AtribOpAtribArray : AtribOp RARROW ID ArraySizeAccessArray : ID ArraySizeArraySize : ArraySize '[' AtribOp ']'ArraySize : '[' AtribOp ']'DeclAtrib : ID ID LARROW AtribOpDeclAtrib : AtribOp RARROW ID IDAtribNum : ID LARROW AtribOpAtribNum : AtribOp RARROW IDAtribNum : AtribArrayAtrib : ID LARROW AtribOpAtrib : AtribOp RARROW IDAtrib : ID SWAP IDAtrib : AtribArrayOp : OpBinOpUno : NEG BaseOpUno : AccessArrayOpUno : SUB BaseOpUno : Base PRINTOpBin : OpBin OpLogico TermModOpBin : TermModTermMod : TermMod OpMod TermPlusTermMod : TermPlusTermPlus : TermPlus OpPlus TermMultTermPlus : TermMultTermMult : TermMult OpMult TermPowTermMult : TermPowTermPow : TermPow OpPow BaseTermPow : BaseBase : OpUnoBase : '(' AtribOp ')'Base : IDBase : NUMBase : FunCallBase : READFunCall : ID '(' FunArg ')'FunArg : FunRecFunArg : FunRec : FunRec ',' AtribOpFunRec : AtribOpOpLogico : DIFFOpLogico : ANDOpLogico : OROpLogico : LESSEROpLogico : GREATEROpLogico : LEQOpLogico : GEQOpLogico : EQUALOpMod : MODOpPlus : ADDOpPlus : SUBOpMult : MULOpMult : DIVOpPow : POW"
    
_lr_action_items = {'$end':([0,1,2,3,4,7,8,9,10,41,42,105,108,124,137,156,157,159,160,],[-2,0,-1,-3,-4,-10,-11,-12,-13,-8,-9,-26,-15,-17,-14,-28,-16,-30,-33,]),'ID':([0,2,3,4,7,8,9,10,11,12,19,22,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,55,57,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,99,100,102,103,104,105,106,107,108,109,111,112,113,115,116,117,118,119,120,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,141,142,143,144,146,152,153,155,156,157,158,159,160,161,162,163,166,],[-5,11,-3,-4,-10,-11,-12,-13,43,53,53,62,-68,-25,-31,-32,-48,-74,-76,-78,-80,-82,-83,-86,-88,85,-70,85,-8,-9,90,53,53,98,-56,-18,53,-49,-85,-63,-87,106,109,53,53,85,-94,-95,-96,-97,-98,-99,-100,-101,85,-102,85,-103,-104,85,-105,-106,85,-107,-72,-69,-85,-71,53,-24,106,-21,127,53,53,-84,133,53,-26,43,106,-15,140,145,62,53,-73,-75,-77,-79,-81,-56,-17,152,153,-20,-89,53,-54,-58,-62,-61,106,-27,-14,106,-7,-55,106,145,-39,106,-19,-23,-57,-28,-16,-6,-30,-33,-38,106,-41,-40,]),'STRING':([0,2,3,4,7,8,9,10,24,29,30,31,32,33,34,35,36,37,39,41,42,44,48,49,52,53,54,55,57,83,84,85,86,90,91,92,102,105,107,108,115,116,117,118,119,120,124,127,128,130,132,133,134,135,136,137,138,139,141,142,146,152,153,155,156,157,158,159,160,162,],[-5,13,-3,-4,-10,-11,-12,-13,-68,-48,-74,-76,-78,-80,-82,-83,-86,-88,-70,-8,-9,-22,-56,-18,-49,-85,-63,-87,13,-72,-69,-85,-71,-24,13,-21,-84,-26,13,-15,-73,-75,-77,-79,-81,-56,-17,-20,-89,-54,-58,-62,-61,13,-27,-14,13,-7,-55,13,13,-19,-23,-57,-28,-16,-6,-30,-33,13,]),'IF':([0,2,3,4,7,8,9,10,24,29,30,31,32,33,34,35,36,37,39,41,42,44,48,49,52,53,54,55,57,83,84,85,86,90,91,92,102,105,107,108,115,116,117,118,119,120,124,127,128,130,132,133,134,135,136,137,138,139,141,142,146,152,153,155,156,157,158,159,160,162,],[-5,25,-3,-4,-10,-11,-12,-13,-68,-48,-74,-76,-78,-80,-82,-83,-86,-88,-70,-8,-9,-22,-56,-18,-49,-85,-63,-87,25,-72,-69,-85,-71,-24,25,-21,-84,-26,25,-15,-73,-75,-77,-79,-81,-56,-17,-20,-89,-54,-58,-62,-61,25,-27,-14,25,-7,-55,25,25,-19,-23,-57,-28,-16,-6,-30,-33,25,]),'WHILE':([0,2,3,4,7,8,9,10,24,29,30,31,32,33,34,35,36,37,39,41,42,44,48,49,52,53,54,55,57,83,84,85,86,90,91,92,102,105,107,108,115,116,117,118,119,120,124,127,128,130,132,133,134,135,136,137,138,139,141,142,146,152,153,155,156,157,158,159,160,162,],[-5,26,-3,-4,-10,-11,-12,-13,-68,-48,-74,-76,-78,-80,-82,-83,-86,-88,-70,-8,-9,-22,-56,-18,-49,-85,-63,-87,26,-72,-69,-85,-71,-24,26,-21,-84,-26,26,-15,-73,-75,-77,-79,-81,-56,-17,-20,-89,-54,-58,-62,-61,26,-27,-14,26,-7,-55,26,26,-19,-23,-57,-28,-16,-6,-30,-33,26,]),'SWITCHCOND':([0,2,3,4,7,8,9,10,24,29,30,31,32,33,34,35,36,37,39,41,42,44,48,49,52,53,54,55,57,83,84,85,86,90,91,92,102,105,107,108,115,116,117,118,119,120,124,127,128,130,132,133,134,135,136,137,138,139,141,142,146,152,153,155,156,157,158,159,160,162,],[-5,27,-3,-4,-10,-11,-12,-13,-68,-48,-74,-76,-78,-80,-82,-83,-86,-88,-70,-8,-9,-22,-56,-18,-49,-85,-63,-87,27,-72,-69,-85,-71,-24,27,-21,-84,-26,27,-15,-73,-75,-77,-79,-81,-56,-17,-20,-89,-54,-58,-62,-61,27,-27,-14,27,-7,-55,27,27,-19,-23,-57,-28,-16,-6,-30,-33,27,]),'SWITCHCASE':([0,2,3,4,7,8,9,10,24,29,30,31,32,33,34,35,36,37,39,41,42,44,48,49,52,53,54,55,57,83,84,85,86,90,91,92,102,105,107,108,115,116,117,118,119,120,124,127,128,130,132,133,134,135,136,137,138,139,141,142,146,152,153,155,156,157,158,159,160,162,],[-5,28,-3,-4,-10,-11,-12,-13,-68,-48,-74,-76,-78,-80,-82,-83,-86,-88,-70,-8,-9,-22,-56,-18,-49,-85,-63,-87,28,-72,-69,-85,-71,-24,28,-21,-84,-26,28,-15,-73,-75,-77,-79,-81,-56,-17,-20,-89,-54,-58,-62,-61,28,-27,-14,28,-7,-55,28,28,-19,-23,-57,-28,-16,-6,-30,-33,28,]),'(':([0,2,3,4,7,8,9,10,11,12,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,48,49,50,52,53,54,55,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,99,100,102,104,105,106,107,108,112,113,115,116,117,118,119,120,124,127,128,129,130,132,133,134,135,136,137,138,139,141,142,146,152,153,155,156,157,158,159,160,162,],[-5,12,-3,-4,-10,-11,-12,-13,45,12,12,59,63,-68,-25,-29,-31,-32,-48,-74,-76,-78,-80,-82,-83,-86,-88,12,-70,12,-8,-9,-22,12,12,-56,-18,12,-49,45,-63,-87,12,12,113,12,12,-94,-95,-96,-97,-98,-99,-100,-101,12,-102,12,-103,-104,12,-105,-106,12,-107,-72,-69,45,-71,12,-24,12,-21,12,12,-84,12,-26,45,12,-15,63,12,-73,-75,-77,-79,-81,-56,-17,-20,-89,12,-54,-58,-62,-61,12,-27,-14,12,-7,-55,12,12,-19,-23,-57,-28,-16,-6,-30,-33,12,]),'NUM':([0,2,3,4,7,8,9,10,12,19,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,48,49,50,52,53,54,55,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,99,100,102,104,105,107,108,113,115,116,117,118,119,120,121,124,127,128,129,130,132,133,134,135,136,137,138,139,141,142,146,152,153,155,156,157,158,159,160,162,],[-5,36,-3,-4,-10,-11,-12,-13,36,36,-68,-25,-48,-74,-76,-78,-80,-82,-83,-86,-88,36,-70,36,-8,-9,-22,36,36,-56,-18,36,-49,-85,-63,-87,36,36,36,36,-94,-95,-96,-97,-98,-99,-100,-101,36,-102,36,-103,-104,36,-105,-106,36,-107,-72,-69,-85,-71,36,123,-24,36,-21,36,36,-84,36,-26,36,-15,36,-73,-75,-77,-79,-81,-56,150,-17,-20,-89,36,-54,-58,-62,-61,36,-27,-14,36,-7,-55,36,36,-19,-23,-57,-28,-16,-6,-30,-33,36,]),'READ':([0,2,3,4,7,8,9,10,12,19,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,48,49,50,52,53,54,55,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,99,100,102,104,105,107,108,113,115,116,117,118,119,120,124,127,128,129,130,132,133,134,135,136,137,138,139,141,142,146,152,153,155,156,157,158,159,160,162,],[-5,37,-3,-4,-10,-11,-12,-13,37,37,-68,-25,-48,-74,-76,-78,-80,-82,-83,-86,-88,37,-70,37,-8,-9,-22,37,37,-56,-18,37,-49,-85,-63,-87,37,37,37,37,-94,-95,-96,-97,-98,-99,-100,-101,37,-102,37,-103,-104,37,-105,-106,37,-107,-72,-69,-85,-71,37,-24,37,-21,37,37,-84,37,-26,37,-15,37,-73,-75,-77,-79,-81,-56,-17,-20,-89,37,-54,-58,-62,-61,37,-27,-14,37,-7,-55,37,37,-19,-23,-57,-28,-16,-6,-30,-33,37,]),'NEG':([0,2,3,4,7,8,9,10,12,19,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,48,49,50,52,53,54,55,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,99,100,102,104,105,107,108,113,115,116,117,118,119,120,124,127,128,129,130,132,133,134,135,136,137,138,139,141,142,146,152,153,155,156,157,158,159,160,162,],[-5,38,-3,-4,-10,-11,-12,-13,38,38,-68,-25,-48,-74,-76,-78,-80,-82,-83,-86,-88,38,-70,38,-8,-9,-22,38,38,-56,-18,38,-49,-85,-63,-87,38,38,38,38,-94,-95,-96,-97,-98,-99,-100,-101,38,-102,38,-103,-104,38,-105,-106,38,-107,-72,-69,-85,-71,38,-24,38,-21,38,38,-84,38,-26,38,-15,38,-73,-75,-77,-79,-81,-56,-17,-20,-89,38,-54,-58,-62,-61,38,-27,-14,38,-7,-55,38,38,-19,-23,-57,-28,-16,-6,-30,-33,38,]),'SUB':([0,2,3,4,5,7,8,9,10,11,12,19,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,48,49,50,52,53,54,55,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,99,100,102,104,105,106,107,108,113,115,116,117,118,119,120,124,127,128,129,130,132,133,134,135,136,137,138,139,141,142,146,152,153,155,156,157,158,159,160,162,],[-5,40,-3,-4,-87,-10,-11,-12,-13,-85,40,40,-68,-25,-48,-74,77,-78,-80,-82,-83,-86,-88,40,-70,40,-8,-9,-22,40,40,-56,-18,40,-49,-85,-63,-87,40,40,40,40,-94,-95,-96,-97,-98,-99,-100,-101,40,-102,40,-103,-104,40,-105,-106,40,-107,-72,-69,-85,-71,40,-24,40,-21,40,40,-84,40,-26,-85,40,-15,40,-73,77,-77,-79,-81,-56,-17,-20,-89,40,-54,-58,-62,-61,40,-27,-14,40,-7,-55,40,40,-19,-23,-57,-28,-16,-6,-30,-33,40,]),';':([5,6,11,14,15,16,17,18,23,24,29,30,31,32,33,34,35,36,37,39,43,48,52,53,54,55,56,83,84,85,86,87,97,98,102,106,109,115,116,117,118,119,120,122,128,130,132,133,134,140,141,151,155,165,],[41,42,-85,-43,-44,-45,-46,-47,-67,-68,-48,-74,-76,-78,-80,-82,-83,-86,-88,-70,-50,-56,-49,-85,-63,-87,-42,-72,-69,-85,-71,-51,-64,-66,-84,-85,-65,-73,-75,-77,-79,-81,-56,-59,-89,-54,-58,-62,-61,-60,-55,-53,-57,-52,]),'PRINT':([5,11,13,34,35,36,37,39,48,53,55,83,84,85,86,102,106,119,120,128,132,155,],[-87,-85,56,83,-83,-86,-88,-70,-56,-85,-87,-72,83,-85,83,-84,-85,83,-56,-89,-58,-57,]),'POW':([5,11,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,118,119,120,128,132,155,],[-87,-85,82,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,82,-81,-56,-89,-58,-57,]),'MUL':([5,11,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,117,118,119,120,128,132,155,],[-87,-85,79,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,79,-79,-81,-56,-89,-58,-57,]),'DIV':([5,11,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,117,118,119,120,128,132,155,],[-87,-85,80,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,80,-79,-81,-56,-89,-58,-57,]),'ADD':([5,11,31,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,116,117,118,119,120,128,132,155,],[-87,-85,76,-78,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,76,-77,-79,-81,-56,-89,-58,-57,]),'MOD':([5,11,30,31,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,115,116,117,118,119,120,128,132,155,],[-87,-85,74,-76,-78,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,74,-75,-77,-79,-81,-56,-89,-58,-57,]),'DIFF':([5,11,24,30,31,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,115,116,117,118,119,120,128,132,155,],[-87,-85,65,-74,-76,-78,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,-73,-75,-77,-79,-81,-56,-89,-58,-57,]),'AND':([5,11,24,30,31,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,115,116,117,118,119,120,128,132,155,],[-87,-85,66,-74,-76,-78,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,-73,-75,-77,-79,-81,-56,-89,-58,-57,]),'OR':([5,11,24,30,31,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,115,116,117,118,119,120,128,132,155,],[-87,-85,67,-74,-76,-78,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,-73,-75,-77,-79,-81,-56,-89,-58,-57,]),'LESSER':([5,11,24,30,31,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,115,116,117,118,119,120,128,132,155,],[-87,-85,68,-74,-76,-78,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,-73,-75,-77,-79,-81,-56,-89,-58,-57,]),'GREATER':([5,11,24,30,31,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,115,116,117,118,119,120,128,132,155,],[-87,-85,69,-74,-76,-78,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,-73,-75,-77,-79,-81,-56,-89,-58,-57,]),'LEQ':([5,11,24,30,31,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,115,116,117,118,119,120,128,132,155,],[-87,-85,70,-74,-76,-78,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,-73,-75,-77,-79,-81,-56,-89,-58,-57,]),'GEQ':([5,11,24,30,31,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,115,116,117,118,119,120,128,132,155,],[-87,-85,71,-74,-76,-78,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,-73,-75,-77,-79,-81,-56,-89,-58,-57,]),'EQUAL':([5,11,24,30,31,32,33,34,35,36,37,39,48,53,55,83,84,85,86,102,106,115,116,117,118,119,120,128,132,155,],[-87,-85,72,-74,-76,-78,-80,-82,-83,-86,-88,-70,-56,-85,-87,-72,-69,-85,-71,-84,-85,-73,-75,-77,-79,-81,-56,-89,-58,-57,]),'RARROW':([5,11,15,20,23,24,29,30,31,32,33,34,35,36,37,39,44,48,49,51,52,53,54,55,57,83,84,85,86,90,92,96,97,101,102,106,109,110,114,115,116,117,118,119,120,122,128,130,131,132,133,134,141,148,153,154,155,],[-87,-85,-49,58,-63,-68,-48,-74,-76,-78,-80,-82,-83,-86,-88,-70,93,-56,-18,103,-49,-85,-63,-87,103,-72,-69,-85,-71,-24,125,103,103,103,-84,-85,-62,103,103,-73,-75,-77,-79,-81,-56,103,-89,103,103,-58,-62,103,-55,103,-23,103,-57,]),'ELSE':([7,8,9,10,41,42,105,108,137,156,157,159,160,],[-10,-11,-12,-13,-8,-9,136,-15,-14,-28,-16,-30,-33,]),'}':([7,8,9,10,41,42,105,107,108,137,138,139,143,144,156,157,158,159,160,161,163,166,],[-10,-11,-12,-13,-8,-9,-26,137,-15,-14,157,-7,160,-39,-28,-16,-6,-30,-33,-38,-41,-40,]),':':([7,8,9,10,11,41,42,105,108,111,137,143,144,145,156,157,159,160,161,163,166,],[-10,-11,-12,-13,49,-8,-9,-26,-15,146,-14,146,-39,162,-28,-16,-30,-33,-38,-41,-40,]),'LARROW':([11,43,48,53,106,132,155,],[46,88,99,104,46,-58,-57,]),'SWAP':([11,106,],[47,47,]),'[':([11,43,48,53,85,87,106,109,120,132,133,141,151,155,165,],[50,89,100,50,50,121,50,50,100,-58,50,100,-53,-57,-52,]),')':([24,29,30,31,32,33,34,35,36,37,39,45,48,51,52,53,54,55,83,84,85,86,94,95,96,102,110,114,115,116,117,118,119,120,128,130,132,133,134,141,148,154,155,],[-68,-48,-74,-76,-78,-80,-82,-83,-86,-88,-70,-91,-56,102,-49,-85,-63,-87,-72,-69,-85,-71,128,-90,-93,-84,142,149,-73,-75,-77,-79,-81,-56,-89,-54,-58,-62,-61,-55,164,-92,-57,]),'{':([24,29,30,31,32,33,34,35,36,37,39,44,48,49,52,53,54,55,57,60,61,83,84,85,86,90,91,92,102,115,116,117,118,119,120,127,128,130,132,133,134,135,136,141,142,146,147,149,152,153,155,162,164,],[-68,-48,-74,-76,-78,-80,-82,-83,-86,-88,-70,-22,-56,-18,-49,-85,-63,-87,107,111,-35,-72,-69,-85,-71,-24,107,-21,-84,-73,-75,-77,-79,-81,-56,-20,-89,-54,-58,-62,-61,107,-27,-55,107,107,-34,-37,-19,-23,-57,107,-36,]),',':([24,29,30,31,32,33,34,35,36,37,39,48,52,53,54,55,60,61,83,84,85,86,90,92,95,96,102,115,116,117,118,119,120,128,130,132,133,134,141,147,149,153,154,155,164,],[-68,-48,-74,-76,-78,-80,-82,-83,-86,-88,-70,-56,-49,-85,-63,-87,112,-35,-72,-69,-85,-71,-24,126,129,-93,-84,-73,-75,-77,-79,-81,-56,-89,-54,-58,-62,-61,-55,-34,-37,-23,-92,-57,-36,]),']':([24,29,30,31,32,33,34,35,36,37,39,48,52,53,54,55,83,84,85,86,101,102,115,116,117,118,119,120,123,128,130,131,132,133,134,141,150,155,],[-68,-48,-74,-76,-78,-80,-82,-83,-86,-88,-70,-56,-49,-85,-63,-87,-72,-69,-85,-71,132,-84,-73,-75,-77,-79,-81,-56,151,-89,-54,155,-58,-62,-61,-55,165,-57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Start':([0,],[1,]),'Axiom':([0,],[2,]),'Block':([2,57,91,107,135,138,142,146,162,],[3,108,108,139,108,158,108,108,108,]),'Function':([2,],[4,]),'FunCall':([2,12,19,38,40,45,46,50,57,59,63,64,73,75,78,81,88,91,99,100,104,107,113,129,135,138,142,146,162,],[5,55,55,55,55,55,55,55,5,55,55,55,55,55,55,55,55,5,55,55,55,5,55,55,5,5,5,5,5,]),'Exp':([2,57,91,107,135,138,142,146,162,],[6,6,6,6,6,6,6,6,6,]),'If':([2,57,91,107,135,138,142,146,162,],[7,7,7,7,7,7,7,7,7,]),'IfElse':([2,57,91,107,135,138,142,146,162,],[8,8,8,8,8,8,8,8,8,]),'While':([2,57,91,107,135,138,142,146,162,],[9,9,9,9,9,9,9,9,9,]),'Switch':([2,57,91,107,135,138,142,146,162,],[10,10,10,10,10,10,10,10,10,]),'Atrib':([2,57,91,107,135,138,142,146,162,],[14,14,14,14,14,14,14,14,14,]),'Op':([2,12,19,45,46,50,57,59,63,88,91,99,100,104,107,113,129,135,138,142,146,162,],[15,52,52,52,52,52,15,52,52,52,15,52,52,52,15,52,52,15,15,15,15,15,]),'Decl':([2,57,91,107,135,138,142,146,162,],[16,16,16,16,16,16,16,16,16,]),'DeclArray':([2,57,91,107,135,138,142,146,162,],[17,17,17,17,17,17,17,17,17,]),'DeclAtrib':([2,57,91,107,135,138,142,146,162,],[18,18,18,18,18,18,18,18,18,]),'IfScope':([2,57,91,107,135,138,142,146,162,],[19,19,19,19,19,19,19,19,19,]),'AtribOp':([2,12,19,45,46,50,57,59,63,88,91,99,100,104,107,113,129,135,138,142,146,162,],[20,51,57,96,97,101,20,110,114,122,20,130,131,134,20,148,154,20,20,20,20,20,]),'WhileScope':([2,57,91,107,135,138,142,146,162,],[21,21,21,21,21,21,21,21,21,]),'SwitchScope':([2,57,91,107,135,138,142,146,162,],[22,22,22,22,22,22,22,22,22,]),'AtribArray':([2,12,19,45,46,50,57,59,63,88,91,99,100,104,107,113,129,135,138,142,146,162,],[23,54,54,54,54,54,23,54,54,54,23,54,54,54,23,54,54,23,23,23,23,23,]),'OpBin':([2,12,19,45,46,50,57,59,63,88,91,99,100,104,107,113,129,135,138,142,146,162,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'AtribNum':([2,12,19,45,46,50,57,59,63,88,91,99,100,104,107,113,129,135,138,142,146,162,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TermMod':([2,12,19,45,46,50,57,59,63,64,88,91,99,100,104,107,113,129,135,138,142,146,162,],[30,30,30,30,30,30,30,30,30,115,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TermPlus':([2,12,19,45,46,50,57,59,63,64,73,88,91,99,100,104,107,113,129,135,138,142,146,162,],[31,31,31,31,31,31,31,31,31,31,116,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'TermMult':([2,12,19,45,46,50,57,59,63,64,73,75,88,91,99,100,104,107,113,129,135,138,142,146,162,],[32,32,32,32,32,32,32,32,32,32,32,117,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TermPow':([2,12,19,45,46,50,57,59,63,64,73,75,78,88,91,99,100,104,107,113,129,135,138,142,146,162,],[33,33,33,33,33,33,33,33,33,33,33,33,118,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'Base':([2,12,19,38,40,45,46,50,57,59,63,64,73,75,78,81,88,91,99,100,104,107,113,129,135,138,142,146,162,],[34,34,34,84,86,34,34,34,34,34,34,34,34,34,34,119,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'OpUno':([2,12,19,38,40,45,46,50,57,59,63,64,73,75,78,81,88,91,99,100,104,107,113,129,135,138,142,146,162,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'AccessArray':([2,12,19,38,40,45,46,50,57,59,63,64,73,75,78,81,88,91,99,100,104,107,113,129,135,138,142,146,162,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'FunScope':([11,],[44,]),'ArraySize':([11,53,85,106,109,133,],[48,48,120,48,141,141,]),'Conds':([22,],[60,]),'Cond':([22,112,],[61,147,]),'OpLogico':([24,],[64,]),'OpMod':([30,115,],[73,73,]),'OpPlus':([31,116,],[75,75,]),'OpMult':([32,117,],[78,78,]),'OpPow':([33,118,],[81,81,]),'DeclArraySize':([43,],[87,]),'FunCases':([44,],[91,]),'FunExtra':([44,],[92,]),'FunArg':([45,],[94,]),'FunRec':([45,],[95,]),'Body':([57,91,135,142,146,162,],[105,124,156,159,163,166,]),'ElseScope':([105,],[135,]),'Code':([107,],[138,]),'Cases':([111,],[143,]),'Case':([111,143,],[144,161,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Start","S'",1,None,None,None),
  ('Start -> Axiom','Start',1,'p_start_axiom','yacc.py',11),
  ('Start -> <empty>','Start',0,'p_start_empty','yacc.py',19),
  ('Axiom -> Axiom Block','Axiom',2,'p_axiom_code','yacc.py',24),
  ('Axiom -> Axiom Function','Axiom',2,'p_axiom_function','yacc.py',30),
  ('Axiom -> <empty>','Axiom',0,'p_axiom_empty','yacc.py',36),
  ('Code -> Code Block','Code',2,'p_code_block','yacc.py',41),
  ('Code -> Block','Code',1,'p_code_empty','yacc.py',46),
  ('Block -> FunCall ;','Block',2,'p_block_funcall','yacc.py',51),
  ('Block -> Exp ;','Block',2,'p_block_exp','yacc.py',59),
  ('Block -> If','Block',1,'p_block_if','yacc.py',64),
  ('Block -> IfElse','Block',1,'p_block_ifelse','yacc.py',69),
  ('Block -> While','Block',1,'p_block_while','yacc.py',74),
  ('Block -> Switch','Block',1,'p_block_switch','yacc.py',79),
  ('Body -> { }','Body',2,'p_body_empty','yacc.py',88),
  ('Body -> Block','Body',1,'p_body_block','yacc.py',93),
  ('Body -> { Code }','Body',3,'p_body_code','yacc.py',98),
  ('Function -> ID FunScope FunCases Body','Function',4,'p_function','yacc.py',103),
  ('FunScope -> :','FunScope',1,'p_funscope','yacc.py',140),
  ('FunCases -> FunExtra RARROW ID','FunCases',3,'p_funcases_funextra_rarrow','yacc.py',146),
  ('FunCases -> RARROW ID','FunCases',2,'p_funcases_rarrow','yacc.py',166),
  ('FunCases -> FunExtra','FunCases',1,'p_funcases_funextra','yacc.py',176),
  ('FunCases -> <empty>','FunCases',0,'p_funcases_empty','yacc.py',190),
  ('FunExtra -> FunExtra , ID','FunExtra',3,'p_funextra_rec','yacc.py',195),
  ('FunExtra -> ID','FunExtra',1,'p_funextra_empty','yacc.py',201),
  ('IfScope -> IF','IfScope',1,'p_if_scope','yacc.py',206),
  ('If -> IfScope AtribOp Body','If',3,'p_if','yacc.py',212),
  ('ElseScope -> ELSE','ElseScope',1,'p_else_scope','yacc.py',224),
  ('IfElse -> IfScope AtribOp Body ElseScope Body','IfElse',5,'p_ifelse','yacc.py',232),
  ('WhileScope -> WHILE','WhileScope',1,'p_while_scope','yacc.py',247),
  ('While -> WhileScope ( AtribOp ) Body','While',5,'p_while','yacc.py',253),
  ('SwitchScope -> SWITCHCOND','SwitchScope',1,'p_switch_scopecond','yacc.py',268),
  ('SwitchScope -> SWITCHCASE','SwitchScope',1,'p_switch_scopecase','yacc.py',280),
  ('Switch -> SwitchScope Conds { Cases }','Switch',5,'p_switch','yacc.py',293),
  ('Conds -> Conds , Cond','Conds',3,'p_conds_rec','yacc.py',335),
  ('Conds -> Cond','Conds',1,'p_conds_base','yacc.py',341),
  ('Cond -> ID ( AtribOp )','Cond',4,'p_cond_id','yacc.py',346),
  ('Cond -> ( AtribOp )','Cond',3,'p_cond_empty','yacc.py',352),
  ('Cases -> Cases Case','Cases',2,'p_cases_rec','yacc.py',358),
  ('Cases -> Case','Cases',1,'p_cases_base','yacc.py',364),
  ('Case -> ID : Body','Case',3,'p_case_id','yacc.py',369),
  ('Case -> : Body','Case',2,'p_case_empty','yacc.py',376),
  ('Exp -> STRING PRINT','Exp',2,'p_exp_print','yacc.py',390),
  ('Exp -> Atrib','Exp',1,'p_exp_atrib','yacc.py',395),
  ('Exp -> Op','Exp',1,'p_exp_op','yacc.py',400),
  ('Exp -> Decl','Exp',1,'p_exp_decl','yacc.py',405),
  ('Exp -> DeclArray','Exp',1,'p_exp_declarray','yacc.py',410),
  ('Exp -> DeclAtrib','Exp',1,'p_exp_declatrib','yacc.py',415),
  ('AtribOp -> AtribNum','AtribOp',1,'p_atribop_atribnum','yacc.py',420),
  ('AtribOp -> Op','AtribOp',1,'p_atribop_op','yacc.py',425),
  ('Decl -> ID ID','Decl',2,'p_decl','yacc.py',430),
  ('DeclArray -> ID ID DeclArraySize','DeclArray',3,'p_declarray','yacc.py',454),
  ('DeclArraySize -> DeclArraySize [ NUM ]','DeclArraySize',4,'p_declarraysize_rec','yacc.py',479),
  ('DeclArraySize -> [ NUM ]','DeclArraySize',3,'p_declarraysize_empty','yacc.py',485),
  ('AtribArray -> ID ArraySize LARROW AtribOp','AtribArray',4,'p_atribarray_Leftatribop','yacc.py',490),
  ('AtribArray -> AtribOp RARROW ID ArraySize','AtribArray',4,'p_atribarray_Rightatribop','yacc.py',525),
  ('AccessArray -> ID ArraySize','AccessArray',2,'p_accessarray','yacc.py',553),
  ('ArraySize -> ArraySize [ AtribOp ]','ArraySize',4,'p_arraysize_rec','yacc.py',576),
  ('ArraySize -> [ AtribOp ]','ArraySize',3,'p_arraysize_empty','yacc.py',581),
  ('DeclAtrib -> ID ID LARROW AtribOp','DeclAtrib',4,'p_declatrib_left','yacc.py',586),
  ('DeclAtrib -> AtribOp RARROW ID ID','DeclAtrib',4,'p_declatrib_right','yacc.py',608),
  ('AtribNum -> ID LARROW AtribOp','AtribNum',3,'p_atribnum_left','yacc.py',630),
  ('AtribNum -> AtribOp RARROW ID','AtribNum',3,'p_atribnum_right','yacc.py',635),
  ('AtribNum -> AtribArray','AtribNum',1,'p_atribnum_array','yacc.py',641),
  ('Atrib -> ID LARROW AtribOp','Atrib',3,'p_atrib_left','yacc.py',646),
  ('Atrib -> AtribOp RARROW ID','Atrib',3,'p_atrib_right','yacc.py',651),
  ('Atrib -> ID SWAP ID','Atrib',3,'p_atrib_equiv','yacc.py',656),
  ('Atrib -> AtribArray','Atrib',1,'p_atrib_array','yacc.py',698),
  ('Op -> OpBin','Op',1,'p_op_opbin','yacc.py',708),
  ('OpUno -> NEG Base','OpUno',2,'p_opuno_neg','yacc.py',713),
  ('OpUno -> AccessArray','OpUno',1,'p_opuno_accessarray','yacc.py',718),
  ('OpUno -> SUB Base','OpUno',2,'p_opuno_minus','yacc.py',723),
  ('OpUno -> Base PRINT','OpUno',2,'p_opuno_print','yacc.py',728),
  ('OpBin -> OpBin OpLogico TermMod','OpBin',3,'p_opbin_rec','yacc.py',735),
  ('OpBin -> TermMod','OpBin',1,'p_opbin_base','yacc.py',740),
  ('TermMod -> TermMod OpMod TermPlus','TermMod',3,'p_opmod_rec','yacc.py',745),
  ('TermMod -> TermPlus','TermMod',1,'p_opmod_base','yacc.py',750),
  ('TermPlus -> TermPlus OpPlus TermMult','TermPlus',3,'p_termplus_rec','yacc.py',755),
  ('TermPlus -> TermMult','TermPlus',1,'p_termplus_base','yacc.py',760),
  ('TermMult -> TermMult OpMult TermPow','TermMult',3,'p_termmult_rec','yacc.py',765),
  ('TermMult -> TermPow','TermMult',1,'p_termmult_base','yacc.py',770),
  ('TermPow -> TermPow OpPow Base','TermPow',3,'p_termpow_rec','yacc.py',775),
  ('TermPow -> Base','TermPow',1,'p_termpow_base','yacc.py',780),
  ('Base -> OpUno','Base',1,'p_base_opuno','yacc.py',785),
  ('Base -> ( AtribOp )','Base',3,'p_base_exp','yacc.py',790),
  ('Base -> ID','Base',1,'p_base_id','yacc.py',795),
  ('Base -> NUM','Base',1,'p_base_num','yacc.py',809),
  ('Base -> FunCall','Base',1,'p_base_funcall','yacc.py',814),
  ('Base -> READ','Base',1,'p_base_read','yacc.py',824),
  ('FunCall -> ID ( FunArg )','FunCall',4,'p_funcall','yacc.py',829),
  ('FunArg -> FunRec','FunArg',1,'p_funarg_funrec','yacc.py',850),
  ('FunArg -> <empty>','FunArg',0,'p_funarg_empty','yacc.py',855),
  ('FunRec -> FunRec , AtribOp','FunRec',3,'p_funrec_rec','yacc.py',860),
  ('FunRec -> AtribOp','FunRec',1,'p_funrec_base','yacc.py',866),
  ('OpLogico -> DIFF','OpLogico',1,'p_oplogico_diff','yacc.py',871),
  ('OpLogico -> AND','OpLogico',1,'p_oplogico_and','yacc.py',875),
  ('OpLogico -> OR','OpLogico',1,'p_oplogico_or','yacc.py',880),
  ('OpLogico -> LESSER','OpLogico',1,'p_oplogico_lesser','yacc.py',885),
  ('OpLogico -> GREATER','OpLogico',1,'p_oplogico_greater','yacc.py',890),
  ('OpLogico -> LEQ','OpLogico',1,'p_oplogico_leq','yacc.py',895),
  ('OpLogico -> GEQ','OpLogico',1,'p_oplogico_geq','yacc.py',900),
  ('OpLogico -> EQUAL','OpLogico',1,'p_oplogico_equal','yacc.py',905),
  ('OpMod -> MOD','OpMod',1,'p_opmod_mod','yacc.py',909),
  ('OpPlus -> ADD','OpPlus',1,'p_opplus_add','yacc.py',913),
  ('OpPlus -> SUB','OpPlus',1,'p_opplus_sub','yacc.py',918),
  ('OpMult -> MUL','OpMult',1,'p_opmult_mul','yacc.py',923),
  ('OpMult -> DIV','OpMult',1,'p_opmult_div','yacc.py',928),
  ('OpPow -> POW','OpPow',1,'p_oppow','yacc.py',933),
]
